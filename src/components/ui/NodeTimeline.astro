---
// NodeTimeline.astro - Simple working timeline
---

<div class="timeline-wrapper">
  <div class="timeline-header">
    <h1>Fire Protection System Workflow</h1>
    <p>Automated process from submission to completion</p>
  </div>

  <div class="timeline-container">
    <div class="timeline-track">
      <!-- Nodes will be added here -->
    </div>
  </div>

  <div class="controls">
    <button id="play-btn">Play</button>
    <button id="pause-btn">Pause</button>
    <button id="reset-btn">Reset</button>
  </div>
</div>

<style>
  :global(.timeline-wrapper) {
    width: 100%;
    height: 100vh;
    background: #1a1a2e;
    color: white;
    font-family: Arial, sans-serif;
    overflow: hidden;
  }

  :global(.timeline-header) {
    padding: 20px;
    text-align: center;
  }

  :global(.timeline-header h1) {
    margin: 0 0 10px 0;
    color: #3b82f6;
    font-size: 2rem;
  }

  :global(.timeline-header p) {
    margin: 0;
    color: #94a3b8;
  }

  :global(.timeline-container) {
    height: 60vh;
    position: relative;
    overflow: hidden;
    background: linear-gradient(90deg, #1a1a2e 0%, #16213e 100%);
  }

  :global(.timeline-track) {
    position: relative;
    height: 100%;
    display: flex;
    align-items: center;
    gap: 50px;
    padding: 0 50px;
    animation: scroll 20s linear infinite;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-100%);
    }
  }

  :global(.timeline-track.paused) {
    animation-play-state: paused;
  }

  :global(.node) {
    min-width: 200px;
    background: #2d3748;
    border: 2px solid #4a5568;
    border-radius: 10px;
    padding: 20px;
    text-align: center;
    position: relative;
    flex-shrink: 0;
  }

  :global(.node::after) {
    content: "→";
    position: absolute;
    right: -30px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 24px;
    color: #3b82f6;
  }

  :global(.node:last-child::after) {
    display: none;
  }

  :global(.node-icon) {
    font-size: 32px;
    margin-bottom: 10px;
  }

  :global(.node-title) {
    font-size: 18px;
    font-weight: bold;
    margin: 0 0 8px 0;
    color: white;
  }

  :global(.node-description) {
    font-size: 14px;
    color: #a0aec0;
    margin: 0 0 10px 0;
  }

  :global(.node-status) {
    font-size: 12px;
    padding: 4px 8px;
    border-radius: 4px;
    display: inline-block;
  }

  :global(.status-ready) {
    background: #48bb78;
    color: white;
  }
  :global(.status-processing) {
    background: #ed8936;
    color: white;
  }
  :global(.status-pending) {
    background: #e53e3e;
    color: white;
  }

  :global(.controls) {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
  }

  :global(.controls button) {
    background: #3b82f6;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
  }

  :global(.controls button:hover) {
    background: #2b6cb0;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const track = document.querySelector(".timeline-track");
    const playBtn = document.getElementById("play-btn");
    const pauseBtn = document.getElementById("pause-btn");
    const resetBtn = document.getElementById("reset-btn");

    // Create workflow nodes
    const workflow = [
      {
        icon: "📄",
        title: "Submit Documents",
        description: "Upload PDF files and drawings",
        status: "ready",
      },
      {
        icon: "👀",
        title: "Initial Review",
        description: "System checks file format",
        status: "processing",
      },
      {
        icon: "🔍",
        title: "Technical Analysis",
        description: "AI-powered requirements analysis",
        status: "processing",
      },
      {
        icon: "📋",
        title: "Compliance Check",
        description: "Verify against fire codes",
        status: "pending",
      },
      {
        icon: "👨‍💼",
        title: "Engineer Review",
        description: "Professional validation",
        status: "pending",
      },
      {
        icon: "✅",
        title: "Final Approval",
        description: "System approved for implementation",
        status: "pending",
      },
      {
        icon: "🚀",
        title: "Implementation",
        description: "Fire protection system installation",
        status: "ready",
      },
    ];

    // Add nodes to timeline
    workflow.forEach((node) => {
      const nodeElement = document.createElement("div");
      nodeElement.className = "node";
      nodeElement.innerHTML = `
        <div class="node-icon">${node.icon}</div>
        <div class="node-title">${node.title}</div>
        <div class="node-description">${node.description}</div>
        <div class="node-status status-${node.status}">${node.status}</div>
      `;
      track?.appendChild(nodeElement);
    });

    // Control functions
    playBtn?.addEventListener("click", () => {
      track?.classList.remove("paused");
    });

    pauseBtn?.addEventListener("click", () => {
      track?.classList.add("paused");
    });

    resetBtn?.addEventListener("click", () => {
      track?.classList.add("paused");

      track.style.animation = "none";
      track.offsetHeight; // Trigger reflow
      track.style.animation = "scroll 20s linear infinite";
    });
  });
</script>
