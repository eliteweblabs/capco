---
import BoxIcon from "../common/BoxIcon.astro";
import ProposalManager from "./ProposalManager.astro";

interface Props {
  project: any;
  projectStatus?: number;
  currentUser?: any;
  globalInputClasses?: string;
  globalSecondaryTextClasses?: string;
  globalPrimaryTextClasses?: string;
  statusData?: any;
  existingInvoice?: any;
  invoiceId?: any;
}

const {
  project,
  projectStatus = 0,
  currentUser,
  globalInputClasses,
  globalSecondaryTextClasses,
  globalPrimaryTextClasses,
  statusData,
} = Astro.props;

const currentRole = currentUser?.profile?.role;
const projectId = project?.id;

// Fetch invoice from API (single source of truth) during SSR
let existingInvoice: any = null;
let invoiceId: any = null;

try {
  const baseUrl = Astro.url.origin;
  const response = await fetch(`${baseUrl}/api/get-project-invoice?projectId=${projectId}`);
  const data = await response.json();

  if (data.success && data.invoice) {
    existingInvoice = data.invoice;
    invoiceId = data.invoice.id;
    console.log("✅ [ProposalManager SSR] Found existing invoice via API:", invoiceId);
  } else {
    console.log("ℹ️ [ProposalManager SSR] No existing invoice found");
  }
} catch (error) {
  console.error("❌ [ProposalManager SSR] Error fetching invoice via API:", error);
}

function getStatusAlert() {
  return (
    currentRole === "Client" &&
    (Number(projectStatus) < 20
      ? "Submit your project documents first."
      : Number(projectStatus) >= 20 && Number(projectStatus) < 30
        ? "Proposal is being generated."
        : Number(projectStatus) >= 30 && Number(projectStatus) < 40 && invoiceId && existingInvoice
          ? "Please review your proposal  ."
          : Number(projectStatus) >= 40 &&
              Number(projectStatus) < 50 &&
              invoiceId &&
              existingInvoice
            ? "Please sign off on your proposal."
            : Number(projectStatus) >= 50 && Number(projectStatus) < 60
              ? "Please pay your deposit."
              : "Estimate is being generated.")
  );
}
const statusAlert = getStatusAlert();
---

<div id="content-proposal" class="tab-content hidden">
  {
    statusAlert && (
      <div class="mb-4 rounded-lg border border-blue-200 bg-blue-50 p-4 dark:border-blue-800 dark:bg-blue-900/20">
        <div class="flex items-start">
          <BoxIcon
            name="info-circle"
            class="mr-2 mt-0.5 text-lg text-blue-600 dark:text-blue-400"
          />
          <div class="text-blue-800 dark:text-blue-400">
            <h3 class="text-lg">{statusAlert}</h3>
          </div>
        </div>
      </div>
    )
  }

  {
    currentRole === "Client" ? (
      <ProposalManager
        projectId={projectId}
        project={project}
        projectStatus={projectStatus}
        currentUser={currentUser}
        globalInputClasses={globalInputClasses || ""}
        globalSecondaryTextClasses={globalSecondaryTextClasses || ""}
        globalPrimaryTextClasses={globalPrimaryTextClasses || ""}
        statusData={statusData}
        existingInvoice={existingInvoice}
        invoiceId={invoiceId}
      />
    ) : (
      <ProposalManager
        projectId={projectId}
        project={project}
        projectStatus={projectStatus}
        currentUser={currentUser}
        globalInputClasses={globalInputClasses || ""}
        globalSecondaryTextClasses={globalSecondaryTextClasses || ""}
        globalPrimaryTextClasses={globalPrimaryTextClasses || ""}
        statusData={statusData}
        existingInvoice={existingInvoice}
        invoiceId={invoiceId}
      />
    )
  }
</div>
