---

---

<!-- Google Maps Places API - Load only if API key is available -->
<script>
  // Wait for environment variables to be loaded, then load Google Maps
  function loadGoogleMaps() {
    if ((window as any).GOOGLE_MAPS_API_KEY && (window as any).GOOGLE_MAPS_API_KEY.trim() !== "") {
      // Check if script already exists
      if (document.getElementById("google-maps-script")) {
        // // console.log("‚úÖ [GoogleMaps] Google Maps API already loaded");
        return;
      }

      const script = document.createElement("script");
      script.async = true;
      script.defer = true;
      // Use the stable version of Google Maps API with Places library
      script.src = `https://maps.googleapis.com/maps/api/js?key=${(window as any).GOOGLE_MAPS_API_KEY}&libraries=places&loading=async`;
      script.id = "google-maps-script";

      // Add error handling
      script.onerror = function () {
        console.error("‚ùå [GoogleMaps] Failed to load Google Maps API script");
      };

      script.onload = function () {
        // // console.log("‚úÖ [GoogleMaps] Google Maps API (stable version) loaded successfully");
        // // console.log("üó∫Ô∏è [GoogleMaps] Available APIs:", {
        //   maps: !!window.google?.maps,
        //   places: !!window.google?.maps?.places,
        //   autocomplete: !!window.google?.maps?.places?.Autocomplete,
        //   placeAutocompleteElement: !!window.google?.maps?.places?.PlaceAutocompleteElement,
        //   version: window.google?.maps?.version,
        // });

        // Dispatch custom event for components to listen to
        window.dispatchEvent(new CustomEvent("googleMapsLoaded"));
      };

      document.head.appendChild(script);
    } else {
      console.warn(
        "‚ùå [GoogleMaps] Google Maps API key not found. Maps functionality will be disabled."
      );
    }
  }

  // Try to load immediately, and also on DOMContentLoaded as fallback
  loadGoogleMaps();
  document.addEventListener("DOMContentLoaded", loadGoogleMaps);
</script>
