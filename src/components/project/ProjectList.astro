---
import BoxIcon from "../common/BoxIcon.astro";
import ProjectItem from "./ProjectItem.astro";

interface Props {
  projects: any[];
  currentUser: any;
  statusesObject: any;
  staffOptions: any;
}

// // const { currentLocale } = Astro;
// // const i18n = getI18N({ currentLocale });
const { projects, statusesObject, currentUser, staffOptions } = Astro.props;

// console.log("üîç [DEBUG] ProjectList statusesObject:", statusesObject);
// console.log("üîç [DEBUG] ProjectList currentUser:", currentUser);
// console.log("üîç [DEBUG] ProjectList currentRole:", currentRole);
// console.log("üîç [DEBUG] ProjectList projects:", projects);

// Process each project's status in the frontmatter
const processedProjects = projects.map((project: any) => {
  const currentStatusObj = statusesObject[project.status] || {
    status_name: "Unknown Status",
    status_tab: null,
    status_slug: null,
    status_code: project.status,
  };
  return {
    ...project,
    currentStatusObj,
    currentStatusName: currentStatusObj.status_name,
    currentStatusInt: currentStatusObj.status_code,
    currentStatusSlug: currentStatusObj.status_slug,
    currentStatusTab: currentStatusObj.status_tab,
  };
});

// Create array of 36 datetime options (9 days √ó 4 times per day)
const createDueDateOptions = () => {
  const options = [];
  const now = new Date();
  const times = [8, 12, 16, 20]; // 8am, 12pm, 4pm, 8pm

  for (let day = 0; day < 9; day++) {
    for (const hour of times) {
      const date = new Date(now);
      date.setDate(date.getDate() + day);
      date.setHours(hour, 0, 0, 0); // Set to exact hour, 0 minutes/seconds

      const dateStr = date.toISOString();
      const displayDate = date.toLocaleDateString();
      const displayTime = date.toLocaleTimeString([], { hour: "numeric", minute: "2-digit" });

      let label;
      if (day === 0) {
        label = `Today at ${displayTime}`;
      } else if (day === 1) {
        label = `Tomorrow at ${displayTime}`;
      } else {
        label = `${displayDate} at ${displayTime}`;
      }

      options.push({
        value: dateStr,
        label: label,
      });
    }
  }

  return options;
};

const dueDateOptions = createDueDateOptions();
---

<!-- Project List-->
<table
  id="project-list"
  class="t6gkcSf0Bt4MLItXvDJ_ upQp7iWehfaU8VTbfx_w c8dCx6gnV43hTOLV6ks5 PeR2JZ9BZHYIH8Ea3F36 XIIs8ZOri3wm8Wnj9N_y"
>
  <thead
    class="jtAJHOc7mn7b4IKRO59D gMXmdpOPfqG_3CKkL0VD sdSaZcRa4_We5kKaX4pf PeR2JZ9BZHYIH8Ea3F36 _1jTZ8KXRZul60S6czNi XIIs8ZOri3wm8Wnj9N_y"
  >
    <tr>
      <!-- <th scope="col" class="_wYiJGbRZyFZeCc8y7Sf">
        <div class="YRrCJSr_j5nopfm4duUc Q_jg_EPdNf9eDMn1mLI2">
          <input
            id="checkbox-all"
            type="checkbox"
            class="_o2IXcpM0qnG3JPReKus E9GV5sZJIbfO_GEQ_moc Y3FxyuXtj2gecrGXvLEI vpDN1VEJLu5FmLkr5WCk _9dH7mrOkzM4RTmidHTs _6MyV8SXoSWq_PQ6KWI6 _q0p_O8QLU1paqtuqmI2 GdTcGtoKP5_bET3syLDl Mmx5lX7HVdrWCgh3EpTP jqg6J89cvxmDiFpnV56r _GL8_lXmAgroY9ZBWGLH BO8JrKgx4qkHG27c4wVR"
          />
          <label for="checkbox-all" class="_DVAfiyo21kM68EUVzEQ">checkbox</label>
        </div>
      </th> -->
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Name</th
      >

      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Company</th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Status</th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Files</th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Assigned To</th
      >
      <th
        scope="col"
        class="Gfdanp5CT9GnXJoD8ykd RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Progress</th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        ><span class="button-text">Elapsed Time</span><BoxIcon name="time" size="xs" class="" /></th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Updated</th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz"
        >Due Date</th
      >
      <th scope="col" class="RZmKBZs1E1eXw8vkE6jY i8v96MUlFwGv9qJUkAx7 yM_AorRf2jSON3pDsdrz">
        <span class="_DVAfiyo21kM68EUVzEQ">Actions</span>
      </th>
    </tr>
  </thead>
  <tbody>
    {
      projects.length > 0 &&
        processedProjects.map((project: any) => {
          // console.log("üîç [DEBUG] ProjectList passing project to ProjectListItem:", {
          //   id: project.id,
          //   title: project.title,
          //   featured_image: project.featured_image,
          //   featured_image_data: project.featured_image_data,
          // });
          return (
            <ProjectItem
              project={project}
              currentRole={currentUser?.role || ""}
              projectStatusesObject={statusesObject}
              currentStatusName={project.currentStatusName}
              currentStatusInt={project.currentStatusInt}
              currentStatusSlug={project.currentStatusSlug}
              currentStatusTab={project.currentStatusTab}
              staffOptions={staffOptions}
              dueDateOptions={dueDateOptions}
            />
          );
        })
    }
  </tbody>
</table>
<!-- No Projects Message for Status Filters -->
<!-- <div id="no-projects-message" class="hidden py-16 text-center text-black dark:text-white">
    <div class="mx-auto max-w-md">
      <BoxIcon name="x" variant="outline" />
      <h3 class="mb-2 text-lg font-medium">No Projects Found</h3>
      <p id="no-projects-text" class="text-sm">No projects currently at this status.</p>
    </div>
  </div>
</div> -->
