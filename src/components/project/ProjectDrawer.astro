---
import BoxIcon from "../common/BoxIcon.astro";
import Button from "../common/Button.astro";

interface Props {
  isAuth: boolean;
  currentUser: any;
  currentRole: string | null;
  session: any;
}

const { isAuth, currentUser, currentRole, session } = Astro.props;

// Debug logging
console.log("üîç [AuthIcon] Props:", {
  isAuth,
  currentUser: !!currentUser,
  currentRole,
  session: !!session,
});

const userProfile = currentUser?.profile || null;
---

<!-- drawer component -->
<div
  id="drawer-right-example"
  class="fixed top-0 right-0 z-40 h-screen p-4 overflow-y-auto transition-transform translate-x-full bg-white w-80 dark:bg-gray-800"
  tabindex="-1"
  aria-labelledby="drawer-right-label"
>
  {/* User Info Section */}
  <div class="border-b border-border-light px-4 py-6 dark:border-border-dark">
    <div class="flex items-center">
      <div class="flex-shrink-0">
        <img
          id="drawer-avatar"
          src={currentUser?.user_metadata?.avatar_url || ""}
          alt="User avatar"
          class="h-12 w-12 rounded-full"
          onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
        />
        <BoxIcon name="user" style="display:none;" class="text-muted bx-lg" />
      </div>
      <div class="ml-4">
        <p class="text-base font-medium text-primary dark:text-primary-dark">
          {userProfile?.company_name || currentUser?.email?.split("@")[0] || "User"}
        </p>
        <p class="text-sm text-secondary dark:text-secondary-dark">
          {currentUser?.email}
        </p>
        <p class="text-sm text-primary-600 dark:text-primary-400 font-medium">
          {currentRole || "User"}
        </p>
      </div>
    </div>
  </div>

  <button
    type="button"
    data-drawer-hide="drawer-right-example"
    aria-controls="drawer-right-example"
    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 end-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white"
  >
    <svg
      class="w-3 h-3"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 14 14"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
    </svg>
    <span class="sr-only">Close menu</span>
  </button>

  {/* Header */}
  <div
    class="flex items-center justify-between border-b border-border-light px-4 py-6 dark:border-border-dark"
  >
    <!--           
          <button
            type="button"
            id="profile-drawer-close"
            class="rounded-lg bg-transparent p-1.5 text-sm text-muted hover:bg-neutral-200 hover:text-primary dark:hover:bg-neutral-600 dark:hover:text-primary-dark"
          >
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                clip-rule="evenodd"
              />
            </svg>
          </button> -->
  </div>

  {/* Menu Items */}
  <div class="flex-1 overflow-y-auto px-4 py-6">
    <div class="space-y-2">
      <a
        href="/dashboard"
        class="flex items-center rounded-lg px-3 py-2 text-base font-medium text-primary dark:text-primary-dark hover:bg-neutral-100 dark:hover:bg-neutral-700"
      >
        <BoxIcon name="building" class="mr-3 bx-sm" />
        Dashboard
      </a>

      <a
        href="/profile"
        class="flex items-center rounded-lg px-3 py-2 text-base font-medium text-primary dark:text-primary-dark hover:bg-neutral-100 dark:hover:bg-neutral-700"
      >
        <BoxIcon name="user" class="mr-3 bx-sm" />
        My Profile
      </a>
    </div>
  </div>

  {/* Footer */}
  <div class="border-t border-border-light px-4 py-6 dark:border-border-dark">
    <button
      id="logout-btn"
      class="flex w-full items-center justify-center rounded-lg bg-danger-500 px-3 py-2 text-base font-medium text-white hover:bg-danger-600"
    >
      <BoxIcon name="log-out" class="mr-3 bx-sm" />
      Logout
    </button>
  </div>
</div>

<!-- <div class="grid grid-cols-2 gap-4">
    <a
      href="#"
      class="px-4 py-2 text-sm font-medium text-center text-gray-900 bg-white border border-gray-200 rounded-lg focus:outline-none hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
      >Learn more</a
    >
    <a
      href="#"
      class="inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800"
      >Get access <svg
        class="rtl:rotate-180 w-3.5 h-3.5 ms-2"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"></path>
      </svg></a
    >
  </div> -->

<!-- drawer component -->

<!-- Project Drawer -->
<!-- <div
  id="project-drawer"
  class="fixed inset-0 z-50 hidden overflow-y-auto"
  aria-labelledby="project-drawer-title"
  role="dialog"
  aria-modal="true"
  data-drawer-target="project-drawer"
  data-drawer-backdrop="true"
  data-drawer-placement="right"
>
  {/* Backdrop */}
  <div
    class="fixed inset-0 bg-gray-900 bg-opacity-50 transition-opacity"
    id="project-drawer-backdrop"
  >
  </div>

  {/* Drawer */}
  <div class="fixed right-0 top-0 z-50 h-screen w-80 transform transition-transform">
    <div class="flex h-full flex-col bg-white shadow-xl dark:bg-gray-800">
      {/* Header */}
      <div
        class="flex items-center justify-between border-b border-gray-200 px-4 py-6 dark:border-gray-700"
      >
        <h2 id="project-drawer-title" class="text-lg font-semibold text-gray-900 dark:text-white">
          Projects
        </h2>
        <button
          type="button"
          id="project-drawer-close"
          class="rounded-lg bg-transparent p-1.5 text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900 dark:hover:bg-gray-600 dark:hover:text-white"
        >
          <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
            <path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"></path>
          </svg>
        </button>
      </div>

      {/* Projects List */}
      <div class="flex-1 overflow-y-auto px-4 py-6">
        <div class="space-y-2">
          {
            projects.map((project) => (
              <a
                href={`/project/${project.id}`}
                class={`flex items-center rounded-lg px-3 py-3 text-sm font-medium transition-colors ${
                  project.id.toString() === currentProjectId
                    ? "bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-200"
                    : "text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
                }`}
              >
                <div class="flex-1 min-w-0">
                  <p class="truncate font-medium">{project.title}</p>
                  <p class="truncate text-xs text-gray-500 dark:text-gray-400">{project.address}</p>
                </div>
                {project.id.toString() === currentProjectId && (
                  <BoxIcon name="check" class="ml-2 bx-sm text-blue-600 dark:text-blue-400" />
                )}
              </a>
            ))
          }
        </div>
      </div>

      {/* Footer */}
      <div class="border-t border-gray-200 px-4 py-6 dark:border-gray-700">
        <Button href="/dashboard" variant="primary" size="sm" fullWidth class="rounded-full">
          <BoxIcon name="plus" class="mr-2 bx-sm" />
          New Project
        </Button>
      </div>
    </div>
  </div>
</div> -->

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Flowbite will handle the drawer animations automatically
    // We just need to close the drawer when clicking on project links
    const projectDrawer = document.getElementById("project-drawer");
    const projectLinks = projectDrawer?.querySelectorAll("a");

    projectLinks?.forEach((link) => {
      link.addEventListener("click", () => {
        // Close drawer when navigating to a project
        const drawer = document.getElementById("project-drawer");
        if (drawer) {
          drawer.classList.add("hidden");
        }
      });
    });
  });
</script>
