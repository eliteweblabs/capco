---
import SimpleIcon from "../common/SimpleIcon.astro";

export interface Props {
  project?: any;
  currentUser?: any;
  secondaryTextClasses?: string;
  primaryTextClasses?: string;
  globalInputClasses?: string;
  statusData?: any;
}

const {
  project,
  currentUser,
  secondaryTextClasses,
  primaryTextClasses,
  globalInputClasses,
  statusData,
} = Astro.props;

const currentRole = currentUser?.profile?.role;

if (currentRole === "Client") {
  return;
}
---

<div
  id="content-generate-pdf"
  class="tab-content p-4 color-background relative min-h-[calc(100dvh-24rem)]"
>
  <div class="rounded-lg bg-gray-100 p-6 shadow-lg color-background">
    <div class="text-center">
      <div class="mb-6">
        <SimpleIcon name="file-blank" class="mb-4 text-6xl text-blue-600" />
        <h2 class={`${primaryTextClasses} mb-2`}>Generate PDF Documents</h2>
        <p class={`${secondaryTextClasses}`}>
          Create custom PDF documents for this project using our template system
        </p>
      </div>

      <div class="mb-8 grid grid-cols-1 gap-6 md:grid-cols-2">
        <!-- Quick Actions -->
        <div class="rounded-lg bg-gray-50 p-6 dark:bg-gray-700">
          <h3 class={`${primaryTextClasses} mb-4`}>Quick Actions</h3>
          <div class={`${secondaryTextClasses} space-y-3`}>
            <button
              id="generateFirePlan"
              class="flex w-full items-center justify-center rounded-lg bg-blue-600 px-4 py-3 text-white transition-colors hover:bg-blue-700"
            >
              <SimpleIcon name="file-blank" class="mr-2" />
              Generate
            </button>
            <!-- <button
              id="generateProposal"
              class="flex w-full items-center justify-center rounded-lg bg-green-600 px-4 py-3 text-white transition-colors hover:bg-green-700"
            >
              <SimpleIcon name="file" class="mr-2" />
              Generate Proposal
            </button>
            <button
              id="generateContract"
              class="flex w-full items-center justify-center rounded-lg bg-purple-600 px-4 py-3 text-white transition-colors hover:bg-purple-700"
            >
              <SimpleIcon name="search" class="mr-2" />
              Generate Contract
            </button> -->
          </div>
        </div>

        <!-- Custom Generation -->
        <div class="rounded-lg bg-gray-50 p-6 dark:bg-gray-700">
          <h3 class={`${primaryTextClasses} mb-4`}>Custom Generation</h3>
          <div class="space-y-3">
            <button
              id="openCustomGenerator"
              class="flex w-full items-center justify-center rounded-lg bg-gray-600 px-4 py-3 text-white transition-colors hover:bg-gray-700"
            >
              <SimpleIcon name="settings" class="mr-2" />
              Open Custom Generator
            </button>
            <button
              id="viewTemplates"
              class="flex w-full items-center justify-center rounded-lg bg-indigo-600 px-4 py-3 text-white transition-colors hover:bg-indigo-700"
            >
              <SimpleIcon name="library" class="mr-2" />
              Manage Templates
            </button>
          </div>
        </div>
      </div>

      <!-- Recent Documents -->
      <div class="rounded-lg bg-gray-50 p-6 dark:bg-gray-700">
        <h3 class={`${primaryTextClasses} mb-4`}>Recent Documents</h3>
        <div id="recentDocuments" class="space-y-3">
          <div class="py-4 text-center text-gray-500 dark:text-gray-400">
            <SimpleIcon name="file-blank" class="mb-2 text-2xl" />
            <p>No documents generated yet</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script
  define:vars={{
    project,
    currentUser,
    globalInputClasses,
    secondaryTextClasses,
    primaryTextClasses,
  }}
  is:inline
>
  // Load recent documents on page load
  document.addEventListener("DOMContentLoaded", async () => {
    await loadRecentDocuments();
  });
  const projectId = project?.id;
  const currentRole = currentUser?.profile?.role;

  async function loadRecentDocuments() {
    try {
      // This would fetch recent documents for the project
      // For now, we'll show a placeholder
      const recentDocuments = document.getElementById("recentDocuments");
      recentDocuments.innerHTML = `
        <div class="text-gray-500 dark:text-gray-400 text-center py-4">
          <SimpleIcon name="file-blank" class="text-2xl mb-2" />
          <p>No documents generated yet</p>
        </div>
      `;
    } catch (error) {
      console.error("Error loading recent documents:", error);
    }
  }

  // Quick action handlers
  document.getElementById("generateFirePlan")?.addEventListener("click", () => {
    window.location.href = `/project/${projectId}/generate-pdf?template=fire-plan`;
  });

  document.getElementById("generateProposal")?.addEventListener("click", () => {
    window.location.href = `/project/${projectId}/generate-pdf?template=proposal`;
  });

  document.getElementById("generateContract")?.addEventListener("click", () => {
    window.location.href = `/project/${projectId}/generate-pdf?template=contract`;
  });

  document.getElementById("openCustomGenerator")?.addEventListener("click", () => {
    window.location.href = `/project/${projectId}/generate-pdf`;
  });

  document.getElementById("viewTemplates")?.addEventListener("click", () => {
    // This would open a template management interface
    if (window.showModal) {
      window.showModal(
        "info",
        "Template Management",
        "Template management feature coming soon!",
        3000
      );
    }
  });
</script>
