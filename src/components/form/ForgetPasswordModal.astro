---
import Button from "../common/Button.astro";
const { id, message, globalInputClasses } = Astro.props;
---

<!-- Forgot Password Button -->
<div class="mt-4 text-center">
  <Button
    type="button"
    id="forgot-password-btn"
    variant="ghost"
    size="sm"
    fullWidth
    icon="lock"
    iconPosition="left"
  >
    {message}
  </Button>
</div>

<!-- Form is now loaded dynamically from /partials/forgot-password-form/ -->

<script define:vars={{ globalInputClasses }}>
  // Handle forgot password modal and form submission
  document.addEventListener("DOMContentLoaded", () => {
    const forgotPasswordBtn = document.getElementById("forgot-password-btn");

    // Modal open/close functionality
    async function openModal() {
      try {
        const headers = new Headers();
        headers.set("x-global-input-classes", globalInputClasses);

        // Add search-specific headers if search is enabled

        const response = await fetch("/partials/forgot-password-form", {
          headers: headers,
        });

        if (!response.ok) {
          console.error("Failed to fetch forgot password form partial:", response.status);
          return;
        }

        // Fetch the form HTML from the partial
        const formHTML = await response.text();

        // Show modal with the form HTML
        window.showModal("info", "Forgot Password", formHTML);

        // Focus on email input when modal opens
        setTimeout(() => {
          const emailInput = document.querySelector('#forgot-password-form input[name="email"]');
          emailInput?.focus();
        }, 100);
      } catch (error) {
        console.error("Failed to load forgot password form:", error);
        // Fallback to simple alert
        alert("Failed to load password reset form. Please try again.");
      }
    }

    // Event listeners for modal
    forgotPasswordBtn?.addEventListener("click", openModal);

    // Handle form submission using event delegation (since form will be in modal)
    document.addEventListener("submit", async (e) => {
      const target = e.target;
      if (target.id === "forgot-password-form") {
        e.preventDefault();

        const emailInput = target.querySelector('input[name="email"]');
        const email = emailInput?.value.trim();

        if (!email) {
          if (window.showModal) {
            window.showModal("error", "Validation Error", "Please enter your email address.");
          } else {
            console.error("ðŸ”” [Validation Error] Please enter your email address.");
          }
          return;
        }

        // Find the submit button in the modal
        const sendResetLinkBtn = target.querySelector('button[type="submit"]');

        // Disable button and show loading state
        if (sendResetLinkBtn) {
          sendResetLinkBtn.disabled = true;
          sendResetLinkBtn.textContent = "Sending...";
        }

        try {
          const response = await fetch("/api/auth/forgot-password", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ email }),
          });

          const result = await response.json();

          if (response.ok) {
            if (window.showModal) {
              window.showModal({
                type: "success",
                title: "Reset Link Sent",
                message:
                  "If an account with that email exists, you will receive a password reset link shortly.",
                duration: 3500,
                redirect: { url: "/", delay: 3500, showCountdown: true },
              });
            } else {
              console.log(
                "ðŸ”” [Reset Link Sent] If an account with that email exists, you will receive a password reset link shortly."
              );
            }

            // Close the modal by finding and clicking the close button
            const closeBtn = document.querySelector('[data-modal-hide="forgot-password-modal"]');
            if (closeBtn) closeBtn.click();
          } else {
            if (window.showModal) {
              window.showModal(
                "error",
                "Error",
                result.error || "Failed to send reset link. Please try again."
              );
            } else {
              console.error(
                "ðŸ”” [Error]",
                result.error || "Failed to send reset link. Please try again."
              );
            }
          }
        } catch (error) {
          console.error("Forgot password error:", error);
          if (window.showModal) {
            window.showModal(
              "error",
              "Network Error",
              "Failed to send reset link. Please check your connection and try again."
            );
          } else {
            console.error(
              "ðŸ”” [Network Error] Failed to send reset link. Please check your connection and try again."
            );
          }
        } finally {
          // Re-enable button
          if (sendResetLinkBtn) {
            sendResetLinkBtn.disabled = false;
            sendResetLinkBtn.textContent = "Send Reset Link";
          }
        }
      }
    });
  });
</script>
