---
import Button from "../common/Button.astro";
const { id, message } = Astro.props;
---

<!-- 
<div class="mb-4 flex items-center justify-between">
  <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Reset Password</h3>
  <Button
    type="button"
    id="close-forgot-modal"
    variant="ghost"
    size="sm"
    class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300"
  >
    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M6 18L18 6M6 6l12 12"></path>
    </svg>
  </Button>
</div>

<form id="forgot-password-form" class="space-y-4">
  <div>
    <label
      for="reset-email"
      class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
    >
      Email Address
    </label>
    <input
      type="email"
      id="reset-email"
      name="email"
      required
      class="w-full rounded-full border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-60 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
      placeholder="Enter your email address"
    />
  </div>

  <div class="flex gap-3">
    <Button
      type="button"
      id="cancel-forgot"
      variant="secondary"
      size="sm"
      class="flex-1 rounded-full"
    >
      Cancel
    </Button>
    <Button
      type="submit"
      id="send-reset-link"
      variant="primary"
      size="sm"
      class="flex-1 rounded-full"
    >
      Send Reset Link
    </Button>
  </div>
</form> --><!-- Forgot Password Button -->
<div class="mt-4 text-center">
  <Button
    type="button"
    id="forgot-password-btn"
    variant="secondary"
    size="sm"
    fullWidth
    icon="lock"
    iconPosition="left"
  >
    {message}
  </Button>
</div>

<!-- Form is now loaded dynamically from /partials/forgot-password-form/ -->

<script>
  // Handle forgot password modal and form submission
  document.addEventListener("DOMContentLoaded", () => {
    const forgotPasswordBtn = document.getElementById("forgot-password-btn");

    // Modal open/close functionality
    async function openModal() {
      try {
        // Fetch the form HTML from the partial
        const response = await fetch("/partials/forgot-password-form/");
        const formHTML = await response.text();

        // Show modal with the form HTML
        window.showModal("info", "Forgot Password", formHTML);

        // Focus on email input when modal opens
        setTimeout(() => {
          const emailInput = document.querySelector(
            '#forgot-password-form input[name="email"]'
          ) as HTMLInputElement;
          emailInput?.focus();
        }, 100);
      } catch (error) {
        console.error("Failed to load forgot password form:", error);
        // Fallback to simple alert
        alert("Failed to load password reset form. Please try again.");
      }
    }

    // Event listeners for modal
    forgotPasswordBtn?.addEventListener("click", openModal);

    // Handle form submission using event delegation (since form will be in modal)
    document.addEventListener("submit", async (e) => {
      const target = e.target as HTMLFormElement;
      if (target.id === "forgot-password-form") {
        e.preventDefault();

        const emailInput = target.querySelector('input[name="email"]') as HTMLInputElement;
        const email = emailInput?.value.trim();

        if (!email) {
          if ((window as any).showModal) {
            (window as any).showModal(
              "error",
              "Validation Error",
              "Please enter your email address."
            );
          } else {
            console.error("ðŸ”” [Validation Error] Please enter your email address.");
          }
          return;
        }

        // Find the submit button in the modal
        const sendResetLinkBtn = target.querySelector('button[type="submit"]') as HTMLButtonElement;

        // Disable button and show loading state
        if (sendResetLinkBtn) {
          sendResetLinkBtn.disabled = true;
          sendResetLinkBtn.textContent = "Sending...";
        }

        try {
          const response = await fetch("/api/auth/forgot-password", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ email }),
          });

          const result = await response.json();

          if (response.ok) {
            if ((window as any).showModal) {
              (window as any).showModal(
                "success",
                "Reset Link Sent",
                "If an account with that email exists, you will receive a password reset link shortly.",
                8000
              );
            } else {
              // console.log(
                "ðŸ”” [Reset Link Sent] If an account with that email exists, you will receive a password reset link shortly."
              );
            }

            // Close the modal by finding and clicking the close button
            const closeBtn = document.querySelector(
              '[data-modal-hide="forgot-password-modal"]'
            ) as HTMLElement;
            if (closeBtn) closeBtn.click();
          } else {
            if ((window as any).showModal) {
              (window as any).showModal(
                "error",
                "Error",
                result.error || "Failed to send reset link. Please try again."
              );
            } else {
              console.error(
                "ðŸ”” [Error]",
                result.error || "Failed to send reset link. Please try again."
              );
            }
          }
        } catch (error) {
          console.error("Forgot password error:", error);
          if ((window as any).showModal) {
            (window as any).showModal(
              "error",
              "Network Error",
              "Failed to send reset link. Please check your connection and try again."
            );
          } else {
            console.error(
              "ðŸ”” [Network Error] Failed to send reset link. Please check your connection and try again."
            );
          }
        } finally {
          // Re-enable button
          if (sendResetLinkBtn) {
            sendResetLinkBtn.disabled = false;
            sendResetLinkBtn.textContent = "Send Reset Link";
          }
        }
      }
    });
  });
</script>
