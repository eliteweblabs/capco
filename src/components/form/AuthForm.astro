---
// AuthForm component for login
import Button from "../common/Button.astro";
---

<div class="mx-auto my-12 w-full max-w-lg">
  <form action="/api/auth/signin" method="post" class="mt-6 flex w-full flex-col gap-2">
    <Button
      type="submit"
      variant="secondary"
      fullWidth
      name="provider"
      value="google"
      class="flex items-center justify-center gap-2"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-auto"
        preserveAspectRatio="xMidYMid"
        viewBox="0 0 256 262"
      >
        <path
          fill="#4285F4"
          d="M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.90 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027"
        ></path>
        <path
          fill="#34A853"
          d="M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1"
        ></path>
        <path
          fill="#FBBC05"
          d="M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782"
        ></path>
        <path
          fill="#EB4335"
          d="M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251"
        ></path>
      </svg>
      Sign in with Google
    </Button>
  </form>
</div>

<hr class="mt-14 h-0 border-t border-zinc-300 dark:border-zinc-600" />
<p class="-mt-2.5 text-center text-xs text-zinc-500 dark:text-zinc-400">
  <span class="bg-light dark:bg-dark">Or</span>
</p>
<div class="mx-auto my-12 w-full max-w-lg">
  <form action="/api/auth/signin" method="post" class="grid w-full grid-cols-1 gap-3">
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
        Email
      </label>
      <input
        type="email"
        name="email"
        id="email"
        placeholder="Enter your email address"
        required
        class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
      />
    </div>
    <div>
      <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
        Password
      </label>
      <input
        id="password"
        type="password"
        name="password"
        placeholder="Enter your password"
        required
        minlength="6"
        class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
      />
    </div>
    <Button type="submit" variant="primary" size="lg" fullWidth class="mt-6"> Sign In </Button>
  </form>

  <!-- Forgot Password Button -->
  <div class="mt-4 text-center">
    <button
      type="button"
      id="forgot-password-btn"
      class="text-sm text-blue-600 underline hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300"
    >
      Forgot your password?
    </button>
  </div>

  <!-- Forgot Password Modal -->
  <div
    id="forgot-password-modal"
    class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50"
  >
    <div class="mx-4 w-full max-w-md rounded-full bg-white p-6 shadow-xl dark:bg-gray-800">
      <div class="mb-4 flex items-center justify-between">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Reset Password</h3>
        <button
          type="button"
          id="close-forgot-modal"
          class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300"
        >
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <form id="forgot-password-form" class="space-y-4">
        <div>
          <label
            for="reset-email"
            class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            Email Address
          </label>
          <input
            type="email"
            id="reset-email"
            name="email"
            required
            class="regisregirder border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-60 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
            placeholder="Enter your email address"
          />
        </div>

        <div class="flex gap-3">
          <button
            type="button"
            id="cancel-forgot"
            class="flex-1 rounded-full border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
          >
            Cancel
          </button>
          <button
            type="submit"
            id="send-reset-link"
            class="flex-1 rounded-full bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none disabled:opacity-50"
          >
            Send Reset Link
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  // Handle form submission with client-side validation feedback
  document.addEventListener("DOMContentLoaded", () => {
    const loginForm = document.querySelector('form[action="/api/auth/signin"]');
    if (loginForm) {
      loginForm.addEventListener("submit", (e) => {
        const email = (loginForm.querySelector("#email") as HTMLInputElement)?.value;
        const password = (loginForm.querySelector("#password") as HTMLInputElement)?.value;

        // Only validate if this is the email/password login form (not Google sign-in)
        // Google sign-in forms won't have email/password fields
        if (email !== undefined && password !== undefined) {
          // Basic client-side validation
          if (!email || !password) {
            e.preventDefault();
            if (window.showModal) {
              window.showModal("error", "Validation Error", "Please fill in all required fields.");
            } else {
              console.error("ðŸ”” [Validation Error] Please fill in all required fields.");
            }
            return;
          }
        }

        // Show loading notification for regular login
        if (!loginForm.querySelector('[name="provider"]')) {
          if (window.showModal) {
            window.showModal(
              "info",
              "Signing In...",
              "Please wait while we authenticate your account.",
              3000
            );
          } else {
            console.log("ðŸ”” [Signing In...] Please wait while we authenticate your account.");
          }
        }
      });
    }

    // Forgot Password Modal Functionality
    const forgotPasswordBtn = document.getElementById("forgot-password-btn");
    const forgotPasswordModal = document.getElementById("forgot-password-modal");
    const closeForgotModal = document.getElementById("close-forgot-modal");
    const cancelForgot = document.getElementById("cancel-forgot");
    const forgotPasswordForm = document.getElementById("forgot-password-form") as HTMLFormElement;
    const resetEmailInput = document.getElementById("reset-email") as HTMLInputElement;
    const sendResetLinkBtn = document.getElementById("send-reset-link") as HTMLButtonElement;

    // Open modal
    forgotPasswordBtn?.addEventListener("click", () => {
      forgotPasswordModal?.classList.remove("hidden");
      resetEmailInput?.focus();
    });

    // Close modal functions
    const closeModal = () => {
      forgotPasswordModal?.classList.add("hidden");
      forgotPasswordForm?.reset();
    };

    closeForgotModal?.addEventListener("click", closeModal);
    cancelForgot?.addEventListener("click", closeModal);

    // Close modal when clicking outside
    forgotPasswordModal?.addEventListener("click", (e) => {
      if (e.target === forgotPasswordModal) {
        closeModal();
      }
    });

    // Handle forgot password form submission
    forgotPasswordForm?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const email = resetEmailInput?.value.trim();

      if (!email) {
        if (window.showModal) {
          window.showModal("error", "Validation Error", "Please enter your email address.");
        } else {
          console.error("ðŸ”” [Validation Error] Please enter your email address.");
        }
        return;
      }

      // Disable button and show loading state
      sendResetLinkBtn.disabled = true;
      sendResetLinkBtn.textContent = "Sending...";

      try {
        const response = await fetch("/api/auth/forgot-password", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email }),
        });

        const result = await response.json();

        if (response.ok) {
          if (window.showModal) {
            window.showModal(
              "success",
              "Reset Link Sent",
              "If an account with that email exists, you will receive a password reset link shortly.",
              8000
            );
          } else {
            console.log(
              "ðŸ”” [Reset Link Sent] If an account with that email exists, you will receive a password reset link shortly."
            );
          }
          closeModal();
        } else {
          if (window.showModal) {
            window.showModal(
              "Error",
              result.error || "Failed to send reset link. Please try again.",
              "error"
            );
          } else {
            console.error(
              "ðŸ”” [Error]",
              result.error || "Failed to send reset link. Please try again."
            );
          }
        }
      } catch (error) {
        console.error("Forgot password error:", error);
        if (window.showModal) {
          window.showModal(
            "Network Error",
            "Failed to send reset link. Please check your connection and try again.",
            "error"
          );
        } else {
          console.error(
            "ðŸ”” [Network Error] Failed to send reset link. Please check your connection and try again."
          );
        }
      } finally {
        // Re-enable button
        sendResetLinkBtn.disabled = false;
        sendResetLinkBtn.textContent = "Send Reset Link";
      }
    });
  });
</script>
