---
// Contact Form Component - Email Mode
// SMS functionality disabled due to carrier gateway bounce issues
// Messages now sent directly to email addresses
import Button from "../common/Button.astro";

export interface Props {
  compact?: boolean;
}

const { compact = false } = Astro.props;
---

<div class={compact ? "w-full" : "mx-auto w-full max-w-lg"}>
  {!compact && (
    <div class="mb-6">
      <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Contact CAPCo</h3>
      <p class="text-sm text-gray-600 dark:text-gray-400">
        Send a message directly to our team via email
      </p>
      <div class="mt-2 rounded-lg bg-blue-50 p-3 dark:bg-blue-900/20">
        {/* <p class="text-xs text-blue-700 dark:text-blue-300">
          ðŸ“§ <strong>Email Mode:</strong> Messages will be sent to capco@eliteweblabs.com and jk@capcofire.com
        </p> */}
      </div>
    </div>
  )}

  <form action="/api/send-email-sms" method="post" class="space-y-4">
    <!-- SMS functionality disabled - email recipients are hardcoded in the API -->
    <!-- 
    Hidden fields removed - SMS gateway functionality disabled due to bounces
    Messages now sent to: capco@eliteweblabs.com and jk@capcofire.com
    -->
    
  
    
    <!-- Contact Information (Optional) -->
    <div>
      <label for="contact-info" class="mb-2 block text-sm font-medium text-gray-900 dark:text-gray-300">
        Your Contact Info (Optional)
      </label>
      <input
        type="text"
        id="contact-info"
        name="contact_info"
        maxlength="50"
        placeholder="Your name, email, or phone for response"
        class="w-full rounded-lg border border-gray-300 bg-gray-50 px-3 py-2 text-sm focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-60 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-300 dark:focus:bg-gray-900"
      />
      <div class="mt-1 flex justify-between">
        <!-- <p class="text-xs text-gray-500 dark:text-gray-400">
          How should we respond? (Keep short - SMS has character limits)
        </p> -->
        <span id="contact-char-count" class="text-xs text-gray-500 dark:text-gray-400">0/50</span>
      </div>
    </div>

    <!-- Message -->
    <div>
      <label for="message" class="mb-2 block text-sm font-medium text-gray-900 dark:text-gray-300">
        Message <span class="text-red-500">*</span>
      </label>
      <textarea
        id="message"
        name="message"
        required
        rows="4"
        maxlength="500"
        placeholder="Your message here..."
        class="w-full rounded-lg border border-gray-300 bg-gray-50 px-3 py-2 text-sm focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-60 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-300 dark:focus:bg-gray-900"
      ></textarea>
      <div class="mt-1 flex justify-between">
        <p class="text-xs text-gray-500 dark:text-gray-400">Your message will be sent via email</p>
        <span id="char-count" class="text-xs text-gray-500 dark:text-gray-400">0/500</span>
      </div>
    </div>

    <!-- Submit Button -->
    <div class="pt-4">
      <Button
        type="submit"
        variant="primary"
        size="md"
      >
        Send Email to CAPCo Team
      </Button>
    </div>
  </form>

  {!compact && (
    <!-- Information Box -->
    <div
      class="mt-6 rounded-full border border-yellow-200 bg-yellow-50 p-4 dark:border-yellow-700 dark:bg-yellow-900/20"
    >
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
            <path
              fill-rule="evenodd"
              d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
              clip-rule="evenodd"></path>
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-yellow-800 dark:text-yellow-200">Email Delivery Info</h3>
          <div class="mt-2 text-sm text-yellow-700 dark:text-yellow-300">
            <ul class="list-disc space-y-1 pl-5">
              <li>Messages are sent directly to capco@eliteweblabs.com and jk@capcofire.com</li>
              <li>Email delivery is reliable and immediate</li>
              <li>No character limits - write as much as needed</li>
              <li>SMS functionality temporarily disabled due to carrier issues</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  )}
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector('form[action="/api/send-email-sms"]');
    const messageTextarea = document.getElementById("message");
    const charCount = document.getElementById("char-count");
    const contactInput = document.getElementById("contact-info");
    const contactCharCount = document.getElementById("contact-char-count");

    // Character counter for message
    if (messageTextarea && charCount) {
      function updateCharCount() {
        const length = (messageTextarea as HTMLTextAreaElement).value.length;
        if (charCount) {
          charCount.textContent = `${length}/500`;

          // Change color based on length
          if (length > 450) {
            charCount.className = "text-xs text-red-500";
          } else if (length > 400) {
            charCount.className = "text-xs text-yellow-500";
          } else {
            charCount.className = "text-xs text-gray-500 dark:text-gray-400";
          }
        }
      }

      messageTextarea.addEventListener("input", updateCharCount);
      updateCharCount(); // Initial call
    }

    // Character counter for contact info
    if (contactInput && contactCharCount) {
      function updateContactCharCount() {
        const length = (contactInput as HTMLInputElement).value.length;
        if (contactCharCount) {
          contactCharCount.textContent = `${length}/50`;

          // Change color based on length
          if (length > 40) {
            contactCharCount.className = "text-xs text-red-500";
          } else if (length > 30) {
            contactCharCount.className = "text-xs text-yellow-500";
          } else {
            contactCharCount.className = "text-xs text-gray-500 dark:text-gray-400";
          }
        }
      }

      contactInput.addEventListener("input", updateContactCharCount);
      updateContactCharCount(); // Initial call
    }

   

    // Helper function to show modal with mobile scroll
    function showModalWithScroll(type: string, title: string, message: string, duration?: number) {
      if ((window as any).showModal) {
        (window as any).showModal(type, title, message, duration);
      } else {
        console.error(`ðŸ”” [${title}] ${message}`);
      }
    }

    // Form submission handling
    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const message = (form.querySelector("#message") as HTMLTextAreaElement)?.value;

        // Check if modal notification function is available
        // console.log("ðŸ“± [SMS-FORM] Modal notification function available:", {
        //   showModal: typeof (window as any).showModal
        // });

        // Client-side validation - only check message since phone/carrier are hardcoded
        if (!message || message.trim().length === 0) {
          showModalWithScroll("error", "Message Required", "Please enter a message to send.", 5000);
          return;
        }

        // Show loading notification as modal
        // showModalWithScroll("info", "Sending Email...", "Please wait while we send your email to the CAPCo team.", 0); // 0 = no auto-hide

        try {
          // Create FormData from the form
          const formData = new FormData(form as HTMLFormElement);
          
          // console.log("ðŸ“± [SMS-FORM] Submitting form with data:", {
          //   message: formData.get("message"),
          //   contactInfo: formData.get("contact_info"),
          //   phone1: formData.get("phone1"),
          //   carrier1: formData.get("carrier1"),
          //   phone2: formData.get("phone2"),
          //   carrier2: formData.get("carrier2")
          // });
          
          // Make the API call
          const response = await fetch("/api/send-email-sms", {
            method: "POST",
            body: formData,
          });

          // console.log("ðŸ“± [SMS-FORM] API response status:", response.status);
          // console.log("ðŸ“± [SMS-FORM] API response ok:", response.ok);

          if (response.ok) {
            const result = await response.json();
            // console.log("ðŸ“± [SMS-FORM] API success result:", result);
            
            // Check if emails were actually sent successfully
            if (result.totalSent && result.totalSent > 0) {
              // Success - emails were actually sent
              showModalWithScroll("success", "Email Sent!", "Your message has been sent to the CAPCo team successfully.", 5000);
              (form as HTMLFormElement).reset();
              
              // Dispatch custom event to close the SMS panel
              const closeEvent = new CustomEvent('smsFormSubmitted');
              document.dispatchEvent(closeEvent);
            } else {
              // No emails were sent - show error modal
              console.error("ðŸ”” [SMS Error] No emails were sent:", result);
              showModalWithScroll("error", "Send Failed", "Failed to send message. No emails were delivered.", 5000);
            }
          } else {
            // Error
            const errorText = await response.text();
            console.error("ðŸ”” [SMS Error] API response:", response.status, errorText);
            showModalWithScroll("error", "Send Failed", "Failed to send message. Please try again.", 5000);
          }
        } catch (error) {
          console.error("ðŸ”” [SMS Error] Network error:", error);
          showModalWithScroll("error", "Network Error", "Failed to send message. Please check your connection.", 5000);
        }
      });
    }
  });
</script>
