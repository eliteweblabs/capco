---
// Contact form with PDF upload component for non-authenticated users
import Button from "./Button.astro";
import SimpleIcon from "./SimpleIcon.astro";

const { globalInputClasses } = Astro.props;
---

<div class="contact-form mx-auto max-w-4xl">
  <form
    id="contact-form-with-upload"
    class="space-y-6"
    enctype="multipart/form-data"
    action="/api/contact-submission"
    method="POST"
  >
    <!-- Contact Information -->
    <div class="rounded-lg bg-gray-50 p-6 color-background">
      <h3 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">Contact Information</h3>

      <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
        <div>
          <label
            for="firstName"
            class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            First Name *
          </label>
          <input
            type="text"
            id="firstName"
            name="firstName"
            required
            autocomplete="given-name"
            class={globalInputClasses}
          />
        </div>

        <div>
          <label
            for="lastName"
            class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            Last Name *
          </label>
          <input
            type="text"
            id="lastName"
            name="lastName"
            required
            autocomplete="family-name"
            class={globalInputClasses}
          />
        </div>
      </div>

      <div class="mt-6 grid grid-cols-1 gap-6 md:grid-cols-2">
        <div>
          <label
            for="email"
            class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            Email Address *
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            autocomplete="email"
            class={globalInputClasses}
          />
        </div>

        <div>
          <label
            for="phone"
            class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            Phone Number
          </label>
          <input type="tel" id="phone" name="phone" autocomplete="tel" class={globalInputClasses} />
        </div>
      </div>

      <div class="mt-6">
        <label
          for="company"
          class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
        >
          Company Name
        </label>
        <input
          type="text"
          id="company"
          name="company"
          autocomplete="organization"
          class={globalInputClasses}
        />
      </div>
    </div>

    <!-- Project Information -->
    <div class="rounded-lg bg-blue-50 p-6 dark:bg-blue-900/20">
      <h3 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">Project Information</h3>

      <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
        <div>
          <label
            for="address"
            class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            Project Address
          </label>
          <input
            type="text"
            id="address"
            name="address"
            placeholder="123 Main St, City, State 12345"
            class={globalInputClasses}
          />
        </div>

        <div>
          <label
            for="projectType"
            class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
          >
            Project Type
          </label>
          <select id="projectType" name="projectType" class={globalInputClasses}>
            <option value="">Select project type</option>
            <option value="new-construction">New Construction</option>
            <option value="renovation">Renovation</option>
            <option value="inspection">Inspection</option>
            <option value="maintenance">Maintenance</option>
            <option value="other">Other</option>
          </select>
        </div>
      </div>

      <div class="mt-6">
        <label
          for="message"
          class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300"
        >
          Project Description
        </label>
        <textarea
          id="message"
          name="message"
          rows="4"
          placeholder="Please describe your fire protection needs, timeline, and any specific requirements..."
          class={globalInputClasses}></textarea>
      </div>
    </div>

    <!-- PDF Upload Section -->
    <div class="rounded-lg bg-green-50 p-6 dark:bg-green-900/20 hidden">
      <h3 class="mb-4 text-xl font-semibold text-gray-900 dark:text-white">Project Documents</h3>
      <p class="mb-4 text-sm text-gray-600 dark:text-gray-400">
        Upload any relevant documents, blueprints, photos, or specifications (PDF, images, or
        documents)
      </p>

      <div class="space-y-4">
        <!-- File Upload Input -->
        <div>
          <input
            type="file"
            id="files"
            name="files"
            multiple
            accept=".pdf,.png,.jpg,.jpeg,.gif,.webp,.dwg,.doc,.docx,.xls,.xlsx,.txt"
            class={globalInputClasses}
          />
          <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
            Upload supports PDF, images, CAD files, and documents (max 10MB each)
          </p>
        </div>
      </div>
    </div>

    <!-- Submit Button -->
    <div class="text-center">
      <Button type="submit" variant="primary" size="lg" icon="send" iconPosition="left">
        Submit Project Request
      </Button>
    </div>
  </form>

  <!-- Success/Error Messages -->
  <div id="form-messages" class="mt-6 hidden"></div>
</div>

<script>
  // Simple form submission handler like ProjectForm.astro
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("contact-form-with-upload") as HTMLFormElement;
    const formMessages = document.getElementById("form-messages");

    if (!form) return;

    form.addEventListener("submit", async function (event) {
      // Check form validity before preventing default
      if (!form.checkValidity()) {
        // Let the browser show validation messages
        return;
      }

      event.preventDefault();

      const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalText = submitBtn.innerHTML;

      try {
        // Show loading state
        if (submitBtn) {
          submitBtn.disabled = true;
          submitBtn.innerHTML =
            '<i data-lucide="loader-2" class="animate-spin mr-1"></i>Submitting...';
        }

        // Show modal notification
        if (window.showModal) {
          window.showModal(
            "alert",
            "Submitting your request...",
            "Please wait while we process your information.",
            5000
          );
        }

        // Create FormData and submit
        const formData = new FormData(form);

        const response = await fetch("/api/contact-submission", {
          method: "POST",
          body: formData,
        });

        const result = await response.json();

        if (response.ok && result.success) {
          // Success - show modal and redirect
          if (window.showModal) {
            window.showModal({
              type: "success",
              title: "Request Submitted Successfully",
              message:
                "Thank you! Your project request has been submitted. We'll get back to you within 24 hours.",
              duration: 5000,
              redirect: { url: "/", delay: 5000, showCountdown: true },
            });
          }

          // Reset form
          form.reset();
        } else {
          // Error - show error message
          if (window.showModal) {
            window.showModal({
              type: "error",
              title: "Submission Failed",
              message:
                result.error || "There was an error submitting your request. Please try again.",
              duration: 0,
            });
          }
        }
      } catch (error) {
        console.error("Contact form submission error:", error);

        // Show error message
        if (window.showModal) {
          window.showModal({
            type: "error",
            title: "Submission Error",
            message:
              "There was an error submitting your request. Please check your connection and try again.",
            duration: 0,
          });
        }
      } finally {
        // Reset button state
        if (submitBtn) {
          submitBtn.disabled = false;
          submitBtn.innerHTML = originalText;
        }
      }
    });
  });
</script>
