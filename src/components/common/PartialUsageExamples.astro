---
import SimpleIcon from "./SimpleIcon.astro";

// Usage examples for Accordion and SlideToggle partials
// This file demonstrates how to use the partials in other components
---

<div class="mx-auto max-w-4xl space-y-8 p-6">
  <h1 class="mb-8 text-3xl font-bold text-gray-900 dark:text-white">Partial Usage Examples</h1>

  <!-- Accordion Examples -->
  <section class="space-y-4">
    <h2 class="text-2xl font-semibold text-gray-800 dark:text-gray-200">
      Accordion Partial Examples
    </h2>

    <!-- Basic Accordion -->
    <div
      class="rounded-lg border border-gray-200 bg-gray-100 dark:border-gray-700 color-background"
    >
      <div class="flex items-center justify-between p-4">
        <div class="flex-1">
          <h3 class="text-lg font-medium text-gray-900 dark:text-white">Basic Accordion</h3>
          <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
            Simple accordion with title and description
          </p>
        </div>
        <button
          class="text-gray-400 transition-colors hover:text-gray-600 dark:hover:text-gray-300"
          data-accordion-target="#accordion-basic"
          aria-expanded="false"
          aria-controls="accordion-basic"
          type="button"
        >
          <svg
            class="h-3 w-3 transition-transform duration-200"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"
            ></path>
          </svg>
        </button>
      </div>
      <div id="accordion-basic" class="hidden" aria-labelledby="accordion-basic">
        <div class="border-t border-gray-200 px-4 pb-4 dark:border-gray-700">
          <div class="pt-4">
            <p class="text-gray-700 dark:text-gray-300">
              This is the content of the basic accordion. You can put any HTML content here.
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- File Accordion Example -->
    <div
      class="rounded-lg border border-gray-200 bg-gray-100 dark:border-gray-700 color-background"
    >
      <div class="flex items-center justify-between p-4">
        <div class="flex min-w-0 flex-1 items-center space-x-3">
          <div class="flex-shrink-0">
            <svg class="h-6 w-6 text-red-500" fill="currentColor" viewBox="0 0 24 24">
              <path
                d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zm-1 1v5h5v10H6V3h7z"
              ></path>
            </svg>
          </div>
          <div class="min-w-0 flex-1">
            <h3 class="truncate text-lg font-medium text-gray-900 dark:text-white">
              document.pdf v2
            </h3>
            <p class="text-sm text-gray-500 dark:text-gray-400">
              2.5 MB • Uploaded 12/15/2023 at 2:30 PM • by John Doe
            </p>
          </div>
        </div>

        <div class="flex items-center space-x-2">
          <span
            class="inline-flex items-center rounded-full bg-green-100 px-2.5 py-0.5 text-xs font-medium text-green-800 dark:bg-green-900 dark:text-green-300"
          >
            Available
          </span>

          <button
            class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300"
            title="Download File"
          >
            <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              ></path>
            </svg>
          </button>

          <button
            class="text-gray-400 transition-colors hover:text-gray-600 dark:hover:text-gray-300"
            data-accordion-target="#accordion-file-example"
            aria-expanded="false"
            aria-controls="accordion-file-example"
            type="button"
          >
            <svg
              class="h-3 w-3 transition-transform duration-200"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
        </div>
      </div>

      <div id="accordion-file-example" class="hidden" aria-labelledby="accordion-file-example">
        <div class="border-t border-gray-200 px-4 pb-4 dark:border-gray-700">
          <div class="space-y-4 pt-4">
            <!-- File Title -->
            <div>
              <label class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
                >Title</label
              >
              <input
                type="text"
                class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white"
                value="Project Proposal"
                placeholder="Enter file title..."
              />
            </div>

            <!-- File Description -->
            <div>
              <label class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
                >Description</label
              >
              <textarea
                class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white"
                rows="3"
                placeholder="Enter file description...">Initial project proposal document</textarea
              >
            </div>

            <!-- Private Toggle -->
            <div class="flex items-center justify-between">
              <div>
                <label class="text-sm font-medium text-gray-700 dark:text-gray-300">Private</label>
                <p class="text-xs text-gray-500 dark:text-gray-400">Hide this file from clients</p>
              </div>
              <label class="toggle-wrapper flex cursor-pointer items-center gap-3">
                <div class="relative">
                  <input
                    type="checkbox"
                    id="example-private-toggle"
                    class="toggle-input peer sr-only"
                    checked
                  />
                  <div
                    class="h-6 w-11 rounded-full bg-gray-200 after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-gray-100 after:transition-all after:content-[''] peer-checked:bg-primary-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-primary-800"
                  >
                  </div>
                </div>
              </label>
            </div>

            <!-- Save Button -->
            <div class="flex justify-end">
              <button
                class="rounded-lg bg-blue-600 px-4 py-2 text-sm text-white hover:bg-blue-700 focus:ring-2 focus:ring-blue-500"
              >
                Save Changes
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Slide Toggle Examples -->
  <section class="space-y-4">
    <h2 class="text-2xl font-semibold text-gray-800 dark:text-gray-200">
      Slide Toggle Partial Examples
    </h2>

    <div
      class="space-y-6 rounded-lg border border-gray-200 bg-gray-100 p-6 dark:border-gray-700 color-background"
    >
      <!-- Basic Toggle -->
      <div class="flex items-center justify-between">
        <div>
          <label class="text-sm font-medium text-gray-700 dark:text-gray-300">Basic Toggle</label>
          <p class="text-xs text-gray-500 dark:text-gray-400">Simple on/off toggle</p>
        </div>
        <label class="toggle-wrapper flex cursor-pointer items-center gap-3">
          <div class="relative">
            <input type="checkbox" id="basic-toggle" class="toggle-input peer sr-only" />
            <div
              class="h-6 w-11 rounded-full bg-gray-200 after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-gray-100 after:transition-all after:content-[''] peer-checked:bg-primary-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-primary-800"
            >
            </div>
          </div>
        </label>
      </div>

      <!-- Checked Toggle -->
      <div class="flex items-center justify-between">
        <div>
          <label class="text-sm font-medium text-gray-700 dark:text-gray-300">Checked Toggle</label>
          <p class="text-xs text-gray-500 dark:text-gray-400">Pre-checked toggle</p>
        </div>
        <label class="toggle-wrapper flex cursor-pointer items-center gap-3">
          <div class="relative">
            <input type="checkbox" id="checked-toggle" class="toggle-input peer sr-only" checked />
            <div
              class="h-6 w-11 rounded-full bg-gray-200 after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-gray-100 after:transition-all after:content-[''] peer-checked:bg-primary-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-primary-800"
            >
            </div>
          </div>
        </label>
      </div>

      <!-- Toggle with Icon -->
      <div class="flex items-center justify-between">
        <div>
          <label class="text-sm font-medium text-gray-700 dark:text-gray-300"
            >Toggle with Icon</label
          >
          <p class="text-xs text-gray-500 dark:text-gray-400">Toggle with icon and label</p>
        </div>
        <label class="toggle-wrapper flex cursor-pointer items-center gap-3">
          <div class="relative">
            <input type="checkbox" id="icon-toggle" class="toggle-input peer sr-only" />
            <div
              class="h-6 w-11 rounded-full bg-gray-200 after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-gray-100 after:transition-all after:content-[''] peer-checked:bg-primary-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-primary-800"
            >
            </div>
          </div>
          <span class="text-sm text-gray-700 dark:text-gray-300">
            <SimpleIcon name="shield-check" class="mr-1" />
            Enable Security
          </span>
        </label>
      </div>
    </div>
  </section>

  <!-- Usage Instructions -->
  <section class="space-y-4">
    <h2 class="text-2xl font-semibold text-gray-800 dark:text-gray-200">
      How to Use These Partials
    </h2>

    <div
      class="rounded-lg border border-gray-200 bg-gray-50 p-6 dark:border-gray-700 dark:bg-gray-900"
    >
      <h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white">Accordion Partial</h3>
      <p class="mb-4 text-sm text-gray-700 dark:text-gray-300">
        Use the accordion structure in your components by copying the HTML structure and JavaScript
        functionality.
      </p>

      <h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white">Slide Toggle Partial</h3>
      <p class="mb-4 text-sm text-gray-700 dark:text-gray-300">
        Use the slide toggle structure with the toggle-wrapper class and proper input/label
        structure.
      </p>

      <h3 class="mb-4 text-lg font-medium text-gray-900 dark:text-white">JavaScript Integration</h3>
      <p class="text-sm text-gray-700 dark:text-gray-300">
        Both partials include their own JavaScript functionality that will work automatically when
        the HTML structure is used.
      </p>
    </div>
  </section>
</div>

<script>
  // Accordion functionality (same as in Accordion.astro)
  document.addEventListener("DOMContentLoaded", function () {
    const accordionButtons = document.querySelectorAll("[data-accordion-target]");

    accordionButtons.forEach((button) => {
      button.addEventListener("click", function (this: HTMLElement) {
        const targetId = this.getAttribute("data-accordion-target");
        const target = document.querySelector(targetId as string);
        const isExpanded = this.getAttribute("aria-expanded") === "true";

        if (target) {
          // Toggle visibility
          if (isExpanded) {
            target.classList.add("hidden");
            this.setAttribute("aria-expanded", "false");
          } else {
            target.classList.remove("hidden");
            this.setAttribute("aria-expanded", "true");
          }

          // Toggle arrow rotation
          const arrow = this.querySelector("svg");
          if (arrow) {
            arrow.classList.toggle("rotate-180");
          }
        }
      });
    });
  });
</script>
