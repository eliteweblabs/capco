---
import BoxIcon from "./BoxIcon.astro";
import Tooltip from "./Tooltip.astro";
---

<div id="toggle-theme" class="text-black dark:text-white">
  <BoxIcon name="sun" id="moon-icon" class="bx-sm hidden dark:block" />
  <BoxIcon name="moon" id="sun-icon" class="bx-sm block dark:hidden" />
</div>
<!-- </Tooltip> -->
<!-- Theme initialization script - runs immediately to prevent flash -->
<script>
  // Global theme manager
  window.ThemeManager = (function () {
    const storageKey = "theme";
    const htmlElement = document.documentElement;

    // // console.log("ðŸŽ¨ [THEME] Theme manager initializing...");

    function applyTheme(theme: string) {
      if (theme === "dark") {
        htmlElement.classList.remove("light");
        htmlElement.classList.add("dark");
        localStorage.setItem(storageKey, "dark");
        // // console.log("ðŸŽ¨ [THEME] Applied dark theme");
      } else {
        htmlElement.classList.remove("dark");
        htmlElement.classList.add("light");
        localStorage.setItem(storageKey, "light");
        // // console.log("ðŸŽ¨ [THEME] Applied light theme");
      }
    }

    function getCurrentTheme() {
      return htmlElement.classList.contains("dark") ? "dark" : "light";
    }

    function initializeTheme() {
      const savedTheme = localStorage.getItem(storageKey);
      let currentTheme;

      if (savedTheme) {
        currentTheme = savedTheme;
        // // console.log("ðŸŽ¨ [THEME] Using saved theme:", currentTheme);
      } else {
        currentTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
        // // console.log("ðŸŽ¨ [THEME] Using system preference:", currentTheme);
      }

      applyTheme(currentTheme);
      // // console.log("ðŸŽ¨ [THEME] Initial theme applied:", currentTheme);
    }

    function toggle() {
      const newTheme = getCurrentTheme() === "dark" ? "light" : "dark";
      applyTheme(newTheme);
      // // console.log("ðŸŽ¨ [THEME] Theme toggled to:", newTheme);
    }

    // Initialize immediately
    initializeTheme();

    // Return public API
    return {
      toggle,
      applyTheme,
      getCurrentTheme,
    };
  })();

  // Theme toggle functionality using the global ThemeManager
  document.addEventListener("DOMContentLoaded", function () {
    const themeToggle = document.getElementById("toggle-theme");

    // // console.log("ðŸŽ¨ [THEME] Setting up theme toggle button");

    // Theme toggle button click handler
    if (themeToggle) {
      themeToggle.addEventListener("click", () => {
        window.ThemeManager.toggle();
      });
      // // console.log("ðŸŽ¨ [THEME] Theme toggle button connected");
    } else {
      console.warn("ðŸŽ¨ [THEME] Theme toggle button not found");
    }

    // Listen for system color scheme changes
    window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (event) => {
      const currentSavedTheme = localStorage.getItem("theme");
      // Only apply system change if user hasn't set a manual preference
      if (!currentSavedTheme) {
        window.ThemeManager.applyTheme(event.matches ? "dark" : "light");
        // // console.log(
        //   "ðŸŽ¨ [THEME] Applied system preference change:",
        //   event.matches ? "dark" : "light"
        // );
      }
    });
  });

  // TypeScript declaration for global ThemeManager
  declare global {
    interface Window {
      ThemeManager: {
        toggle: () => void;
        applyTheme: (theme: string) => void;
        getCurrentTheme: () => string;
      };
    }
  }
</script>

<style>
  #theme-toggle-wrapper {
    position: relative;
    display: inline-block;
  }

  #theme-toggle-wrapper > div {
    position: absolute;
    right: 3px;
    margin-top: 3px;
  }

  .theme-toggle-checkbox {
    opacity: 0;
    position: absolute;
  }

  #theme-toggle-label {
    background-color: var(--toggle-table-background);
    border-radius: 50px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 7.5px;
    position: relative;
    width: 66px;
    height: 30px;
    transform: scale(1.2);
    box-shadow: 0 0 0 1px var(--toggle-border-color);
    outline: 1px solid transparent;
  }

  .theme-toggle-checkbox:focus ~ #theme-toggle-label {
    outline: 2px solid var(--toggle-border-color);
    outline-offset: 4px;
  }

  #theme-toggle-label #theme-toggle-ball {
    background-color: var(--accent);
    border-radius: 50%;
    position: absolute;
    height: 30px;
    width: 30px;
    transform: translateX(-7.5px);
    transition: all 0.5s cubic-bezier(0.23, 1, 0.32, 1) 0ms;
  }

  @media (forced-colors: active) {
    #theme-toggle-label {
      --moon-icon-color: #a3acc8;
      --sun-icon-color: CanvasText;
    }
    #theme-toggle-label #theme-toggle-ball {
      background-color: SelectedItem;
    }
  }

  .theme-toggle-checkbox:checked + #theme-toggle-label #theme-toggle-ball {
    transform: translateX(28.5px);
  }
</style>
