---
// GDPR-Compliant Cookie Banner Component
// Handles cookie consent and preferences management
---

<div
  id="cookie-banner"
  class="fixed bottom-0 left-0 right-0 z-50 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg transform translate-y-full transition-transform duration-300 ease-in-out"
>
  <div class="max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8">
    <div class="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4">
      <!-- Cookie Information -->
      <div class="flex-1">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">üç™ We use cookies</h3>
        <p class="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">
          We use cookies to enhance your browsing experience, serve personalized content, and
          analyze our traffic. By clicking "Accept All", you consent to our use of cookies. You can
          manage your preferences or learn more in our
          <a href="/privacy-policy" class="text-blue-600 dark:text-blue-400 hover:underline"
            >Privacy Policy</a
          >.
        </p>
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-col sm:flex-row gap-3 sm:gap-2">
        <!-- Manage Preferences Button -->
        <button
          id="manage-preferences-btn"
          class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-md transition-colors duration-200"
        >
          Manage Preferences
        </button>

        <!-- Reject All Button -->
        <button
          id="reject-all-btn"
          class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-md transition-colors duration-200"
        >
          Reject All
        </button>

        <!-- Accept All Button -->
        <button
          id="accept-all-btn"
          class="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 rounded-md transition-colors duration-200"
        >
          Accept All
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Cookie Preferences Modal -->
<div
  id="cookie-preferences-modal"
  class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50"
>
  <div
    class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto"
  >
    <!-- Modal Header -->
    <div
      class="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700"
    >
      <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Cookie Preferences</h2>
      <button
        id="close-preferences-modal"
        class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Modal Content -->
    <div class="p-6 space-y-6">
      <p class="text-sm text-gray-600 dark:text-gray-300">
        Manage your cookie preferences below. You can enable or disable different types of cookies.
        Note that some cookies are essential for the website to function properly.
      </p>

      <!-- Essential Cookies -->
      <div class="space-y-3">
        <div class="flex items-center justify-between">
          <div>
            <h3 class="text-sm font-medium text-gray-900 dark:text-white">Essential Cookies</h3>
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Required for basic website functionality, authentication, and security.
            </p>
          </div>
          <div class="flex items-center">
            <span class="text-xs text-gray-500 dark:text-gray-400 mr-2">Always Active</span>
            <div class="w-10 h-6 bg-blue-600 rounded-full flex items-center justify-end px-1">
              <div class="w-4 h-4 bg-white rounded-full"></div>
            </div>
          </div>
        </div>
      </div>

      <!-- Analytics Cookies -->
      <div class="space-y-3">
        <div class="flex items-center justify-between">
          <div>
            <h3 class="text-sm font-medium text-gray-900 dark:text-white">Analytics Cookies</h3>
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Help us understand how visitors interact with our website by collecting anonymous
              information.
            </p>
          </div>
          <label class="relative inline-flex items-center cursor-pointer">
            <input type="checkbox" id="analytics-cookies" class="sr-only peer" checked />
            <div
              class="w-10 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
            >
            </div>
          </label>
        </div>
      </div>

      <!-- Marketing Cookies -->
      <div class="space-y-3">
        <div class="flex items-center justify-between">
          <div>
            <h3 class="text-sm font-medium text-gray-900 dark:text-white">Marketing Cookies</h3>
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Used to track visitors across websites to display relevant and engaging
              advertisements.
            </p>
          </div>
          <label class="relative inline-flex items-center cursor-pointer">
            <input type="checkbox" id="marketing-cookies" class="sr-only peer" />
            <div
              class="w-10 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
            >
            </div>
          </label>
        </div>
      </div>

      <!-- Functional Cookies -->
      <div class="space-y-3">
        <div class="flex items-center justify-between">
          <div>
            <h3 class="text-sm font-medium text-gray-900 dark:text-white">Functional Cookies</h3>
            <p class="text-xs text-gray-500 dark:text-gray-400">
              Enable enhanced functionality and personalization, such as remembering your
              preferences.
            </p>
          </div>
          <label class="relative inline-flex items-center cursor-pointer">
            <input type="checkbox" id="functional-cookies" class="sr-only peer" checked />
            <div
              class="w-10 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
            >
            </div>
          </label>
        </div>
      </div>
    </div>

    <!-- Modal Footer -->
    <div
      class="flex items-center justify-between p-6 border-t border-gray-200 dark:border-gray-700"
    >
      <button
        id="save-preferences-btn"
        class="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 rounded-md transition-colors duration-200"
      >
        Save Preferences
      </button>
      <button
        id="accept-all-preferences-btn"
        class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-md transition-colors duration-200"
      >
        Accept All
      </button>
    </div>
  </div>
</div>

<script>
  // Cookie Banner Management
  document.addEventListener("DOMContentLoaded", function () {
    const cookieBanner = document.getElementById("cookie-banner");
    const preferencesModal = document.getElementById("cookie-preferences-modal");
    const acceptAllBtn = document.getElementById("accept-all-btn");
    const rejectAllBtn = document.getElementById("reject-all-btn");
    const managePreferencesBtn = document.getElementById("manage-preferences-btn");
    const closePreferencesModal = document.getElementById("close-preferences-modal");
    const savePreferencesBtn = document.getElementById("save-preferences-btn");
    const acceptAllPreferencesBtn = document.getElementById("accept-all-preferences-btn");

    // Check if user has already made a choice
    const cookieConsent = localStorage.getItem("cookie-consent");

    if (!cookieConsent) {
      // Show banner after a short delay
      setTimeout(() => {
        cookieBanner?.classList.remove("translate-y-full");
      }, 1000);
    }

    // Accept All Cookies
    function acceptAllCookies() {
      const consent = {
        essential: true,
        analytics: true,
        marketing: true,
        functional: true,
        timestamp: new Date().toISOString(),
      };

      localStorage.setItem("cookie-consent", JSON.stringify(consent));
      hideBanner();

      // Initialize analytics and other services
      initializeServices(consent);

      // Show success message
      if (window.showModal) {
        window.showModal(
          "success",
          "Cookies Accepted",
          "Your cookie preferences have been saved.",
          3000
        );
      }
    }

    // Reject All Cookies (except essential)
    function rejectAllCookies() {
      const consent = {
        essential: true,
        analytics: false,
        marketing: false,
        functional: false,
        timestamp: new Date().toISOString(),
      };

      localStorage.setItem("cookie-consent", JSON.stringify(consent));
      hideBanner();

      // Initialize only essential services
      initializeServices(consent);

      // Show success message
      if (window.showModal) {
        window.showModal(
          "success",
          "Cookies Rejected",
          "Only essential cookies will be used.",
          3000
        );
      }
    }

    // Save Custom Preferences
    function saveCustomPreferences() {
      const analytics = document.getElementById("analytics-cookies") as HTMLInputElement;
      const marketing = document.getElementById("marketing-cookies") as HTMLInputElement;
      const functional = document.getElementById("functional-cookies") as HTMLInputElement;

      const consent = {
        essential: true,
        analytics: analytics?.checked || false,
        marketing: marketing?.checked || false,
        functional: functional?.checked || false,
        timestamp: new Date().toISOString(),
      };

      localStorage.setItem("cookie-consent", JSON.stringify(consent));
      hideBanner();
      hidePreferencesModal();

      // Initialize services based on preferences
      initializeServices(consent);

      // Show success message
      if (window.showModal) {
        window.showModal(
          "success",
          "Preferences Saved",
          "Your cookie preferences have been updated.",
          3000
        );
      }
    }

    // Hide Banner
    function hideBanner() {
      cookieBanner?.classList.add("translate-y-full");
    }

    // Show Preferences Modal
    function showPreferencesModal() {
      preferencesModal?.classList.remove("hidden");
      preferencesModal?.classList.add("flex");
    }

    // Hide Preferences Modal
    function hidePreferencesModal() {
      preferencesModal?.classList.add("hidden");
      preferencesModal?.classList.remove("flex");
    }

    // Initialize Services Based on Consent
    function initializeServices(consent: any) {
      console.log("üç™ [COOKIE-BANNER] Initializing services with consent:", consent);

      // Essential services (always enabled)
      // These are already running (authentication, basic functionality)

      // Analytics services
      if (consent.analytics) {
        // Initialize Google Analytics, etc.
        console.log("üç™ [COOKIE-BANNER] Analytics services enabled");
        // Example: gtag('consent', 'update', { 'analytics_storage': 'granted' });
      }

      // Marketing services
      if (consent.marketing) {
        // Initialize marketing tracking, etc.
        console.log("üç™ [COOKIE-BANNER] Marketing services enabled");
        // Example: gtag('consent', 'update', { 'ad_storage': 'granted' });
      }

      // Functional services
      if (consent.functional) {
        // Initialize enhanced functionality
        console.log("üç™ [COOKIE-BANNER] Functional services enabled");
      }
    }

    // Load existing preferences into modal
    function loadPreferencesIntoModal() {
      const existingConsent = localStorage.getItem("cookie-consent");
      if (existingConsent) {
        const consent = JSON.parse(existingConsent);
        const analytics = document.getElementById("analytics-cookies") as HTMLInputElement;
        const marketing = document.getElementById("marketing-cookies") as HTMLInputElement;
        const functional = document.getElementById("functional-cookies") as HTMLInputElement;

        if (analytics) analytics.checked = consent.analytics;
        if (marketing) marketing.checked = consent.marketing;
        if (functional) functional.checked = consent.functional;
      }
    }

    // Event Listeners
    acceptAllBtn?.addEventListener("click", acceptAllCookies);
    rejectAllBtn?.addEventListener("click", rejectAllCookies);
    managePreferencesBtn?.addEventListener("click", () => {
      loadPreferencesIntoModal();
      showPreferencesModal();
    });
    closePreferencesModal?.addEventListener("click", hidePreferencesModal);
    savePreferencesBtn?.addEventListener("click", saveCustomPreferences);
    acceptAllPreferencesBtn?.addEventListener("click", acceptAllCookies);

    // Close modal when clicking outside
    preferencesModal?.addEventListener("click", (e) => {
      if (e.target === preferencesModal) {
        hidePreferencesModal();
      }
    });

    // Initialize services on page load if consent already exists
    if (cookieConsent) {
      const consent = JSON.parse(cookieConsent);
      initializeServices(consent);
    }
  });

  // Export functions for external use
  (window as any).cookieBanner = {
    show: () => {
      const banner = document.getElementById("cookie-banner");
      banner?.classList.remove("translate-y-full");
    },
    hide: () => {
      const banner = document.getElementById("cookie-banner");
      banner?.classList.add("translate-y-full");
    },
    getConsent: () => {
      const consent = localStorage.getItem("cookie-consent");
      return consent ? JSON.parse(consent) : null;
    },
    updateConsent: (newConsent: any) => {
      localStorage.setItem("cookie-consent", JSON.stringify(newConsent));
    },
  };
</script>

<style>
  /* Ensure banner appears above other content */
  #cookie-banner {
    z-index: 9999;
  }

  #cookie-preferences-modal {
    z-index: 10000;
  }

  /* Smooth transitions */
  .transition-transform {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
</style>
