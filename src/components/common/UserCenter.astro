---
// User center component for header
import BoxIcon from "./BoxIcon.astro";
import Button from "./Button.astro";
import Punchlist from "../project/Punchlist.astro";
import AssignedProjects from "./AssignedProjects.astro";

const {
  project,
  currentRole,
  currentUser,
  isAuth,
  desktopNavigationHTML,
  supabaseUrl,
  isBackendPage,
} = Astro.props;

const projectId = project?.id;
const currentUserId = currentUser?.id;

let assignedProjectsCount = 0;
let assignedProjects: any[] = [];

if ((currentUser?.id && currentRole === "Staff") || currentRole === "Admin") {
  // console.log("üèóÔ∏è [APP] Fetching assigned projects for user:", currentUser.id);
  const baseUrl = Astro.url.origin;
  const fullUrl = `${baseUrl}/api/get-project?assigned_to_id=${currentUser.id}`;
  // console.log("üèóÔ∏è [APP] Full URL:", fullUrl);
  try {
    const response = await fetch(fullUrl);
    if (response.ok) {
      const data = await response.json();
      // console.log("üèóÔ∏è [APP] Assigned projects:", data);
      assignedProjects = data.projects || [];
      assignedProjectsCount = data.projects.length || 0;
    }
  } catch (error) {
    console.error("Error fetching assigned projects:", error);
  }
} else if (currentUser?.id && currentRole === "Client") {
  const baseUrl = Astro.url.origin;
  const fullUrl = `${baseUrl}/api/get-project?author_id=${currentUser.id}`;
  // console.log("üèóÔ∏è [APP] Full URL:", fullUrl);
  try {
    const response = await fetch(fullUrl);
    if (response.ok) {
      const data = await response.json();
      // console.log("üèóÔ∏è [APP] Assigned projects:", data);
      assignedProjects = data.projects || [];
      assignedProjectsCount = data.projects.length || 0;
    }
  } catch (error) {
    console.error("Error fetching assigned projects:", error);
  }
}

return null;
// Fetch projects assigned to current user
---

<div
  id="drawer-user-center"
  class="fixed right-0 top-0 z-50 flex h-screen w-80 translate-x-full flex-col bg-white transition-transform dark:bg-gray-800"
  tabindex="-1"
  aria-labelledby="drawer-right-label"
>
  <!-- Close Button -->
  <button
    type="button"
    data-drawer-hide="drawer-user-center"
    aria-controls="drawer-user-center"
    class="absolute end-2.5 top-2.5 z-10 inline-flex h-8 w-8 items-center justify-center rounded-lg bg-transparent text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900 dark:hover:bg-gray-600 dark:hover:text-white"
  >
    <svg
      class="h-3 w-3"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 14 14"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
    </svg>
    <span class="sr-only">Close menu</span>
  </button>

  <!-- Fixed Header Section -->
  <div class="flex-shrink-0 border-b border-gray-200 p-4 dark:border-gray-700">
    {
      isAuth && (
        <a href="/profile" class="block">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <img
                id="dropdown-avatar"
                src={currentUser?.user_metadata?.avatar_url || ""}
                alt="User avatar"
                class="h-10 w-10 rounded-full"
                onerror="this.style.display='none'; this.nextElementSibling.style.display='block';"
              />
              <BoxIcon name="user" customStyle="display:none;" class="bx-sm text-gray-400" />
            </div>
            <div class="ml-3">
              <p class="text-sm font-medium text-gray-900 dark:text-white">
                {currentUser?.company_name || "Add Company Name"}
              </p>
              <p class="text-xs text-gray-500 dark:text-gray-400">
                {currentUser?.email || "Email Missing"}
              </p>
              <p class="text-xs font-medium text-blue-600 dark:text-blue-400">
                {currentRole || "User"}
              </p>
            </div>
          </div>
        </a>
      )
    }
  </div>

  <!-- Scrollable Content Section -->
  <div class="flex-1 overflow-y-auto p-4">
    {
      desktopNavigationHTML && (
        <div id="desktop-navigation-html" class="mb-6">
          <div class="space-y-1" set:html={desktopNavigationHTML} />
        </div>
      )
    }
    {
      isAuth && (
        <div class="mb-6">
          <div class="py-1">
            <Button
              href="/dashboard#new-project"
              variant="primary"
              size="sm"
              icon="map-pin"
              iconPosition="left"
              fullWidth
              data-drawer-hide="drawer-user-center"
              aria-controls="drawer-user-center"
            >
              New Project
            </Button>
          </div>
        </div>
      )
    }

    {
      isAuth && currentRole !== "Client" && !projectId && (
        <AssignedProjects
          assignedProjects={assignedProjects}
          assignedProjectsCount={assignedProjectsCount}
          currentRole={currentRole}
          currentUser={currentUser}
          projectId={projectId}
          supabaseUrl={supabaseUrl}
        />
      )
    }

    {
      projectId && project && (
        <Punchlist
          project={project}
          currentRole={currentRole || undefined}
          currentUser={currentUser}
          projectId={projectId}
          supabaseUrl={supabaseUrl}
        />
      )
    }
  </div>
</div>

<script>
  // Global function to close the drawer
  (window as any).closeUserCenterDrawer = function () {
    const closeBtn = document.querySelector(
      '[data-drawer-hide="drawer-user-center"]'
    ) as HTMLButtonElement;
    if (closeBtn) {
      closeBtn.click();
    }
  };
</script>
