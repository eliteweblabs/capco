---
interface Props {
  text: string;
  position?: "top" | "bottom" | "left" | "right";
  className?: string;
  tooltipClass?: string;
  disabled?: boolean;
}

const { text, position = "top", className = "", tooltipClass = "", disabled = false } = Astro.props;

// Position classes
const positionClasses = {
  top: "bottom-full left-1/2 transform -translate-x-1/2 mb-2",
  bottom: "top-full left-1/2 transform -translate-x-1/2 mt-2",
  left: "right-full top-1/2 transform -translate-y-1/2 mr-2",
  right: "left-full top-1/2 transform -translate-y-1/2 ml-2",
};

// Arrow classes
const arrowClasses = {
  top: "absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900",
  bottom:
    "absolute bottom-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-gray-900",
  left: "absolute left-full top-1/2 transform -translate-y-1/2 w-0 h-0 border-t-4 border-b-4 border-l-4 border-transparent border-l-gray-900",
  right:
    "absolute right-full top-1/2 transform -translate-y-1/2 w-0 h-0 border-t-4 border-b-4 border-r-4 border-transparent border-r-gray-900",
};
---

<div class={`relative group ${className}`}>
  <slot />

  <!-- Tooltip -->
  <div
    class={`
    absolute ${positionClasses[position]} 
    px-3 py-2 bg-gray-900 text-white text-sm rounded-lg 
    opacity-0 group-hover:opacity-100 transition-opacity duration-200 
    pointer-events-none whitespace-nowrap z-50
    ${tooltipClass}
    ${disabled ? "hidden" : ""}
  `}
  >
    {text}
    <div class={arrowClasses[position]}></div>
  </div>
</div>
