---
import StickySMS from "./StickySMS.astro";

const { currentUser, isBackend, debugData, globalInputClasses } = Astro.props;

const currentRole = currentUser?.profile?.role;

import Button from "./Button.astro";
import BoxIcon from "./BoxIcon.astro";

// Speed dial component for quick actions
---

<div id="speed-dial" data-dial-init class="hide-when-form-focus group fixed bottom-6 end-6">
  <div id="speed-dial-menu" class="mb-4 flex hidden flex-col items-center space-y-2">
    {
      currentUser && (
        <Button
          type="button"
          variant="primary"
          title="Start Tutorial"
          id="tutorial-trigger"
          iconClasses="mr-0"
          iconPosition="left"
          class="shadow-xs relative h-[52px] w-[52px]"
        >
          <svg
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="currentColor"
            viewBox="0 0 24 24"
          >
            <path d="m7.4 3.736 3.43 3.429A5.046 5.046 0 0 1 12.133 7c.356.01.71.06 1.056.147l3.41-3.412a2.32 2.32 0 0 1 .451-.344A9.89 9.89 0 0 0 12.268 2a10.022 10.022 0 0 0-5.322 1.392c.165.095.318.211.454.344Zm11.451 1.54-.127-.127a.5.5 0 0 0-.706 0l-2.932 2.932c.03.023.05.054.078.077.237.194.454.41.651.645.033.038.077.067.11.107l2.926-2.927a.5.5 0 0 0 0-.707Zm-2.931 9.81c-.025.03-.058.052-.082.082a4.97 4.97 0 0 1-.633.639c-.04.036-.072.083-.115.117l2.927 2.927a.5.5 0 0 0 .707 0l.127-.127a.5.5 0 0 0 0-.707l-2.932-2.931Zm-1.443-4.763a3.037 3.037 0 0 0-1.383-1.1l-.012-.007a2.956 2.956 0 0 0-1-.213H12a2.964 2.964 0 0 0-2.122.893c-.285.29-.509.634-.657 1.013l-.009.016a2.96 2.96 0 0 0-.21 1 2.99 2.99 0 0 0 .488 1.716l.032.04a3.04 3.04 0 0 0 1.384 1.1l.012.007c.319.129.657.2 1 .213.393.015.784-.05 1.15-.192.012-.005.021-.013.033-.018a3.01 3.01 0 0 0 1.676-1.7v-.007a2.89 2.89 0 0 0 0-2.207 2.868 2.868 0 0 0-.27-.515c-.007-.012-.02-.025-.03-.039Zm6.137-3.373a2.53 2.53 0 0 1-.349.447l-3.426 3.426c.112.428.166.869.161 1.311a4.954 4.954 0 0 1-.148 1.054l3.413 3.412c.133.134.249.283.347.444A9.88 9.88 0 0 0 22 12.269a9.913 9.913 0 0 0-1.386-5.319ZM16.6 20.264l-3.42-3.421c-.386.1-.782.152-1.18.157h-.135c-.356-.01-.71-.06-1.056-.147L7.4 20.265a2.503 2.503 0 0 1-.444.347A9.884 9.884 0 0 0 11.732 22H12a9.9 9.9 0 0 0 5.044-1.388 2.515 2.515 0 0 1-.444-.348ZM3.735 16.6l3.426-3.426a4.608 4.608 0 0 1-.013-2.367L3.735 7.4a2.508 2.508 0 0 1-.349-.447 9.889 9.889 0 0 0 0 10.1 2.48 2.48 0 0 1 .35-.453Zm5.101-.758a4.959 4.959 0 0 1-.65-.645c-.034-.038-.078-.067-.11-.107L5.15 18.017a.5.5 0 0 0 0 .707l.127.127a.5.5 0 0 0 .706 0l2.932-2.933c-.029-.018-.049-.053-.078-.076Zm-.755-6.928c.03-.037.07-.063.1-.1.183-.22.383-.423.6-.609.046-.04.081-.092.128-.13L5.983 5.149a.5.5 0 0 0-.707 0l-.127.127a.5.5 0 0 0 0 .707l2.932 2.931Z" />
          </svg>
          <span class="absolute -start-14 top-1/2 mb-px block -translate-y-1/2 text-sm font-medium">
            Tutorial
          </span>
        </Button>
      )
    }

    <Button
      id="debug-toggle-btn"
      type="button"
      icon="bug"
      iconClasses="mr-0"
      iconPosition="left"
      class="shadow-xs relative h-[52px] w-[52px]"
      title="Debug Panel (Admin Only)"
    >
      <span class="absolute -start-14 top-1/2 mb-px block -translate-y-1/2 text-sm font-medium"
        >Debug</span
      >
    </Button>

    <a class="shadow-xs relative" href="/login" aria-label="Login">
      <BoxIcon name="user" variant="outline" size="sm" shape="circle" />
    </a>
    {
      !currentUser && (
        <a class="shadow-xs relative" href="/login" aria-label="Login">
          <BoxIcon name="user" variant="outline" size="sm" shape="circle" />
        </a>

        // <a
        //   href="/login"
        //   type="button"
        //   class="shadow-xs relative h-[52px] w-[52px]"
        // >
        //   <svg
        //     class="mx-auto h-5 w-5"
        //     aria-hidden="true"
        //     xmlns="http://www.w3.org/2000/svg"
        //     fill="currentColor"
        //     width="20"
        //     height="20"
        //     viewBox="0 0 20 20"
        //   >
        //     <path
        //       fill-rule="evenodd"
        //       d="M12 20a7.966 7.966 0 0 1-5.002-1.756l.002.001v-.683c0-1.794 1.492-3.25 3.333-3.25h3.334c1.84 0 3.333 1.456 3.333 3.25v.683A7.966 7.966 0 0 1 12 20ZM2 12C2 6.477 6.477 2 12 2s10 4.477 10 10c0 5.5-4.44 9.963-9.932 10h-.138C6.438 21.962 2 17.5 2 12Zm10-5c-1.84 0-3.333 1.455-3.333 3.25S10.159 13.5 12 13.5c1.84 0 3.333-1.455 3.333-3.25S13.841 7 12 7Z"
        //       clip-rule="evenodd"
        //     />
        //   </svg>

        //   <span class="absolute -start-14 top-1/2 mb-px block -translate-y-1/2 text-sm font-medium">
        //     Login
        //   </span>
        // </a>
      )
    }

    <Button
      id="feedback-button"
      type="button"
      icon="comment-dots"
      iconClasses="mr-0"
      iconPosition="left"
      class="shadow-xs relative h-[52px] w-[52px]"
      title="Debug Panel (Admin Only)"
      dataAttributes={{ "aria-label": "Open feedback form" }}
    >
      <span class="absolute -end-14 top-1/2 mb-px block -translate-y-1/2 text-sm font-medium"
        >Feedback</span
      >
    </Button>

    <Button
      id="debug-toggle-btn"
      type="button"
      icon="message-square"
      iconClasses="mr-0"
      iconPosition="left"
      class="shadow-xs relative h-[52px] w-[52px]"
      title="Contact"
      onclick="window.location.href='/contact'"
    >
      <span class="absolute -start-14 top-1/2 mb-px block -translate-y-1/2 text-sm font-medium"
        >Contact</span
      >
    </Button>

    <!-- </button> -->
    <!-- <button
      type="button"
      class="shadow-xs relative h-[52px] w-[52px]"
    >
      <svg
        class="mx-auto h-5 w-5"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 18 20"
      >
        <path
          d="M5 9V4.13a2.96 2.96 0 0 0-1.293.749L.879 7.707A2.96 2.96 0 0 0 .13 9H5Zm11.066-9H9.829a2.98 2.98 0 0 0-2.122.879L7 1.584A.987.987 0 0 0 6.766 2h4.3A3.972 3.972 0 0 1 15 6v10h1.066A1.97 1.97 0 0 0 18 14V2a1.97 1.97 0 0 0-1.934-2Z"
        ></path>
        <path
          d="M11.066 4H7v5a2 2 0 0 1-2 2H0v7a1.969 1.969 0 0 0 1.933 2h9.133A1.97 1.97 0 0 0 13 18V6a1.97 1.97 0 0 0-1.934-2Z"
        ></path>
      </svg>
      <span class="absolute -start-14 top-1/2 mb-px block -translate-y-1/2 text-sm font-medium"
        >Copy</span
      >
    </button> -->
  </div>
  <button
    type="button"
    data-dial-toggle="speed-dial-menu"
    aria-controls="speed-dial-menu"
    aria-expanded="false"
    class="flex h-14 w-14 items-center justify-center rounded-full bg-primary-700 text-white hover:bg-primary-800 focus:outline-none focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
  >
    <svg
      class="h-5 w-5 transition-transform group-hover:rotate-45"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 18 18"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M9 1v16M1 9h16"></path>
    </svg>
    <span class="sr-only">Open actions menu</span>
  </button>
</div>

{
  currentRole !== "Admin" && currentRole !== "Staff" && (
    <StickySMS isBackend={isBackend} globalInputClasses={globalInputClasses} />
  )
}

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const speedDialButton = document.querySelector('[data-dial-toggle="speed-dial-menu"]');

    const speedDialMenu = document.getElementById("speed-dial-menu");
    const speedDial = document.getElementById("speed-dial");

    // Call hideOnMobileInput if it's available
    if (typeof (window as any).hideOnMobileInput === "function") {
      (window as any).hideOnMobileInput("[data-dial-init]");
    }

    if (!speedDialButton || !speedDialMenu || !speedDial) return;

    let isOpen = false;

    // Toggle function
    function toggleSpeedDial() {
      isOpen = !isOpen;

      if (isOpen) {
        speedDialMenu?.classList.remove("hidden");
        speedDialButton?.setAttribute("aria-expanded", "true");
        // const svg = speedDialButton?.querySelector("svg");
        // if (svg) svg.style.transform = "rotate(45deg)";
      } else {
        speedDialMenu?.classList.add("hidden");
        speedDialButton?.setAttribute("aria-expanded", "false");
        // const svg = speedDialButton?.querySelector("svg");
        // if (svg) svg.style.transform = "rotate(0deg)";
      }
    }

    // Hide function
    function hideSpeedDial() {
      if (isOpen) {
        isOpen = false;
        speedDialMenu?.classList.add("hidden");
        speedDialButton?.setAttribute("aria-expanded", "false");
        const svg = speedDialButton?.querySelector("svg");
        if (svg) svg.style.transform = "rotate(0deg)";
      }
    }

    // Toggle on button click
    speedDialButton.addEventListener("mouseenter", function (e) {
      e.stopPropagation();
      toggleSpeedDial();
    });
    // Toggle on button click
    speedDial.addEventListener("mouseleave", function (e) {
      e.stopPropagation();
      toggleSpeedDial();
    });

    // Hide when clicking outside
    document.addEventListener("click", function (e) {
      if (!speedDial.contains(e.target as Node)) {
        hideSpeedDial();
      }
    });

    // Hide when pressing Escape key
    document.addEventListener("keydown", function (e) {
      if (e.key === "Escape") {
        hideSpeedDial();
      }
    });

    // Prevent menu clicks from closing the dial
    speedDialMenu.addEventListener("mouseover", function (e) {
      e.stopPropagation();
    });

    // Allow all buttons and links in the menu to work properly
    // Stop propagation so document click handler doesn't interfere
    speedDialMenu.addEventListener("click", function (e) {
      // Allow the click to proceed but prevent it from bubbling to document handler
      e.stopPropagation();

      // If it's a button or link, let the browser handle it naturally
      const target = e.target as HTMLElement;
      const button = target.closest("button, a");

      if (button) {
        // Let the button's onclick or href work naturally
        // The stopPropagation above prevents the document click handler from hiding the menu
      }
    });
  });
</script>
