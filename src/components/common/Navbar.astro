---
// Fixed Flowbite Navbar Component with proper Tailwind classes
import AssignedProjects from "./AssignedProjects.astro";
import AuthIcon from "./AuthIcon.astro";
import Button from "./Button.astro";
import Logo from "./Logo.astro";
import ProjectSearch from "../project/ProjectSearch.astro";
import Punchlist from "../project/Punchlist.astro";
import ToggleSidebar from "./ToggleSidebar.astro";
import LucideIcon from "./LucideIcon.astro";
import SearchForm from "./SearchForm.astro";
import NotificationDropdown from "./NotificationDropdown.astro";
import ThemeToggle from "./ThemeToggle.astro";

interface Props {
  currentUser?: any;
  session?: any;
  desktopNavigationHTML: string;
  project?: any;
  id?: string;
  projects?: any[];
  isBackend?: boolean;
  supabaseUrl?: string;
}

const {
  currentUser,
  session,
  desktopNavigationHTML,
  id,
  projects,
  isBackend,
  supabaseUrl,
  project,
} = Astro.props;

const currentUrl = Astro.url.pathname;

const isAuth = currentUser ? true : false;
const currentRole = currentUser?.profile?.role;
---

<nav
  class=`z-10 flex py-2 w-full items-center gap-2 px-2 bg-blend-difference backdrop-blur-md fixed top-0 left-0 right-0 ${!currentUser ? "max-w-screen-xl mx-auto" : ""}`
>
  <div class="flex w-full items-center justify-between">
    <div class="flex-start flex items-center">
      <ToggleSidebar {currentUser} />
      <Logo link="/" file="svg" className="mr-4 flex" {isBackend} />
    </div>

    {
      !isBackend && (
        <div class="hidden w-full md:block md:w-auto" id="navbar-default">
          <ul
            class="mt-4 flex flex-col font-medium md:mt-0 md:flex-row md:space-x-8 md:border-0 md:p-0 rtl:space-x-reverse"
            set:html={desktopNavigationHTML}
          />
        </div>
      )
    }
    <!-- Search -->
    {
      currentUrl === "/project/dashboard" && currentRole !== "Client" && (
        <ProjectSearch projects={projects} />
      )
    }

    <div class="flex items-center gap-2">
      {
        project && (
          <Punchlist currentUser={currentUser} supabaseUrl={supabaseUrl} project={project} />
        )
      }

      <ThemeToggle />
    </div>
  </div>

  <!-- Hidden data attribute for notifications -->
  {isAuth && <div data-user-id={currentUser?.id} style="display: none;" />}

  <AuthIcon {currentUser} {session} />

  <nav class="hidden border-b border-gray-200 bg-gray-100 dark:border-gray-700 dark:bg-gray-900">
    <div class="mx-auto flex max-w-screen-xl flex-wrap items-center justify-between p-4">
      <!-- Logo with back button support -->
      <div class="flex items-center space-x-3 rtl:space-x-reverse">
        {
          id && (
            <div class="flex items-center space-x-2">
              <Button
                href="/dashboard"
                variant="anchor"
                size="xl"
                icon="chevron-left"
                class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white"
              />
            </div>
          )
        }
      </div>
    </div>
  </nav>

  <script>
    const logoutBtn = document.getElementById("logout-btn") as HTMLButtonElement;

    // Logout functionality (only if logout button exists - when authenticated)
    if (logoutBtn) {
      logoutBtn.addEventListener("click", async () => {
        // console.log("ðŸ“‹ [HEADER] Logout button clicked");
        try {
          // console.log("ðŸ“‹ [HEADER] Sending logout request...");
          const response = await fetch("/api/auth/signout", {
            method: "POST",
          });
          // console.log("ðŸ“‹ [HEADER] Logout response status:", response.status);

          if (response.ok) {
            // console.log("ðŸ“‹ [HEADER] Logout successful, redirecting...");

            // Simple redirect to home page with success message
            const url = new URL(window.location.origin);
            url.searchParams.set("message", "logout_success");
            window.location.href = url.toString();
          } else {
            // console.error("ðŸ“‹ [HEADER] Logout failed with status:", response.status);

            // Show error modal if logout fails
            if (typeof window.showModal === "function") {
              window.showModal(
                "error",
                "Logout Failed",
                "There was an error logging out. Please try again.",
                0 // No auto-hide for errors
              );
            } else {
              // Fallback if showModal is not available
              alert("There was an error logging out. Please try again.");
            }
          }
        } catch (error) {
          console.error("ðŸ“‹ [HEADER] Logout error:", error);
        }
      });
    }
  </script>
</nav>
