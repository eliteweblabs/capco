---
// Example component showing how to use the punchlist API in dashboard
// This is just an example - you can integrate this into your actual dashboard
---

<div id="dashboard-punchlist-container">
  <h3>Project Punchlist Status</h3>
  <div id="punchlist-projects-list">
    <!-- Projects will be loaded here -->
  </div>
</div>

<script>
  import {
    loadDashboardPunchlistData,
    updateProjectPunchlistCount,
  } from "/src/lib/dashboard-punchlist.ts";

  // Example: Load punchlist data for multiple projects
  async function loadDashboardPunchlist() {
    // Replace with actual project IDs from your dashboard
    const projectIds = ["1", "2", "3", "4", "5"];

    try {
      const punchlistData = await loadDashboardPunchlistData(projectIds);

      // Update counts for each project
      Object.entries(punchlistData).forEach(([projectId, data]) => {
        if (data.success && data.incompleteCount !== undefined) {
          updateProjectPunchlistCount(projectId, data.incompleteCount);
          console.log(`Project ${projectId}: ${data.incompleteCount} incomplete items`);
        } else {
          console.error(`Failed to load punchlist for project ${projectId}:`, data.error);
        }
      });

      // You can also access the full data for more detailed display
      console.log("Full punchlist data:", punchlistData);
    } catch (error) {
      console.error("Error loading dashboard punchlist data:", error);
    }
  }

  // Load punchlist data when component mounts
  document.addEventListener("DOMContentLoaded", () => {
    loadDashboardPunchlist();
  });

  // Make function available globally for manual refresh
  window.loadDashboardPunchlist = loadDashboardPunchlist;
</script>
