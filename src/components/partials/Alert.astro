---
// Reusable Alert component
export const partial = true;

import LucideIcon from "../common/LucideIcon.astro";

interface Props {
  type?: "info" | "success" | "warning" | "error";
  title?: string | null;
  description?: string;
  class?: string;
}

const { type = "info", title = null, description, class: className = "" } = Astro.props;

// Type configurations
const typeConfig = {
  info: {
    icon: "info-circle",
    iconClass: "text-blue-600 dark:text-blue-400",
    bgClass: "bg-blue-50 dark:bg-blue-900/20",
    borderClass: "border-blue-200 dark:border-blue-800",
    textClass: "text-blue-800 dark:text-blue-400",
  },
  success: {
    icon: "check-circle",
    iconClass: "text-green-600 dark:text-green-400",
    bgClass: "bg-green-50 dark:bg-green-900/20",
    borderClass: "border-green-200 dark:border-green-800",
    textClass: "text-green-800 dark:text-green-400",
  },
  warning: {
    icon: "error",
    iconClass: "text-orange-600 dark:text-orange-400",
    bgClass: "bg-orange-50 dark:bg-orange-900/20",
    borderClass: "border-orange-200 dark:border-orange-800",
    textClass: "text-orange-800 dark:text-orange-400",
  },
  error: {
    icon: "x-circle",
    iconClass: "text-red-600 dark:text-red-400",
    bgClass: "bg-red-50 dark:bg-red-900/20",
    borderClass: "border-red-200 dark:border-red-800",
    textClass: "text-red-800 dark:text-red-400",
  },
};

const config = typeConfig[type] || typeConfig.info;
---

<div class={`mb-4 rounded-lg border p-4 ${config.bgClass} ${config.borderClass} ${className}`}>
  <div class="flex items-start">
    <LucideIcon name={config.icon} class={`mr-2 mt-0.5 text-lg ${config.iconClass}`} />
    <div class="flex-1">
      {title && <div class={`text-lg font-medium ${config.textClass}`} set:html={title} />}
      {description && <div class={`mt-1 text-sm ${config.textClass}`} set:html={description} />}
    </div>
  </div>
</div>
