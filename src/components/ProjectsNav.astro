---
import Delivery from "./Delivery.astro";
import Project from "./Project.astro";
import Invoice from "./Invoice.astro";
import NavButton from "./index/NavButton.astro";
import SectionContainer from "./SectionContainer.astro";
import ProjectsNew from "../components/ProjectNew.astro";
import GlobalServicesExample from "./GlobalServicesExample.astro";
import { getI18N } from "@/i18n";

const { role } = Astro.props;
let activeTab = role === "Admin" ? "dashboard" : "submittals";
// const { activeTab } = Astro.props;

//Para cambiar idioma de textos
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

let adminHoldCount = 5;
let clientHoldCount = 14;
---

<div class="mt-4">
  <nav
    class="pl-6 relative overflow-x-auto scrollbar-hide flex gap-1 whitespace-nowrap text-hub-inactive dark:border-hub-border-dark"
  >
    <div
      class="flex gap-1 whitespace-nowrap rounded-full bg-hub-background-nav p-[2px] mt-6 dark:bg-hub-background-nav border-[1px] border-hub-border"
    >

    {role === "Admin" ? (
      <NavButton class="tab-btn relative" aria-label="btn-dashboard" data-target="dashboard" data-default="true"
        >Dashboard / New</NavButton
      >

      <NavButton
        class="tab-btn relative"
        aria-label="btn-pdf-review"
        data-target="pdf-review"
        data-count={adminHoldCount}
        >PDF Review
      </NavButton>
      <NavButton
        class="tab-btn relative"
        aria-label="btn-admin-hold"
        data-target="admin-hold"
        data-count={adminHoldCount}
        >Admin Hold
      </NavButton>
      <NavButton
        class="tab-btn relative"
        aria-label="btn-client-hold"
        data-target="client-hold"
        data-count={clientHoldCount}
        >Client Hold
      </NavButton>
      <NavButton
        class="tab-btn relative"
        aria-label="btn-services-test"
        data-target="services-test"
        data-count={clientHoldCount}
        >Services Test
      </NavButton>
      <NavButton
        class="tab-btn"
        aria-label="btn-pdf-editor"
        data-target="pdf-editor">PDF Editor</NavButton
      ><NavButton class="tab-btn" aria-label="btn-archive" data-target="archive"
        >Archive</NavButton
      >

      ) : (

      <NavButton
      class="tab-btn"
      aria-label="btn-submittals"
      data-target="submittals"
      data-default="true">{i18n.NAVBAR.SUBMITTALS}</NavButton
    >
    <NavButton class="tab-btn" aria-label="btn-invoices" data-target="invoice"
      >{i18n.NAVBAR.INVOICE}</NavButton
    >
    <NavButton class="tab-btn" aria-label="btn-delivery" data-target="delivery"
      >{i18n.NAVBAR.DELIVERY}</NavButton
    >
      )}
    </div>
  </nav>
</div>

  {role === "Admin" ? (

    <SectionContainer id="dashboard" class="tab-content mb-0 mt-0 mx-6">
      <ProjectsNew />
    </SectionContainer>

    
    <SectionContainer id="client-hold" class="tab-content mb-0 mt-0 hidden mx-6">
      <Invoice />
    </SectionContainer>
    <SectionContainer id="services-test" class="tab-content mb-0 mt-0 hidden mx-6">
      <GlobalServicesExample />
    </SectionContainer>
    <SectionContainer id="admin-hold" class="tab-content mb-0 mt-0 hidden mx-6">
      <Invoice />
    </SectionContainer>
    <SectionContainer id="pdf-editor" class="tab-content mb-0 mt-0 hidden mx-6">
      <Project />
    </SectionContainer>
    <SectionContainer id="archives" class="tab-content mb-0 mt-0 hidden mx-6">
      <Invoice />
    </SectionContainer>

  ) : (

    <SectionContainer id="submittals" class="tab-content mb-0 mt-0 mx-6">
      <Project />
    </SectionContainer>
    <SectionContainer id="invoices" class="tab-content mb-0 mt-0 hidden mx-6">
      <Invoice />
    </SectionContainer>
    <SectionContainer id="delivery" class="tab-content mb-0 mt-0 hidden mx-6">
      <Delivery />
    </SectionContainer>
    
  )}
 

<script define:vars={{ activeTab }}>
  const buttons = document.querySelectorAll(".tab-btn");
  const contents = document.querySelectorAll(".tab-content");

  // Establece el bot贸n activo por defecto
  const defaultActive = document.querySelector(`[data-target="${activeTab}"]`);
  if (defaultActive) {
    defaultActive.classList.add(
      "bg-hub-background",
      "drop-shadow-md",
      "text-hub-title",
      "font-bold",
      "dark:text-hub-title-dark",
      "dark:bg-hub-background-dark"
    );
    const projectsSection = document.getElementById("dashboard");
    if (projectsSection) {
      projectsSection.classList.remove("hidden");
    }
  }

  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      const target = button.getAttribute("data-target");
      // Actualiza el estado de los botones
      buttons.forEach((btn) =>
        btn.classList.remove(
          "bg-hub-background",
          "drop-shadow-md",
          "text-hub-title",
          "font-bold",
          "dark:text-hub-title-dark",
          "dark:bg-hub-background-dark"
        )
      );
      button.classList.add(
        "bg-hub-background",
        "drop-shadow-md",
        "text-hub-title",
        "font-bold",
        "dark:text-hub-title-dark",
        "dark:bg-hub-background-dark"
      );

      // Oculta todas las secciones
      contents.forEach((content) => content.classList.add("hidden"));

      // Muestra la secci贸n seleccionada
      if (target) {
        const targetElement = document.getElementById(target);
        if (targetElement) {
          targetElement.classList.remove("hidden");
        }
      }

      // Desliza el bot贸n al centro del nav
      button.scrollIntoView({
        behavior: "smooth", // Deslizamiento suave
        block: "nearest", // Mantiene la posici贸n vertical
        inline: "center", // Centra horizontalmente
      });
    });
  });
</script>




<style>
  /* Use shared data-count bubble styles from global.css */
  .tab-btn {
    --count-bubble-bg: #0ea5e9; /* bg-sky-500 */
  }

  /* Hover effect for consistency */
  .tab-btn:hover::after {
    transform: translateX(50%) translateY(-50%) scale(1.1);
  }
</style>

