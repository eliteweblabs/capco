---
import Delivery from "./Delivery.astro";
import Dashboard from "./Dashboard.astro";
import Invoice from "./Invoice.astro";
import NavButton from "./index/NavButton.astro";
import SectionContainer from "./SectionContainer.astro";
import GlobalServicesExample from "./GlobalServicesExample.astro";
import { getI18N } from "@/i18n";
import {
  PROJECT_STATUS_LABELS,
  loadProjectStatuses,
} from "../lib/global-services";
import { supabase } from "../lib/supabase";

const { role } = Astro.props;
let activeTab = role === "Admin" ? "dashboard" : "submittals";

// Load project status labels from database
await loadProjectStatuses();

// Get status options from the database
let statusOptions: { value: number; label: string }[] = [];

if (supabase) {
  try {
    const { data: statuses, error } = await supabase
      .from("project_statuses")
      .select("status_code, status_name")
      .order("status_code");

    if (error) {
      console.error("Failed to load project statuses:", error);
    } else if (statuses) {
      statusOptions = statuses.map((status) => ({
        value: status.status_code,
        label: status.status_name,
      }));
    }
  } catch (error) {
    console.error("Error loading project statuses:", error);
  }
}

//Para cambiar idioma de textos
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
---

<nav
  id="status-filter-buttons"
  class="pl-6 relative overflow-x-auto scrollbar-hide flex gap-1 whitespace-nowrap text-hub-inactive dark:border-hub-border-dark border-2 border-purple-500"
>
  <button
    type="button"
    class="status-filter-btn active px-3 py-2 text-sm font-medium rounded-lg transition-colors"
    data-status="all"
  >
    All Projects
  </button>

  {
    statusOptions.map(({ value, label }) => (
      <button
        type="button"
        class="status-filter-btn px-3 py-2 text-sm font-medium rounded-lg transition-colors"
        data-status={value}
      >
        {label}
      </button>
    ))
  }
</nav>

<style>
  /* Use shared data-count bubble styles from global.css */
  .tab-btn {
    --count-bubble-bg: #0ea5e9; /* bg-sky-500 */
  }

  /* Hover effect for consistency */
  .tab-btn:hover::after {
    transform: translateX(50%) translateY(-50%) scale(1.1);
  }

  /* Status filter button styles */
  .status-filter-btn {
    background-color: #f3f4f6;
    color: #6b7280;
    border: 1px solid #d1d5db;
  }

  .status-filter-btn:hover {
    background-color: #e5e7eb;
    color: #374151;
  }

  .status-filter-btn.active {
    background-color: #3b82f6;
    color: white;
    border-color: #3b82f6;
  }

  .dark .status-filter-btn {
    background-color: #374151;
    color: #d1d5db;
    border-color: #4b5563;
  }

  .dark .status-filter-btn:hover {
    background-color: #4b5563;
    color: #f9fafb;
  }

  .dark .status-filter-btn.active {
    background-color: #3b82f6;
    color: white;
    border-color: #3b82f6;
  }
</style>

<script>
  // Status filter functionality
  document.addEventListener("DOMContentLoaded", function () {
    const filterButtons = document.querySelectorAll(".status-filter-btn");
    const projectCards = document.querySelectorAll("[data-project-status]");

    function filterProjects(selectedStatus: string) {
      projectCards.forEach((card) => {
        const cardStatus = card.getAttribute("data-project-status");

        if (selectedStatus === "all" || cardStatus === selectedStatus) {
          (card as HTMLElement).style.display = "block";
        } else {
          (card as HTMLElement).style.display = "none";
        }
      });
    }

    filterButtons.forEach((button) => {
      button.addEventListener("click", function (this: HTMLElement) {
        // Remove active class from all buttons
        filterButtons.forEach((btn) => btn.classList.remove("active"));

        // Add active class to clicked button
        this.classList.add("active");

        // Filter projects
        const selectedStatus = this.getAttribute("data-status");
        if (selectedStatus) {
          filterProjects(selectedStatus);
        }
      });
    });
  });
</script>
