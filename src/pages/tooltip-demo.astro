---
import App from "../components/App.astro";
import BoxIcon from "../components/BoxIcon.astro";
import SectionContainer from "../components/SectionContainer.astro";
import Tooltip from "../components/Tooltip.astro";
---

<App>
  <SectionContainer class="flex flex-col gap-y-6 mx-6">
    <div class="flex items-center justify-between">
      <h1 class="text-2xl font-bold">Tooltip Testing</h1>
      <a
        href="/"
        class="inline-flex items-center px-3 py-2 bg-gray-500 text-white text-sm font-medium rounded-lg hover:bg-gray-600 transition-colors"
      >
        <BoxIcon name="arrow-back" class="mr-2" />
        Back to Projects
      </a>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <!-- New Tooltip Component -->
      <div
        class="p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700"
      >
        <h2 class="text-lg font-semibold mb-4">New Flowbite Tooltip Component</h2>
        <p class="text-sm text-gray-600 dark:text-gray-400 mb-6">
          Testing the new Flowbite-based tooltip component.
        </p>

        <div class="space-y-4">
          <Tooltip content="This is a Flowbite tooltip" placement="top">
            <button class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
              Top Tooltip
            </button>
          </Tooltip>

          <Tooltip content="Bottom tooltip" placement="bottom">
            <button class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600">
              Bottom Tooltip
            </button>
          </Tooltip>

          <Tooltip content="Click tooltip" trigger="click">
            <button class="px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600">
              Click Tooltip
            </button>
          </Tooltip>
        </div>
      </div>

      <!-- Raw Flowbite Test -->
      <div
        class="p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700"
      >
        <h2 class="text-lg font-semibold mb-4">Raw Flowbite Test</h2>
        <p class="text-sm text-gray-600 dark:text-gray-400 mb-6">
          Testing raw Flowbite tooltip implementation.
        </p>

        <div class="space-y-4">
          <button
            data-tooltip-target="raw-tooltip"
            data-tooltip-placement="top"
            class="px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600"
          >
            Raw Flowbite Tooltip
          </button>

          <div
            id="raw-tooltip"
            role="tooltip"
            class="invisible opacity-0 absolute z-10 px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm transition-opacity duration-300"
          >
            Raw Flowbite tooltip content
            <div class="tooltip-arrow" data-popper-arrow></div>
          </div>
        </div>
      </div>

      <!-- Debug Info -->
      <div
        class="p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700"
      >
        <h2 class="text-lg font-semibold mb-4">Debug Information</h2>
        <p class="text-sm text-gray-600 dark:text-gray-400 mb-6">
          Check browser console for debug info.
        </p>

        <div id="debug-info" class="text-sm space-y-2">
          <p>Flowbite loaded: <span id="flowbite-status">Checking...</span></p>
          <p>
            Tooltip functions: <span id="tooltip-functions">Checking...</span>
          </p>
        </div>
      </div>

      <!-- Instructions -->
      <div
        class="p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700"
      >
        <h2 class="text-lg font-semibold mb-4">Instructions</h2>
        <p class="text-sm text-gray-600 dark:text-gray-400 mb-6">How to test the tooltips:</p>

        <div class="text-sm space-y-2">
          <p>
            1. <strong>Hover</strong> over the blue and green buttons to see hover tooltips
          </p>
          <p>
            2. <strong>Click</strong> the purple button to see click tooltips
          </p>
          <p>
            3. <strong>Check console</strong> for Flowbite initialization messages
          </p>
          <p>4. <strong>Look for errors</strong> in the browser console</p>
        </div>
      </div>
    </div>
  </SectionContainer>
</App>

<script>
  // Debug script to check Flowbite status
  document.addEventListener("DOMContentLoaded", function () {
    console.log("üîç Debugging Flowbite tooltips...");

    // Check what's available on window
    console.log(
      "Window object keys:",
      Object.keys(window).filter(
        (key) => key.toLowerCase().includes("flowbite") || key.toLowerCase().includes("tooltip")
      )
    );

    // Check if Flowbite is loaded
    const flowbiteStatus = document.getElementById("flowbite-status");
    if (flowbiteStatus) {
      if (typeof window !== "undefined" && (window as any).initTooltips) {
        console.log("‚úÖ Flowbite initTooltips function found");
        flowbiteStatus.textContent = "‚úÖ Loaded";
        flowbiteStatus.className = "text-green-600";
      } else if (typeof window !== "undefined" && (window as any).initFlowbite) {
        console.log("‚úÖ Flowbite initFlowbite function found");
        flowbiteStatus.textContent = "‚úÖ Loaded";
        flowbiteStatus.className = "text-green-600";
      } else if (typeof window !== "undefined" && (window as any).Flowbite) {
        console.log("‚úÖ Flowbite object found");
        flowbiteStatus.textContent = "‚úÖ Flowbite object found";
        flowbiteStatus.className = "text-green-600";
      } else {
        console.log("‚ùå Flowbite functions not found");
        flowbiteStatus.textContent = "‚ùå Not found";
        flowbiteStatus.className = "text-red-600";
      }
    }

    // Check for other Flowbite functions
    const tooltipFunctions = document.getElementById("tooltip-functions");
    const flowbiteFunctions = [];

    if ((window as any).initTooltips) flowbiteFunctions.push("initTooltips");
    if ((window as any).initFlowbite) flowbiteFunctions.push("initFlowbite");
    if ((window as any).Tooltip) flowbiteFunctions.push("Tooltip");
    if ((window as any).flowbite) flowbiteFunctions.push("flowbite");
    if ((window as any).Flowbite) flowbiteFunctions.push("Flowbite");

    if (tooltipFunctions) {
      tooltipFunctions.textContent =
        flowbiteFunctions.length > 0 ? flowbiteFunctions.join(", ") : "None found";
    }

    // Function to initialize tooltips using Flowbite's standard method
    function initializeTooltips() {
      console.log("üîÑ Attempting to initialize tooltips...");

      // Debug: Check what's actually in Flowbite object
      if (typeof window !== "undefined" && (window as any).Flowbite) {
        console.log("üîç Flowbite object contents:", Object.keys((window as any).Flowbite));
        console.log("üîç Flowbite object:", (window as any).Flowbite);
      }

      // Method 1: Try direct initTooltips function (this is the correct way)
      if (typeof window !== "undefined" && (window as any).initTooltips) {
        try {
          (window as any).initTooltips();
          console.log("‚úÖ Tooltips initialized via initTooltips");
          return true;
        } catch (error) {
          console.error("‚ùå Error initializing tooltips:", error);
        }
      }

      // Method 2: Try initFlowbite function
      if (typeof window !== "undefined" && (window as any).initFlowbite) {
        try {
          (window as any).initFlowbite();
          console.log("‚úÖ Tooltips initialized via initFlowbite");
          return true;
        } catch (error) {
          console.error("‚ùå Error initializing via initFlowbite:", error);
        }
      }

      // Method 3: Try Flowbite object with initTooltips (legacy)
      if (
        typeof window !== "undefined" &&
        (window as any).Flowbite &&
        (window as any).Flowbite.initTooltips
      ) {
        try {
          (window as any).Flowbite.initTooltips();
          console.log("‚úÖ Tooltips initialized via Flowbite.initTooltips");
          return true;
        } catch (error) {
          console.error("‚ùå Error initializing via Flowbite.initTooltips:", error);
        }
      }

      // Method 4: Try Flowbite object with initFlowbite (legacy)
      if (
        typeof window !== "undefined" &&
        (window as any).Flowbite &&
        (window as any).Flowbite.initFlowbite
      ) {
        try {
          (window as any).Flowbite.initFlowbite();
          console.log("‚úÖ Tooltips initialized via Flowbite.initFlowbite");
          return true;
        } catch (error) {
          console.error("‚ùå Error initializing via Flowbite.initFlowbite:", error);
        }
      }

      // Method 5: Try flowbite object (lowercase)
      if (typeof window !== "undefined" && (window as any).flowbite) {
        try {
          (window as any).flowbite.initTooltips();
          console.log("‚úÖ Tooltips initialized via flowbite object");
          return true;
        } catch (error) {
          console.error("‚ùå Error initializing via flowbite object:", error);
        }
      }

      console.log("‚ùå No Flowbite initialization method worked");
      return false;
    }

    // Initialize tooltips after a short delay to ensure DOM is ready
    setTimeout(initializeTooltips, 100);

    // Also initialize on window load to catch any late-rendered components
    window.addEventListener("load", function () {
      console.log("üîÑ Re-initializing tooltips after window load...");
      setTimeout(initializeTooltips, 100);
    });

    // Add a button to manually re-initialize tooltips
    const debugInfo = document.getElementById("debug-info");
    if (debugInfo) {
      const reinitButton = document.createElement("button");
      reinitButton.textContent = "Re-initialize Tooltips";
      reinitButton.className =
        "mt-2 px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600";
      reinitButton.onclick = function () {
        console.log("üîÑ Manual re-initialization triggered...");
        initializeTooltips();
      };
      debugInfo.appendChild(reinitButton);
    }

    // Test if tooltips are working by checking for tooltip elements
    setTimeout(() => {
      const tooltipElements = document.querySelectorAll("[data-tooltip-target]");
      console.log(`üîç Found ${tooltipElements.length} tooltip elements`);

      if (tooltipElements.length > 0) {
        console.log("‚úÖ Tooltip elements found in DOM");
        tooltipElements.forEach((el, index) => {
          const target = el.getAttribute("data-tooltip-target");
          const targetEl = target ? document.getElementById(target) : null;
          console.log(`Tooltip ${index + 1}:`, {
            trigger: el.tagName,
            target: target,
            targetExists: !!targetEl,
          });
        });
      } else {
        console.log("‚ùå No tooltip elements found in DOM");
      }
    }, 500);
  });
</script>
