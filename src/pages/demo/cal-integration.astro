---
import App from "../../components/common/App.astro";
import Button from "../../components/common/Button.astro";
import LucideIcon from "../../components/common/LucideIcon.astro";

// Sample project data for demo
const sampleProjects = [
  {
    id: 1,
    title: "Fire Sprinkler System Installation",
    address: "123 Main St, Boston, MA",
    status: "Planning",
    startDate: "2025-01-15",
    estimatedDuration: "2 weeks",
  },
  {
    id: 2,
    title: "Fire Alarm System Upgrade",
    address: "456 Oak Ave, Cambridge, MA",
    status: "In Progress",
    startDate: "2025-01-20",
    estimatedDuration: "1 week",
  },
  {
    id: 3,
    title: "Emergency Exit Lighting Installation",
    address: "789 Pine St, Somerville, MA",
    status: "Scheduled",
    startDate: "2025-02-01",
    estimatedDuration: "3 days",
  },
];

const calComUrl = "https://calcom-web-app-production-0b16.up.railway.app";
---

<App title="Cal.com Integration Demo">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4 py-8">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
          ðŸ“… Cal.com Integration Demo
        </h1>
        <p class="text-gray-600 dark:text-gray-400">
          Showcase how Cal.com can be integrated with CAPCo Fire Protection Systems for project
          roadmapping and client scheduling.
        </p>
      </div>

      <!-- Cal.com Connection Status -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-8">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-3">
            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
            <span class="text-sm font-medium text-gray-900 dark:text-white">
              Cal.com Connected
            </span>
          </div>
          <a
            href={calComUrl}
            target="_blank"
            class="text-blue-600 hover:text-blue-800 dark:text-blue-400"
          >
            Open Cal.com Dashboard â†’
          </a>
        </div>
      </div>

      <!-- Project Roadmap -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Projects List -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md">
          <div class="p-6 border-b border-gray-200 dark:border-gray-700">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Project Roadmap</h2>
            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">
              Create Cal.com events for project milestones
            </p>
          </div>

          <div class="p-6 space-y-4">
            {
              sampleProjects.map((project) => (
                <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                  <div class="flex items-center justify-between">
                    <div class="flex-1">
                      <h3 class="font-medium text-gray-900 dark:text-white">{project.title}</h3>
                      <p class="text-sm text-gray-600 dark:text-gray-400">{project.address}</p>
                      <div class="flex items-center space-x-4 mt-2">
                        <span
                          class={`px-2 py-1 text-xs rounded-full ${
                            project.status === "Planning"
                              ? "bg-yellow-100 text-yellow-800"
                              : project.status === "In Progress"
                                ? "bg-blue-100 text-blue-800"
                                : "bg-green-100 text-green-800"
                          }`}
                        >
                          {project.status}
                        </span>
                        <span class="text-xs text-gray-500">
                          {project.startDate} â€¢ {project.estimatedDuration}
                        </span>
                      </div>
                    </div>
                    <div class="flex space-x-2">
                      <button
                        class="create-cal-event-btn px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
                        data-project-id={project.id}
                        data-project-title={project.title}
                        data-start-date={project.startDate}
                      >
                        <LucideIcon name="calendar-plus" class="mr-1" />
                        Create Event
                      </button>
                      <button
                        class="schedule-meeting-btn px-3 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700 transition-colors"
                        data-project-id={project.id}
                        data-project-title={project.title}
                      >
                        <LucideIcon name="video" class="mr-1" />
                        Schedule Meeting
                      </button>
                    </div>
                  </div>
                </div>
              ))
            }
          </div>
        </div>

        <!-- Integration Features -->
        <div class="space-y-6">
          <!-- Feature Cards -->
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
              ðŸš€ Integration Features
            </h3>
            <div class="space-y-3">
              <div class="flex items-start space-x-3">
                <LucideIcon name="calendar" class="text-blue-600 mt-1" />
                <div>
                  <h4 class="font-medium text-gray-900 dark:text-white">Project Milestones</h4>
                  <p class="text-sm text-gray-600 dark:text-gray-400">
                    Automatically create Cal.com events for project start dates, inspections, and
                    deadlines.
                  </p>
                </div>
              </div>
              <div class="flex items-start space-x-3">
                <LucideIcon name="users" class="text-green-600 mt-1" />
                <div>
                  <h4 class="font-medium text-gray-900 dark:text-white">Client Meetings</h4>
                  <p class="text-sm text-gray-600 dark:text-gray-400">
                    Let clients book consultation meetings directly from project pages.
                  </p>
                </div>
              </div>
              <div class="flex items-start space-x-3">
                <LucideIcon name="clock" class="text-purple-600 mt-1" />
                <div>
                  <h4 class="font-medium text-gray-900 dark:text-white">Automated Reminders</h4>
                  <p class="text-sm text-gray-600 dark:text-gray-400">
                    Send automatic reminders for site visits, inspections, and follow-ups.
                  </p>
                </div>
              </div>
            </div>
          </div>

          <!-- Demo Actions -->
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
              ðŸŽ¯ Demo Actions
            </h3>
            <div class="space-y-3">
              <button
                id="create-sample-events"
                class="w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
              >
                Create Sample Events for All Projects
              </button>
              <button
                id="open-cal-dashboard"
                class="w-full px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors"
              >
                Open Cal.com Dashboard
              </button>
              <button
                id="test-webhook"
                class="w-full px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors"
              >
                Test Webhook Integration
              </button>
            </div>
          </div>

          <!-- Integration Status -->
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
              ðŸ“Š Integration Status
            </h3>
            <div class="space-y-2">
              <div class="flex justify-between items-center">
                <span class="text-sm text-gray-600 dark:text-gray-400">Cal.com API</span>
                <span class="text-sm text-green-600">Connected</span>
              </div>
              <div class="flex justify-between items-center">
                <span class="text-sm text-gray-600 dark:text-gray-400">Webhook Endpoint</span>
                <span class="text-sm text-green-600">Active</span>
              </div>
              <div class="flex justify-between items-center">
                <span class="text-sm text-gray-600 dark:text-gray-400">Events Created</span>
                <span class="text-sm text-blue-600" id="events-count">0</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</App>

<script>
  // Demo functionality for Cal.com integration
  document.addEventListener("DOMContentLoaded", function () {
    const calComUrl = "https://calcom-web-app-production-0b16.up.railway.app";
    let eventsCreated = 0;

    // Create Cal.com event for project
    function createCalEvent(projectId: string, projectTitle: string, startDate: string) {
      console.log("Creating Cal.com event for project:", projectTitle);

      // Simulate API call to Cal.com
      const eventData = {
        title: `${projectTitle} - Project Start`,
        description: `Project milestone: ${projectTitle}`,
        startTime: startDate,
        duration: 60, // 1 hour
        type: "project-milestone",
      };

      // In a real implementation, this would call the Cal.com API
      setTimeout(() => {
        eventsCreated++;
        const eventsCountEl = document.getElementById("events-count");
        if (eventsCountEl) {
          eventsCountEl.textContent = eventsCreated.toString();
        }

        // Show success message
        showNotification(`âœ… Created Cal.com event for "${projectTitle}"`, "success");
      }, 1000);
    }

    // Schedule meeting with client
    function scheduleMeeting(projectId: string, projectTitle: string) {
      console.log("Opening Cal.com booking page for:", projectTitle);

      // Open Cal.com booking page in new tab
      const bookingUrl = `${calComUrl}/book/consultation`;
      window.open(bookingUrl, "_blank");

      showNotification(`ðŸ“… Opening Cal.com booking for "${projectTitle}"`, "info");
    }

    // Show notification
    function showNotification(message: string, type: string = "info") {
      const notification = document.createElement("div");
      notification.className = `fixed top-4 right-4 px-4 py-2 rounded-lg text-white z-50 ${
        type === "success" ? "bg-green-600" : type === "error" ? "bg-red-600" : "bg-blue-600"
      }`;
      notification.textContent = message;
      document.body.appendChild(notification);

      setTimeout(() => {
        notification.remove();
      }, 3000);
    }

    // Event listeners
    document.querySelectorAll(".create-cal-event-btn").forEach((btn) => {
      btn.addEventListener("click", function (this: HTMLElement) {
        const projectId = this.dataset.projectId;
        const projectTitle = this.dataset.projectTitle;
        const startDate = this.dataset.startDate;
        if (projectId && projectTitle && startDate) {
          createCalEvent(projectId, projectTitle, startDate);
        }
      });
    });

    document.querySelectorAll(".schedule-meeting-btn").forEach((btn) => {
      btn.addEventListener("click", function (this: HTMLElement) {
        const projectId = this.dataset.projectId;
        const projectTitle = this.dataset.projectTitle;
        if (projectId && projectTitle) {
          scheduleMeeting(projectId, projectTitle);
        }
      });
    });

    const createSampleEventsBtn = document.getElementById("create-sample-events");
    if (createSampleEventsBtn) {
      createSampleEventsBtn.addEventListener("click", function () {
        document.querySelectorAll(".create-cal-event-btn").forEach((btn) => {
          (btn as HTMLElement).click();
        });
      });
    }

    const openCalDashboardBtn = document.getElementById("open-cal-dashboard");
    if (openCalDashboardBtn) {
      openCalDashboardBtn.addEventListener("click", function () {
        window.open(calComUrl, "_blank");
      });
    }

    const testWebhookBtn = document.getElementById("test-webhook");
    if (testWebhookBtn) {
      testWebhookBtn.addEventListener("click", function () {
        showNotification("ðŸ”— Testing webhook integration...", "info");

        // Simulate webhook test
        setTimeout(() => {
          showNotification("âœ… Webhook integration test successful!", "success");
        }, 2000);
      });
    }
  });
</script>
