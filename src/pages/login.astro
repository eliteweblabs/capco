---
// Handle OAuth callback if code is present (MUST be first)
const authCode = Astro.url.searchParams.get("code");
if (authCode) {
  return Astro.redirect(`/api/auth/callback?code=${authCode}`);
}

// Get auth data directly
import { checkAuth } from "../lib/auth";

const { isAuth } = await checkAuth(Astro.cookies);
// Redirect authenticated users to dashboard
if (isAuth) {
  return Astro.redirect("/project/dashboard");
}

import { globalCompanyData } from "../pages/api/global-company-data";
const {
  globalCompanyName,
  globalCompanySlogan,
  globalCompanyAddress,
  globalCompanyPhone,
  globalCompanyEmail,
  globalCompanyWebsite,
  globalCompanyLogo,
  globalCompanyLogoDark,
  globalCompanyLogoLight,
} = globalCompanyData();

import { globalClasses } from "../pages/api/global-classes";
const { globalInputClasses, globalPrimaryTextClasses, globalSecondaryTextClasses } =
  globalClasses();

// Check for tab query parameter
const urlParams = new URLSearchParams(Astro.url.search);
const activeTab = urlParams.get("tab") || "login";

import App from "../components/common/App.astro";
import AuthForm from "../components/form/AuthForm.astro";
import Button from "../components/common/Button.astro";
import Footer from "../components/common/Footer.astro";
import RegisterForm from "../components/form/RegisterForm.astro";
import BoxIcon from "../components/common/BoxIcon.astro";

// Get auth data for conditional rendering
---

<App
  title="Login / Register"
  description="Login or register to access your dashboard"
  noNavigation={true}
  globalCompanyName={globalCompanyName}
  globalCompanySlogan={globalCompanySlogan}
  globalCompanyAddress={globalCompanyAddress}
  globalCompanyPhone={globalCompanyPhone}
  globalCompanyEmail={globalCompanyEmail}
  globalCompanyWebsite={globalCompanyWebsite}
  globalCompanyLogo={globalCompanyLogo}
  globalCompanyLogoDark={globalCompanyLogoDark}
  globalCompanyLogoLight={globalCompanyLogoLight}
  globalInputClasses={globalInputClasses}
  globalPrimaryTextClasses={globalPrimaryTextClasses}
  globalSecondaryTextClasses={globalSecondaryTextClasses}
>
  <!-- Tabs with Sliding Pill -->

  <div
    class="YajDCE_nRj_FDIevNpsd xCPtuxM4_gihvpPwv9bX qaHaJE3PFAhOCHN67vqr RZmKBZs1E1eXw8vkE6jY q_zwKy9s41K7_EFa8avk blyaGttGikYShjrSk5nA _2ccDCcGyHcuyRwBWsjv Xuyx_pcXRIz_c79NSLIh"
  >
    <div class="t6gkcSf0Bt4MLItXvDJ_ VHjrIbKBrD_XacMhELEC">
      <div
        class="YajDCE_nRj_FDIevNpsd Rv1FIuLTiXLx6VXsBFe9 mveJTCIb2WII7J4sY22F _Ybd3WwuTVljUT4vEaM3 _wYiJGbRZyFZeCc8y7Sf mngKhi_Rv06PF57lblDI _1jTZ8KXRZul60S6czNi SWeL9OnwkbKp0VeBUJlf _YxZw_O8dWkTljptcO7z"
      >
        <div class="mb-8">
          <div
            id="auth-tabs"
            class="relative flex rounded-full bg-gray-200 text-black dark:bg-gray-500 dark:text-white"
          >
            <!-- Sliding pill background -->
            <div
              id="auth-pill-bg"
              class="mix-blend-mode-multiply absolute top-0.5 h-14 rounded-full bg-primary-500 shadow-sm transition-all duration-300 ease-out dark:bg-primary-500"
              style="width: 0px; left: 0px; opacity: 0;"
            >
            </div>
            <Button
              id="login-tab"
              variant="anchor"
              size="sm"
              class="disabled"
              onclick="switchAuthTab('login')"
            >
              Sign In
            </Button>
            <Button
              id="register-tab"
              variant="anchor"
              size="sm"
              class="disabled"
              onclick="switchAuthTab('register')"
            >
              Create Account
            </Button>
          </div>
        </div>

        <!-- Login Form -->
        <div
          id="login-form"
          class={activeTab === "login" ? "auth-form-content" : "auth-form-content hidden"}
        >
          <AuthForm globalInputClasses={globalInputClasses} />
        </div>

        <!-- Register Form -->
        <div
          id="register-form"
          class={activeTab === "register" ? "auth-form-content" : "auth-form-content hidden"}
        >
          <RegisterForm globalInputClasses={globalInputClasses} />
        </div>
      </div>
    </div>

    <div
      class="inSd8c9PnFqLELQjWb_I _SmdlCf6eUKB_V9S5IDj T_HKDBJIxT4a4k4Aj44R VHjrIbKBrD_XacMhELEC _YtPVN_LlqV6t4rglMAI"
    >
      <div class="mx-auto max-w-4xl text-center text-black dark:text-white">
        <h2 class="mb-8 text-2xl font-bold">Access Your Dashboard</h2>

        <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
          <div class="_1jTZ8KXRZul60S6czNi SWeL9OnwkbKp0VeBUJlf rounded-lg p-6 shadow-sm">
            <div
              class="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-primary-100 dark:bg-primary-900/30"
            >
              <BoxIcon name="cloud-upload" size="md" />
            </div>
            <h3 class="mb-2 font-semibold">Upload Documents</h3>
            <p class="text-sm">Securely submit PDFs &amp; project documentation</p>
          </div>

          <div class="_1jTZ8KXRZul60S6czNi SWeL9OnwkbKp0VeBUJlf rounded-lg p-6 shadow-sm">
            <div
              class="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-green-100 dark:bg-green-900/30"
            >
              <BoxIcon name="check-circle" size="md" />
            </div>
            <h3 class="mb-2 font-semibold">Track Progress</h3>
            <p class="text-sm">Monitor project statuses &amp; approval workflows</p>
          </div>

          <div class="_1jTZ8KXRZul60S6czNi SWeL9OnwkbKp0VeBUJlf rounded-lg p-6 shadow-sm">
            <div
              class="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-purple-100 dark:bg-purple-900/30"
            >
              <BoxIcon name="download" size="md" />
            </div>
            <h3 class="mb-2 font-semibold">Download Files</h3>
            <p class="text-sm">Quickly access stamped project deliverables &amp; archives</p>
          </div>
        </div>

        <!-- Contact Support -->
        <div class="mt-8 space-y-4 text-center">
          <div class="text-sm text-text-secondary dark:text-text-secondary-dark">
            <p>
              Need help? <Button
                variant="link"
                size="sm"
                onclick="triggerSMSForm()"
                class="text-brand dark:hover:text-brand-dark disabled cursor-pointer underline"
                >Contact our support team</Button
              >
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</App>

<script>
  // Sliding pill functionality
  function updateSlidingPill(activeButton: Element | null) {
    const pillBg = document.getElementById("auth-pill-bg");
    const tabContainer = document.getElementById("auth-tabs");

    if (!pillBg || !activeButton || !tabContainer) return;

    const containerRect = tabContainer.getBoundingClientRect();
    const buttonRect = activeButton.getBoundingClientRect();

    // Calculate position relative to the container
    const left = buttonRect.left - containerRect.left;
    const width = buttonRect.width;

    // Update pill position and size
    pillBg.style.left = `${left}px`;
    pillBg.style.width = `${width}px`;
    pillBg.style.opacity = "1";
  }

  // Global function for tab switching
  (window as any).switchAuthTab = function (tab: "login" | "register") {
    const loginTab = document.getElementById("login-tab");
    const registerTab = document.getElementById("register-tab");
    const loginForm = document.getElementById("login-form");
    const registerForm = document.getElementById("register-form");

    if (!loginTab || !registerTab || !loginForm || !registerForm) return;

    if (tab === "login") {
      // Show/hide forms
      loginForm.classList.remove("hidden");
      registerForm.classList.add("hidden");
      loginTab.classList.add("disabled");
      registerTab.classList.remove("disabled");

      // Update button text colors - active gets white text, inactive gets primary text
      loginTab.className =
        "relative z-1 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none disabled text-white";
      registerTab.className =
        "relative z-1 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none disabled";
      // Update sliding pill
      updateSlidingPill(loginTab);

      // Update URL without reload
      const url = new URL(window.location.href);
      url.searchParams.set("tab", "login");
      window.history.replaceState({}, "", url.toString());
    } else {
      // Show/hide forms
      loginForm.classList.add("hidden");
      registerForm.classList.remove("hidden");
      loginTab.classList.add("disabled");
      registerTab.classList.remove("disabled");
      // Update button text colors - active gets white text, inactive gets primary text
      registerTab.className =
        "relative z-1 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none disabled text-white";
      loginTab.className =
        "relative z-1 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none disabled";
      // Update sliding pill
      updateSlidingPill(registerTab);

      // Update URL without reload
      const url = new URL(window.location.href);
      url.searchParams.set("tab", "register");
      window.history.replaceState({}, "", url.toString());
    }

    console.log(`üîê [LOGIN] Switched to ${tab} tab`);
  };

  // Initialize tab state on page load (in case JavaScript executes before server-side rendering is complete)
  document.addEventListener("DOMContentLoaded", function () {
    const urlParams = new URLSearchParams(window.location.search);
    const activeTab = urlParams.get("tab") || "login";

    if (activeTab === "register") {
      (window as any).switchAuthTab("register");
      console.log("üîê [LOGIN] Auto-switched to register tab from URL parameter");
    } else {
      // Initialize pill position and text colors for login tab
      setTimeout(() => {
        const loginTab = document.getElementById("login-tab");
        const registerTab = document.getElementById("register-tab");
        if (loginTab && registerTab) {
          // Set correct text colors for initial state
          loginTab.className =
            "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-white disabled";
          registerTab.className =
            "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-black dark:text-white disabled";
          updateSlidingPill(loginTab);
        }
      }, 100);
    }
  });
</script>
