---
// console.log("üîê [LOGIN] Login/Register page loading...");

import BoxIcon from "../components/common/BoxIcon.astro";
import SectionContainer from "../components/common/SectionContainer.astro";
import AuthForm from "../components/form/AuthForm.astro";
import RegisterForm from "../components/form/RegisterForm.astro";
import App from "../components/common/App.astro";
import Button from "../components/common/Button.astro";
import { checkAuth } from "../lib/auth";

// Get auth data directly
const { isAuth } = await checkAuth(Astro.cookies);

// Redirect authenticated users to dashboard
if (isAuth) {
  return Astro.redirect("/dashboard");
}

// Check for tab query parameter
const urlParams = new URLSearchParams(Astro.url.search);
const activeTab = urlParams.get("tab") || "login";
---

<App
  title="Login & Register - CAPCo Fire Protection"
  description="Sign in or create an account to access your fire protection project management dashboard."
>
  <!-- Features Reminder -->
  <SectionContainer type="primary" class="hidden md:block">
    <div class="mx-auto max-w-4xl text-center">
      <h2 class="mb-8 text-2xl font-bold text-gray-900 dark:text-white">
        Access Your CAPCo Dashboard
      </h2>

      <div class="grid grid-cols-1 gap-6 md:grid-cols-3 text-gray-900 dark:text-white">
        <div class="rounded-lg p-6 shadow-sm bg-background-card dark:bg-background-card-dark">
          <div
            class="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-primary-100 dark:bg-primary-900/30"
          >
            <BoxIcon name="cloud-upload" />
          </div>
          <h3 class="mb-2 font-semibold text-gray-900 dark:text-white">Upload Documents</h3>
          <p class="text-sm text-gray-600 dark:text-gray-300">
            Securely submit PDFs &amp; project documentation
          </p>
        </div>

        <div class="rounded-lg p-6 shadow-sm bg-background-card dark:bg-background-card-dark">
          <div
            class="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-green-100 dark:bg-green-900/30"
          >
            <BoxIcon name="check-circle" class="bx-md text-green-600 dark:text-green-400" />
          </div>
          <h3 class="mb-2 font-semibold text-gray-900 dark:text-white">Track Progress</h3>
          <p class="text-sm">Monitor project statuses &amp; approval workflows</p>
        </div>

        <div class="rounded-lg p-6 shadow-sm bg-background-card dark:bg-background-card-dark">
          <div
            class="mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-purple-100 dark:bg-purple-900/30"
          >
            <BoxIcon name="download" />
          </div>
          <h3 class="mb-2 font-semibold">Download Files</h3>
          <p class="text-sm">Quickly access stamped project deliverables &amp; archives</p>
        </div>
      </div>
    </div>
  </SectionContainer>

  <!-- Login/Register Form Section -->
  <SectionContainer class="px-6 py-16">
    <div class="h-screen-min md:h-auto mx-auto my-auto md:my-0 max-w-md">
      <!-- Tabs with Sliding Pill -->
      <div class="mb-8">
        <div id="auth-tabs" class="relative flex rounded-full dark:bg-gray-800 bg-gray-100">
          <!-- Sliding pill background -->
          <div
            id="auth-pill-bg"
            class="absolute top-0.5 h-14 rounded-full bg-primary-500 dark:bg-gray-700 transition-all duration-300 ease-out shadow-sm mix-blend-mode-multiply"
            style="width: 0px; left: 0px; opacity: 0;"
          >
          </div>
          <Button id="login-tab" variant="ghost" size="sm" onclick="switchAuthTab('login')"> Sign In </Button>
          <Button id="register-tab" variant="ghost" size="sm" onclick="switchAuthTab('register')"> Create Account </Button>
        </div>
      </div>

      <!-- Login Form -->
      <div
        id="login-form"
        class={activeTab === "login" ? "auth-form-content" : "auth-form-content hidden"}
      >
        <AuthForm />
      </div>

      <!-- Register Form -->
      <div
        id="register-form"
        class={activeTab === "register" ? "auth-form-content" : "auth-form-content hidden"}
      >
        <RegisterForm />
      </div>

      <!-- Contact Support -->
      <div class="mt-8 space-y-4 text-center">
        <div class="text-sm text-gray-500 dark:text-gray-400">
          <p>
            Need help? <Button
              variant="link"
              size="sm"
              onclick="triggerSMSForm()"
              class="cursor-pointer text-primary-600 underline hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300"
              >Contact our support team</Button
            >
          </p>
        </div>
      </div>
    </div>
  </SectionContainer>
</App>

<script>
  // Sliding pill functionality
  function updateSlidingPill(activeButton: Element | null) {
    const pillBg = document.getElementById("auth-pill-bg");
    const tabContainer = document.getElementById("auth-tabs");

    if (!pillBg || !activeButton || !tabContainer) return;

    const containerRect = tabContainer.getBoundingClientRect();
    const buttonRect = activeButton.getBoundingClientRect();

    // Calculate position relative to the container
    const left = buttonRect.left - containerRect.left;
    const width = buttonRect.width;

    // Update pill position and size
    pillBg.style.left = `${left}px`;
    pillBg.style.width = `${width}px`;
    pillBg.style.opacity = "1";
  }

  // Global function for tab switching
  (window as any).switchAuthTab = function (tab: "login" | "register") {
    const loginTab = document.getElementById("login-tab");
    const registerTab = document.getElementById("register-tab");
    const loginForm = document.getElementById("login-form");
    const registerForm = document.getElementById("register-form");

    if (!loginTab || !registerTab || !loginForm || !registerForm) return;

    if (tab === "login") {
      // Show/hide forms
      loginForm.classList.remove("hidden");
      registerForm.classList.add("hidden");

      // Update button text colors - active gets white text, inactive gets primary text
      loginTab.className =
        "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-white";
      registerTab.className =
        "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-primary-600 dark:text-primary-400";

      // Update sliding pill
      updateSlidingPill(loginTab);

      // Update URL without reload
      const url = new URL(window.location.href);
      url.searchParams.set("tab", "login");
      window.history.replaceState({}, "", url.toString());
    } else {
      // Show/hide forms
      registerForm.classList.remove("hidden");
      loginForm.classList.add("hidden");

      // Update button text colors - active gets white text, inactive gets primary text
      registerTab.className =
        "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-white";
      loginTab.className =
        "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-primary-600 dark:text-primary-400";

      // Update sliding pill
      updateSlidingPill(registerTab);

      // Update URL without reload
      const url = new URL(window.location.href);
      url.searchParams.set("tab", "register");
      window.history.replaceState({}, "", url.toString());
    }

    console.log(`üîê [LOGIN] Switched to ${tab} tab`);
  };

  // Initialize tab state on page load (in case JavaScript executes before server-side rendering is complete)
  document.addEventListener("DOMContentLoaded", function () {
    const urlParams = new URLSearchParams(window.location.search);
    const activeTab = urlParams.get("tab") || "login";

    if (activeTab === "register") {
      (window as any).switchAuthTab("register");
      console.log("üîê [LOGIN] Auto-switched to register tab from URL parameter");
    } else {
      // Initialize pill position and text colors for login tab
      setTimeout(() => {
        const loginTab = document.getElementById("login-tab");
        const registerTab = document.getElementById("register-tab");
        if (loginTab && registerTab) {
          // Set correct text colors for initial state
          loginTab.className =
            "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-white";
          registerTab.className =
            "relative z-10 flex-1 rounded-full px-3 py-5 text-sm font-medium transition-colors focus:outline-none text-primary-600 dark:text-primary-400";
          updateSlidingPill(loginTab);
        }
      }, 100);
    }
  });
</script>
