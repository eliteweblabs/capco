---
import DigitalSignature from "../../components/DigitalSignature.astro";

export const prerender = false;

// Get project data from URL params or query
const projectId = Astro.url.searchParams.get("projectId");
const mode = Astro.url.searchParams.get("mode");
const title = Astro.url.searchParams.get("title");
const address = Astro.url.searchParams.get("address");
const owner = Astro.url.searchParams.get("owner");
const architect = Astro.url.searchParams.get("architect");
const description = Astro.url.searchParams.get("description");
const sq_ft = Astro.url.searchParams.get("sq_ft");
const status = Astro.url.searchParams.get("status");

// This page can be used for PDF generation or preview
const isPdfMode = mode === "pdf";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
      Project Agreement - {title || address || `Project ${projectId}`}
    </title>

    <!-- PDF-optimized styles -->
    <style>
      @page {
        margin: 0.5in;
        size: letter;
      }

      * {
        box-sizing: border-box;
      }

      body {
        font-family: "Times New Roman", serif;
        line-height: 1.6;
        color: #000;
        background: white;
        margin: 0;
        padding: 20px;
        font-size: 12pt;
      }

      .header {
        text-align: center;
        border-bottom: 2px solid #000;
        padding-bottom: 20px;
        margin-bottom: 30px;
      }

      .header h1 {
        margin: 0;
        font-size: 24pt;
        font-weight: bold;
      }

      .header h2 {
        margin: 10px 0 0 0;
        font-size: 16pt;
        color: #666;
      }

      .section {
        margin-bottom: 30px;
        page-break-inside: avoid;
      }

      .section-title {
        font-size: 16pt;
        font-weight: bold;
        border-bottom: 1px solid #ccc;
        padding-bottom: 5px;
        margin-bottom: 15px;
      }

      .field-group {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 15px;
      }

      .field {
        flex: 1;
        min-width: 200px;
      }

      .field label {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
      }

      .field-value {
        border-bottom: 1px solid #000;
        min-height: 25px;
        padding: 5px 0;
      }

      .terms {
        font-size: 11pt;
        line-height: 1.5;
        margin: 20px 0;
      }

      .signature-section {
        margin-top: 50px;
        page-break-inside: avoid;
      }

      .signature-row {
        display: flex;
        justify-content: space-between;
        margin: 40px 0;
        gap: 40px;
      }

      .signature-block {
        flex: 1;
        text-align: center;
      }

      .signature-line {
        border-bottom: 1px solid #000;
        margin: 20px 0 10px 0;
        height: 80px;
        position: relative;
      }

      .signature-label {
        font-weight: bold;
        margin-top: 10px;
      }

      .date-line {
        border-bottom: 1px solid #000;
        width: 150px;
        margin: 20px auto 10px auto;
        height: 25px;
      }

      .footer {
        position: fixed;
        bottom: 0.5in;
        left: 0.5in;
        right: 0.5in;
        text-align: center;
        font-size: 10pt;
        color: #666;
        border-top: 1px solid #ccc;
        padding-top: 10px;
      }

      /* Print-specific styles */
      @media print {
        body {
          padding: 0;
        }

        .no-print {
          display: none !important;
        }

        .signature-section {
          page-break-before: auto;
        }
      }

      /* Hide signature controls in PDF mode */
      .pdf-mode .digital-signature-container button {
        display: none;
      }

      .pdf-mode .signature-status {
        display: none;
      }
    </style>
  </head>

  <body class={isPdfMode ? "pdf-mode" : ""}>
    <!-- Document Header -->
    <div class="header">
      <h1>PROJECT AGREEMENT</h1>
      <h2>Fire Protection Engineering Services</h2>
      <p>Project ID: {projectId || "TBD"}</p>
    </div>

    <!-- Project Information -->
    <div class="section">
      <h3 class="section-title">Project Information</h3>

      <div class="field-group">
        <div class="field">
          <label>Project Address:</label>
          <div class="field-value">{address || "TBD"}</div>
        </div>
        <div class="field">
          <label>Project Title:</label>
          <div class="field-value">{title || "TBD"}</div>
        </div>
      </div>

      <div class="field-group">
        <div class="field">
          <label>Owner:</label>
          <div class="field-value">{owner || "TBD"}</div>
        </div>
        <div class="field">
          <label>Architect:</label>
          <div class="field-value">{architect || "TBD"}</div>
        </div>
      </div>

      <div class="field-group">
        <div class="field">
          <label>Square Footage:</label>
          <div class="field-value">{sq_ft ? `${sq_ft} sq ft` : "TBD"}</div>
        </div>
        <div class="field">
          <label>Project Status:</label>
          <div class="field-value">{status || "New"}</div>
        </div>
      </div>

      <div class="field">
        <label>Project Description:</label>
        <div
          class="field-value"
          style="min-height: 60px; border: 1px solid #ccc; padding: 10px;"
        >
          {
            description ||
              "Fire protection engineering services as outlined in attached specifications."
          }
        </div>
      </div>
    </div>

    <!-- Scope of Work -->
    <div class="section">
      <h3 class="section-title">Scope of Work</h3>
      <p>Fire protection engineering services including but not limited to:</p>
      <ul>
        <li>Fire sprinkler system design and analysis</li>
        <li>Fire alarm system design and specifications</li>
        <li>Code compliance review and analysis</li>
        <li>Construction administration services</li>
        <li>System commissioning and testing oversight</li>
      </ul>
    </div>

    <!-- Terms and Conditions -->
    <div class="section">
      <h3 class="section-title">Terms and Conditions</h3>
      <div class="terms">
        <p>
          <strong>1. Services:</strong> Consultant agrees to provide fire protection
          engineering services as described in the attached scope of work and in
          accordance with applicable codes and standards.
        </p>

        <p>
          <strong>2. Timeline:</strong> Services shall be provided in accordance
          with the agreed-upon project schedule. Any changes to the timeline must
          be approved in writing by both parties.
        </p>

        <p>
          <strong>3. Compensation:</strong> Client agrees to compensate Consultant
          according to the fee schedule outlined in the attached proposal.
        </p>

        <p>
          <strong>4. Changes:</strong> Any changes to the scope of work must be documented
          in writing and signed by both parties before implementation.
        </p>
      </div>
    </div>

    <!-- Signature Section -->
    <div class="signature-section">
      <h3 class="section-title">Agreement Signatures</h3>

      <div class="signature-row">
        <div class="signature-block">
          <div class="signature-line">
            {
              !isPdfMode && (
                <DigitalSignature
                  id="client-signature"
                  width={300}
                  height={80}
                  placeholder="Client Signature"
                  required={true}
                />
              )
            }
          </div>
          <div class="signature-label">Client Signature</div>
          <div class="date-line"></div>
          <div>Date</div>
        </div>

        <div class="signature-block">
          <div class="signature-line">
            {
              !isPdfMode && (
                <DigitalSignature
                  id="consultant-signature"
                  width={300}
                  height={80}
                  placeholder="Consultant Signature"
                  required={true}
                />
              )
            }
          </div>
          <div class="signature-label">Consultant Signature</div>
          <div class="date-line"></div>
          <div>Date</div>
        </div>
      </div>

      <div class="signature-row">
        <div class="signature-block">
          <div class="field">
            <label>Print Name:</label>
            <div class="field-value"></div>
          </div>
          <div class="field">
            <label>Title:</label>
            <div class="field-value"></div>
          </div>
        </div>

        <div class="signature-block">
          <div class="field">
            <label>Print Name:</label>
            <div class="field-value"></div>
          </div>
          <div class="field">
            <label>Title:</label>
            <div class="field-value">Fire Protection Engineer</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Document Footer -->
    <div class="footer">
      <p>
        This document was generated on {new Date().toLocaleDateString()} | Project
        ID: {projectId || "TBD"}
      </p>
    </div>

    <!-- Form submission (only in non-PDF mode) -->
    {
      !isPdfMode && (
        <div
          class="no-print"
          style="margin-top: 50px; padding: 20px; background: #f5f5f5; border-radius: 8px;"
        >
          <h3>XXXGenerate PDF</h3>
          <p>
            Complete the signatures above and click the button below to generate
            the final PDF document.
          </p>

          <button
            id="generate-pdf-btn"
            type="button"
            class="px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
          >
            <i class="bx bx-download mr-2" />
            Generate PDF Document
          </button>

          <button
            id="save-draft-btn"
            type="button"
            class="ml-4 px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 transition-colors"
          >
            <i class="bx bx-save mr-2" />
            Save Draft
          </button>
        </div>
      )
    }

    <script type="module">
      // PDF generation functionality
      document.addEventListener("DOMContentLoaded", () => {
        const generatePdfBtn = document.getElementById("generate-pdf-btn");
        const saveDraftBtn = document.getElementById("save-draft-btn");

        generatePdfBtn?.addEventListener("click", async () => {
          // Validate signatures
          const clientSigEmpty =
            window.digitalSignatureManager?.isSignatureEmpty(
              "client-signature"
            );
          const consultantSigEmpty =
            window.digitalSignatureManager?.isSignatureEmpty(
              "consultant-signature"
            );

          if (clientSigEmpty || consultantSigEmpty) {
            if (window.globalServices) {
              window.globalServices.showNotification({
                type: "error",
                title: "Missing Signatures",
                message:
                  "Please complete both client and consultant signatures before generating PDF.",
                duration: 0,
              });
            }
            return;
          }

          // Get signature data
          const signatures =
            window.digitalSignatureManager?.getAllSignatures() || {};

          // Generate PDF
          try {
            generatePdfBtn.disabled = true;
            generatePdfBtn.innerHTML =
              '<i class="bx bx-loader-alt bx-spin mr-2"></i>Generating PDF...';

            const response = await fetch("/api/generate-pdf", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                templateUrl: window.location.href + (window.location.href.includes("?") ? "&" : "?") + "mode=pdf",
                signatures: signatures,
                projectData: {
                  projectId: new URLSearchParams(window.location.search).get(
                    "projectId"
                  ),
                  title: new URLSearchParams(window.location.search).get(
                    "title"
                  ),
                  address: new URLSearchParams(window.location.search).get(
                    "address"
                  ),
                },
              }),
            });

            if (response.ok) {
              const blob = await response.blob();
              const url = window.URL.createObjectURL(blob);
              const a = document.createElement("a");
              a.href = url;
              a.download = `project-agreement-${new URLSearchParams(window.location.search).get("projectId") || "draft"}.pdf`;
              document.body.appendChild(a);
              a.click();
              window.URL.revokeObjectURL(url);
              document.body.removeChild(a);

              if (window.globalServices) {
                window.globalServices.showNotification({
                  type: "success",
                  title: "PDF Generated",
                  message:
                    "Project agreement PDF has been generated and downloaded.",
                  duration: 5000,
                });
              }
            } else {
              throw new Error("Failed to generate PDF");
            }
          } catch (error) {
            console.error("PDF generation error:", error);
            if (window.globalServices) {
              window.globalServices.showNotification({
                type: "error",
                title: "PDF Generation Failed",
                message:
                  "There was an error generating the PDF. Please try again.",
                duration: 0,
              });
            }
          } finally {
            generatePdfBtn.disabled = false;
            generatePdfBtn.innerHTML =
              '<i class="bx bx-download mr-2"></i>Generate PDF Document';
          }
        });

        saveDraftBtn?.addEventListener("click", () => {
          // Save draft functionality
          const signatures =
            window.digitalSignatureManager?.getAllSignatures() || {};
          localStorage.setItem(
            "pdf-draft-signatures",
            JSON.stringify(signatures)
          );

          if (window.globalServices) {
            window.globalServices.showNotification({
              type: "success",
              title: "Draft Saved",
              message: "Document draft has been saved locally.",
              duration: 3000,
            });
          }
        });

        // Load draft if available
        const savedSignatures = localStorage.getItem("pdf-draft-signatures");
        if (savedSignatures) {
          try {
            const signatures = JSON.parse(savedSignatures);
            // Note: Would need additional logic to restore signatures to canvas
            console.log("Draft signatures available:", signatures);
          } catch (error) {
            console.error("Error loading draft:", error);
          }
        }
      });
    </script>
  </body>
</html>
