---
// Test page to demonstrate the dual-mode Button component
import Button from "../components/common/Button.astro";
---

<html>
  <head>
    <title>Button Partial Test</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-100 p-8">
    <div class="mx-auto max-w-4xl space-y-8">
      <h1 class="text-3xl font-bold">Button Component - Dual Mode Test</h1>

      <!-- Regular Component Usage -->
      <section class="rounded-lg bg-white p-6 shadow">
        <h2 class="mb-4 text-xl font-semibold">Regular Component Usage (Props)</h2>
        <div class="flex flex-wrap gap-4">
          <Button variant="primary">Primary Button</Button>
          <Button variant="secondary">Secondary Button</Button>
          <Button variant="ghost" icon="plus">Ghost with Icon</Button>
          <Button variant="danger" loading>Loading Button</Button>
        </div>
      </section>

      <!-- Partial Usage -->
      <section class="rounded-lg bg-white p-6 shadow">
        <h2 class="mb-4 text-xl font-semibold">Partial Usage (Headers)</h2>
        <div id="partial-buttons" class="flex flex-wrap gap-4">
          <!-- Buttons will be inserted here via JavaScript -->
        </div>
      </section>
    </div>

    <script>
      // Simple approach: just fetch the Button component with headers
      async function createPartialButtons() {
        const container = document.getElementById("partial-buttons");
        if (!container) return;

        try {
          // Create buttons by directly fetching the Button component with headers
          const buttonConfigs = [
            {
              text: "Primary Partial",
              headers: {
                "x-button-variant": "primary",
                "x-button-type": "button",
              },
            },
            {
              text: "Secondary Partial",
              headers: {
                "x-button-variant": "secondary",
                "x-button-type": "button",
              },
            },
            {
              text: "Ghost with Icon",
              headers: {
                "x-button-variant": "ghost",
                "x-button-icon": "plus",
                "x-button-icon-position": "left",
                "x-button-type": "button",
              },
            },
            {
              text: "Loading Button",
              headers: {
                "x-button-variant": "primary",
                "x-button-loading": "true",
                "x-button-disabled": "true",
                "x-button-type": "button",
              },
            },
          ];

          for (const config of buttonConfigs) {
            // Add the text to headers and filter out undefined values
            const headersWithText: Record<string, string> = {
              ...Object.fromEntries(
                Object.entries(config.headers).filter(([_, value]) => value !== undefined)
              ),
              "x-button-text": config.text,
            };

            const response = await fetch("/partials/button", {
              headers: headersWithText,
            });
            const buttonHTML = await response.text();

            // Insert the button HTML directly
            const wrapper = document.createElement("div");
            wrapper.innerHTML = buttonHTML;
            const button = wrapper.firstElementChild;
            if (button) {
              container.appendChild(button);
            }
          }
        } catch (error) {
          console.error("Failed to create partial buttons:", error);
          container.innerHTML = '<p class="text-red-500">Failed to load partial buttons</p>';
        }
      }

      // Initialize when page loads
      document.addEventListener("DOMContentLoaded", createPartialButtons);
    </script>
  </body>
</html>
