---
import Base from "../layout/Base.astro";
import SectionContainer from "../components/common/SectionContainer.astro";
import BoxIcon from "../components/common/BoxIcon.astro";

// Check if user is authenticated
import { checkAuth } from "../lib/auth";
const { isAuth, user, role } = await checkAuth(Astro.cookies);

// Redirect to login if not authenticated
if (!isAuth || !user) {
  return Astro.redirect("/login");
}

// Only allow admins to access this page
if (role !== "Admin") {
  return Astro.redirect("/dashboard");
}
---

<Base
  title="Email Test - CAPCo Fire Protection"
  description="Test email sending functionality using Resend."
  user={user}
>
  <SectionContainer class="px-6 py-16">
    <div class="mx-auto max-w-2xl">
      <!-- Header -->
      <div class="mb-8 text-center">
        <div
          class="mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-blue-100 dark:bg-blue-900/30"
        >
          <BoxIcon name="mail-send" class="h-8 w-8 text-blue-600 dark:text-blue-400" />
        </div>
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Email Test</h1>
        <p class="mt-2 text-gray-600 dark:text-gray-300">
          Test email sending functionality using Resend API
        </p>
      </div>

      <!-- Email Test Form -->
      <div class="rounded-lg bg-white p-6 shadow-sm dark:bg-gray-800">
        <form id="email-test-form" class="space-y-6">
          <!-- To Email Field -->
          <div>
            <label
              for="to-email"
              class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
            >
              To Email Address *
            </label>
            <input
              type="email"
              id="to-email"
              name="to"
              required
              class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-60 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
              placeholder="recipient@example.com"
            />
          </div>

          <!-- Subject Field -->
          <div>
            <label
              for="subject"
              class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
            >
              Subject *
            </label>
            <input
              type="text"
              id="subject"
              name="subject"
              required
              class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-60 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
              placeholder="Test Email Subject"
            />
          </div>

          <!-- Body Field -->
          <div>
            <label
              for="body"
              class="mb-1 block text-sm font-medium text-gray-700 dark:text-gray-300"
            >
              Email Body (HTML) *
            </label>
            <textarea
              id="body"
              name="body"
              required
              rows="8"
              class="w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-60 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-blue-400"
              placeholder="<h1>Hello!</h1><p>This is a test email from CAPCo Fire Protection.</p>"
            ></textarea>
            <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
              You can use HTML tags for formatting. The email will be sent with both HTML and plain text versions.
            </p>
          </div>

          <!-- Action Buttons -->
          <div class="flex gap-3 pt-4">
            <button
              type="submit"
              id="send-email-btn"
              class="flex-1 rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50"
            >
              Send Test Email
            </button>
            <a
              href="/dashboard"
              class="flex-1 rounded-md border border-gray-300 bg-white px-4 py-2 text-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
            >
              Back to Dashboard
            </a>
          </div>
        </form>
      </div>

      <!-- Environment Info -->
      <div class="mt-8 rounded-lg bg-gray-50 p-6 dark:bg-gray-800">
        <h2 class="mb-4 text-lg font-semibold text-gray-900 dark:text-white">Environment Configuration</h2>
        <div class="space-y-2 text-sm text-gray-600 dark:text-gray-400">
          <div class="flex justify-between">
            <span>Email Provider:</span>
            <span class="font-mono">{import.meta.env.EMAIL_PROVIDER || 'Not set'}</span>
          </div>
          <div class="flex justify-between">
            <span>From Email:</span>
            <span class="font-mono">{import.meta.env.FROM_EMAIL || 'Not set'}</span>
          </div>
          <div class="flex justify-between">
            <span>From Name:</span>
            <span class="font-mono">{import.meta.env.FROM_NAME || 'Not set'}</span>
          </div>
          <div class="flex justify-between">
            <span>API Key:</span>
            <span class="font-mono">
              {import.meta.env.EMAIL_API_KEY 
                ? `${import.meta.env.EMAIL_API_KEY.substring(0, 8)}...` 
                : 'Not set'}
            </span>
          </div>
        </div>
      </div>
    </div>
  </SectionContainer>
</Base>

<script>
  import { globalServices } from "../lib/global-services";

  document.addEventListener("DOMContentLoaded", () => {
    const emailTestForm = document.getElementById("email-test-form") as HTMLFormElement;
    const sendEmailBtn = document.getElementById("send-email-btn") as HTMLButtonElement;

    // Handle email test form submission
    emailTestForm?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(emailTestForm);
      const to = formData.get("to") as string;
      const subject = formData.get("subject") as string;
      const body = formData.get("body") as string;

      // Disable button and show loading state
      sendEmailBtn.disabled = true;
      sendEmailBtn.textContent = "Sending...";

      try {
        const response = await fetch("/api/test-email", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ to, subject, body }),
        });

        const result = await response.json();

        if (response.ok) {
          globalServices.showNotification({
            type: "success",
            title: "Email Sent Successfully",
            message: `Test email sent to ${to}. Email ID: ${result.emailId}`,
            duration: 8000,
          });
          
          // Reset form
          emailTestForm.reset();
        } else {
          globalServices.showNotification({
            type: "error",
            title: "Email Send Failed",
            message: result.error || "Failed to send email. Please check your configuration.",
            duration: 8000,
          });
        }
      } catch (error) {
        console.error("Email test error:", error);
        globalServices.showNotification({
          type: "error",
          title: "Network Error",
          message: "Failed to send email. Please check your connection and try again.",
          duration: 5000,
        });
      } finally {
        // Re-enable button
        sendEmailBtn.disabled = false;
        sendEmailBtn.textContent = "Send Test Email";
      }
    });
  });
</script>
