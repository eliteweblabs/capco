---
// Agora Voice AI Setup Page
import { checkAuth } from "../../lib/auth";
import App from "../../components/common/App.astro";

const { currentUser, isAuth } = await checkAuth(Astro.cookies);

if (!currentUser || !isAuth || currentUser.profile.role !== "Admin") {
  return Astro.redirect("/login");
}

// Check environment variables on server-side
const envVars = {
  AGORA_APP_ID: import.meta.env.AGORA_APP_ID ? "‚úÖ Set" : "‚ùå Not set",
  AGORA_APP_CERTIFICATE: import.meta.env.AGORA_APP_CERTIFICATE ? "‚úÖ Set" : "‚ùå Not set",
  N8N_WEBHOOK_URL: import.meta.env.N8N_WEBHOOK_URL ? "‚úÖ Set" : "‚ùå Not set",
  N8N_WEBHOOK_TOKEN: import.meta.env.N8N_WEBHOOK_TOKEN ? "‚úÖ Set" : "‚ùå Not set",
  SITE_URL: import.meta.env.SITE_URL ? "‚úÖ Set" : "‚ùå Not set"
};
---

<App title="Agora Voice AI Setup">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
          üéôÔ∏è Agora Voice AI Setup
        </h1>

        <div class="space-y-6">
          <!-- Environment Variables Check -->
          <div class="p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
              üîß Environment Variables Check
            </h3>
            <div class="text-sm space-y-2">
              <div>
                <strong>AGORA_APP_ID:</strong>
                {envVars.AGORA_APP_ID}
              </div>
              <div>
                <strong>AGORA_APP_CERTIFICATE:</strong>
                {envVars.AGORA_APP_CERTIFICATE}
              </div>
              <div>
                <strong>N8N_WEBHOOK_URL:</strong>
                {envVars.N8N_WEBHOOK_URL}
              </div>
              <div>
                <strong>N8N_WEBHOOK_TOKEN:</strong>
                {envVars.N8N_WEBHOOK_TOKEN}
              </div>
              <div>
                <strong>SITE_URL:</strong>
                {envVars.SITE_URL}
              </div>
            </div>
          </div>

          <!-- Setup Instructions -->
          <div class="p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg">
            <h3 class="text-lg font-semibold text-yellow-800 dark:text-yellow-200 mb-3">
              üìã Setup Instructions
            </h3>
            <ol class="list-decimal list-inside space-y-2 text-yellow-800 dark:text-yellow-200">
              <li>
                Go to <a
                  href="https://console.agora.io/"
                  target="_blank"
                  class="text-yellow-600 dark:text-yellow-400 underline">Agora Console</a>
              </li>
              <li>Navigate to <strong>Projects</strong> and create a new project</li>
              <li>Copy your <strong>App ID</strong> and <strong>App Certificate</strong></li>
              <li>
                Add these to Railway environment variables:
                <ul class="list-disc list-inside ml-4 mt-2">
                  <li><code>AGORA_APP_ID</code> = Your App ID</li>
                  <li><code>AGORA_APP_CERTIFICATE</code> = Your App Certificate</li>
                </ul>
              </li>
              <li>
                Set up your n8n webhook URL and token:
                <ul class="list-disc list-inside ml-4 mt-2">
                  <li><code>N8N_WEBHOOK_URL</code> = Your n8n webhook URL</li>
                  <li><code>N8N_WEBHOOK_TOKEN</code> = Your n8n webhook token</li>
                </ul>
              </li>
            </ol>
          </div>

          <!-- Webhook Testing -->
          <div class="p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
              üß™ Test Webhook Endpoints
            </h3>
            <div class="space-y-3">
              <button
                id="test-voice-webhook"
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500"
              >
                üîç Test Voice Webhook
              </button>
              <div id="webhook-test-results" class="mt-3"></div>
            </div>
          </div>

          <!-- Agora Integration Info -->
          <div class="p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
            <h3 class="text-lg font-semibold text-blue-800 dark:text-blue-200 mb-3">
              üéØ Agora Voice AI Pipeline
            </h3>
            <div class="text-sm text-blue-800 dark:text-blue-200 space-y-2">
              <p><strong>Webhook URL:</strong> <code>{import.meta.env.SITE_URL}/api/webhook/agora-voice</code></p>
              <p><strong>Event Types:</strong> user_joined, user_started_audio, recording_started</p>
              <p><strong>Integration:</strong> Agora ‚Üí Webhook ‚Üí n8n ‚Üí Claude ‚Üí ElevenLabs</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</App>

<script>
  // Test voice webhook
  document.getElementById("test-voice-webhook")?.addEventListener("click", async function () {
    const button = this;
    const resultDiv = document.getElementById("webhook-test-results");

    button.disabled = true;
    button.textContent = "üîÑ Testing...";

    try {
      const response = await fetch("/api/webhook/agora-voice", {
        method: "GET",
      });
      const data = await response.text();

      if (resultDiv) {
        resultDiv.innerHTML = `
          <div class="bg-green-100 dark:bg-green-900/20 border border-green-400 text-green-700 dark:text-green-300 px-4 py-3 rounded">
            <strong>‚úÖ Success:</strong> ${data}
          </div>
        `;
      }
    } catch (error) {
      if (resultDiv) {
        resultDiv.innerHTML = `
          <div class="bg-red-100 dark:bg-red-900/20 border border-red-400 text-red-700 dark:text-red-300 px-4 py-3 rounded">
            <strong>‚ùå Error:</strong> ${error instanceof Error ? error.message : String(error)}
          </div>
        `;
      }
    } finally {
      button.disabled = false;
      button.textContent = "üîç Test Voice Webhook";
    }
  });
</script>
