---
console.log("📊 [DASHBOARD] Page loading started...");

import App from "../components/common/App.astro";
import DashboardComponent from "../components/common/Dashboard.astro";
import SectionContainer from "../components/common/SectionContainer.astro";

import ProjectNav from "../components/project/ProjectNav.astro";

import Hero from "../components/common/Hero.astro";

// Check authentication
import { checkAuth } from "../lib/auth";
const { isAuth, session, user, role } = await checkAuth(Astro.cookies);

// Redirect if not authenticated
if (!isAuth) {
  return Astro.redirect("/login");
}

// Debug information
console.log("🔍 [DASHBOARD] Auth check results:", {
  isAuth,
  hasUser: !!user,
  userId: user?.id,
  userEmail: user?.email,
  role,
  hasSession: !!session,
});

// Test database access if authenticated
let projectCount = 0;

// Additional debugging - check cookies directly
const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

console.log("🍪 [DASHBOARD] Cookie status:", {
  hasAccessToken: !!accessToken,
  hasRefreshToken: !!refreshToken,
  accessTokenLength: accessToken?.value?.length || 0,
  refreshTokenLength: refreshToken?.value?.length || 0,
});

// Fetch projects and statuses from API
let projects: any[] = [];
let project_statuses: any[] = [];

try {
  // Fetch projects
  const projectsResponse = await (fetch as any)(`${Astro.url.origin}/api/get-project`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  });

  if (projectsResponse.ok) {
    const projectsResult = await projectsResponse.json();
    if (projectsResult.success) {
      const allProjects = projectsResult.projects || [];
      console.log("🏗️ [DASHBOARD] Projects fetched:", allProjects.length);

      // Filter projects based on user role
      if (role === "Admin") {
        // Admin sees all projects
        projects = allProjects;
        console.log("🏗️ [DASHBOARD] Admin - showing all projects:", projects.length);
      } else if (role === "Staff") {
        // Staff only sees projects where they are assigned
        projects = allProjects.filter((project: any) => project.assigned_to_id === user.id);
        console.log("🏗️ [DASHBOARD] Staff - showing assigned projects:", projects.length);
      } else {
        // Clients only see projects they authored
        projects = allProjects.filter((project: any) => project.author_id === user.id);
        console.log("🏗️ [DASHBOARD] Client - showing authored projects:", projects.length);
      }
    } else {
      console.error("Projects API returned error:", projectsResult.error);
    }
  } else {
    console.error("Failed to fetch projects:", projectsResponse.status);
  }

  // Fetch statuses
  const statusesResponse = await (fetch as any)(`${Astro.url.origin}/api/get-project-statuses`, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      role: role || "Client",
    },
  });

  if (statusesResponse.ok) {
    const statusesResult = await statusesResponse.json();
    if (statusesResult.success) {
      console.log(
        "🏗️ [DASHBOARD] Statuses fetched:",
        Object.keys(statusesResult.statuses || {}).length
      );
      project_statuses = Object.values(statusesResult.statuses || {});
    } else {
      console.error("Statuses API returned error:", statusesResult.error);
    }
  } else {
    console.error("Failed to fetch statuses:", statusesResponse.status);
  }
} catch (error) {
  console.error("Error fetching data:", error);
}
---

<App>
  <!-- <SectionContainer id="hero" class="mx-6 my-6"> -->
  <Hero title={user?.company_name || "Dashboard"} description={user?.email || "User"} />
  <!-- </SectionContainer> -->

  <!-- <DebugComponent/> -->

  <!-- Navigation -->
  <SectionContainer class="mx-6 flex flex-col gap-y-6">
    <ProjectNav role={role || "Client"} projects={projects} statuses={project_statuses} stat />
  </SectionContainer>

  <!-- Main Dashboard -->
  <SectionContainer id="dashboard" class="mx-6 mb-0 mt-0 flex">
    <DashboardComponent role={role || "Client"} projects={projects} />
  </SectionContainer>
</App>
