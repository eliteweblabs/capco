---
import App from "../components/common/App.astro";
import DashboardComponent from "../components/common/Dashboard.astro";
import SectionContainer from "../components/common/SectionContainer.astro";
import ProjectNav from "../components/project/ProjectNav.astro";
import HeroDashboard from "../components/common/HeroDashboard.astro";
import "../lib/refresh-manager.ts";
// Get auth data directly since App component handles auth requirements
import { checkAuth } from "../lib/auth";
import { supabaseAdmin } from "../lib/supabase-admin";

const { isAuth = false, currentUser, currentRole, session } = await checkAuth(Astro.cookies);

// console.log("🚀 [DASHBOARD] Current user:", currentUser);
// Initialize data arrays
let projects: any[] = [];
let project_statuses: any[] = [];
let project_statuses_object: any = {};

// Fetch projects using the API endpoint that includes discussion counts
if (currentUser?.id) {
  try {
    const baseUrl = Astro.url.origin || "http://localhost:4321";
    let apiUrl = `${baseUrl}/api/get-project`;

    // Add assigned_to_id parameter for Staff role
    if (currentRole === "Staff") {
      apiUrl += `?assigned_to_id=${currentUser.id}`;
    }
    // For Admin and Client, no additional parameters needed (API handles role-based filtering)

    // console.log("🏗️ [DASHBOARD] Fetching projects from API:", apiUrl);
    const response = await fetch(apiUrl);

    if (response.ok) {
      const data = await response.json();
      projects = data.projects || [];
      // console.log("🏗️ [DASHBOARD] Projects fetched with discussion counts:", projects.length);
      // console.log("🏗️ [DASHBOARD] Sample project data:", {
      //   id: projects[0]?.id,
      //   title: projects[0]?.title,
      //   comment_count: projects[0]?.comment_count,
      //   incomplete_discussions: projects[0]?.i,complete_discussions,
      // });
    } else {
      console.error(
        "🏗️ [DASHBOARD] Error fetching projects:",
        response.status,
        response.statusText
      );
    }
  } catch (error) {
    console.error("🏗️ [DASHBOARD] Error fetching projects:", error);
  }
}

import type { ProjectStatus } from "../lib/types/project-status";
import { fetchProjectStatuses } from "../lib/api/project-statuses";
import { processProjectStatuses } from "../lib/api/project-statuses";

// Fetch project statuses
if (supabaseAdmin) {
  try {
    const { statuses, statusesMap } = await fetchProjectStatuses(supabaseAdmin);
    project_statuses = statuses as ProjectStatus[];
    project_statuses_object = processProjectStatuses(statuses, currentRole || "Client");
  } catch (error) {
    console.error("🏗️ [DASHBOARD] Error fetching statuses:", error);
  }
}
---

<App
  title="Global Dashboard - CAPCo Fire Protection"
  description="View all projects."
  requireAuth={true}
  requireRole={currentRole || "Client"}
  isAuth={isAuth}
  currentUser={currentUser}
  currentRole={currentRole || "Client"}
  session={session}
>
  <HeroDashboard
    title="Project Dashboard"
    description={currentRole === "Client"
      ? "Manage and track your fire protection projects"
      : "Manage and track all fire protection projects"}
  />

  <ProjectNav
    currentRole={currentRole || "Client"}
    projects={projects}
    statuses={project_statuses}
    currentUser={currentUser}
  />

  <DashboardComponent
    projects={projects}
    project_statuses={project_statuses}
    project_statuses_object={project_statuses_object}
    currentUser={currentUser}
    currentRole={currentRole}
  />
</App>

<script>
  // Data is now loaded in front matter, no need for client-side API calls
  console.log("🏗️ [DASHBOARD] Dashboard loaded with data from front matter");
</script>
