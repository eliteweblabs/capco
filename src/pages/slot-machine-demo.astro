---
import App from "../components/common/App.astro";

// Example data
const statusOptions = [
  { value: "0", label: "New Project" },
  { value: "10", label: "In Review" },
  { value: "20", label: "Approved" },
  { value: "30", label: "In Progress" },
  { value: "40", label: "Completed" },
  { value: "50", label: "Delivered" },
  { value: "60", label: "On Hold" },
  { value: "70", label: "Cancelled" },
  { value: "80", label: "Archived" },
  { value: "90", label: "Pending Review" },
  { value: "100", label: "Final Review" },
  { value: "110", label: "Ready for Delivery" },
];

const staffOptions = [
  { value: "1", label: "John Smith" },
  { value: "2", label: "Sarah Johnson" },
  { value: "3", label: "Mike Wilson" },
  { value: "4", label: "Emily Davis" },
  { value: "5", label: "David Brown" },
  { value: "6", label: "Lisa Anderson" },
  { value: "7", label: "Alex Rodriguez" },
  { value: "8", label: "Maria Garcia" },
  { value: "9", label: "James Wilson" },
  { value: "10", label: "Jennifer Lee" },
  { value: "11", label: "Robert Taylor" },
  { value: "12", label: "Amanda Clark" },
];

const priorityOptions = [
  { value: "low", label: "Low Priority" },
  { value: "medium", label: "Medium Priority" },
  { value: "high", label: "High Priority" },
  { value: "urgent", label: "Urgent" },
  { value: "critical", label: "Critical" },
  { value: "emergency", label: "Emergency" },
  { value: "routine", label: "Routine" },
  { value: "normal", label: "Normal" },
];
---

<App title="Slot Machine Picker Demo" description="Demo of the slot machine picker component">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900 py-12">
    <div class="max-w-4xl mx-auto px-4">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
          Slot Machine Picker Demo
        </h1>
        <p class="text-gray-600 dark:text-gray-400">
          A mobile-friendly picker component that works great in modals
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Status Picker -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Project Status</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Select a project status using the slot machine picker
          </p>
          <button
            id="status-picker-btn"
            class="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
          >
            Select Status
          </button>
          <div id="status-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            No status selected
          </div>
        </div>

        <!-- Staff Picker -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Assign Staff</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Choose a team member to assign to the project
          </p>
          <button
            id="staff-picker-btn"
            class="w-full px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
          >
            Select Staff
          </button>
          <div id="staff-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            No staff selected
          </div>
        </div>

        <!-- Priority Picker -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Priority Level</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Set the priority level for this task
          </p>
          <button
            id="priority-picker-btn"
            class="w-full px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 transition-colors"
          >
            Select Priority
          </button>
          <div id="priority-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            No priority selected
          </div>
        </div>
      </div>

      <!-- Features Section -->
      <div class="mt-12 bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Features</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="flex items-start space-x-3">
            <div class="flex-shrink-0">
              <i class="bx bx-mobile text-blue-600 text-xl"></i>
            </div>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-white">Mobile Optimized</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                Touch-friendly interface with smooth scrolling and momentum
              </p>
            </div>
          </div>

          <div class="flex items-start space-x-3">
            <div class="flex-shrink-0">
              <i class="bx bx-mouse text-blue-600 text-xl"></i>
            </div>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-white">Mouse Support</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                Mouse wheel scrolling, click interactions, and smooth animations
              </p>
            </div>
          </div>

          <div class="flex items-start space-x-3">
            <div class="flex-shrink-0">
              <i class="bx bx-keyboard text-blue-600 text-xl"></i>
            </div>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-white">Keyboard Accessible</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                Arrow keys to navigate, Enter to select, Escape to close
              </p>
            </div>
          </div>

          <div class="flex items-start space-x-3">
            <div class="flex-shrink-0">
              <i class="bx bx-palette text-blue-600 text-xl"></i>
            </div>
            <div>
              <h3 class="font-medium text-gray-900 dark:text-white">Theme Support</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                Automatically adapts to light/dark theme
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</App>

<script>
  import { showSlotMachinePicker } from "../lib/slot-machine-utils";

  document.addEventListener("DOMContentLoaded", function () {
    // Status picker
    document.getElementById("status-picker-btn")?.addEventListener("click", async () => {
      const result = await showSlotMachinePicker({
        id: "status-picker",
        title: "Select Project Status",
        options: [
          { value: "0", label: "New Project" },
          { value: "10", label: "In Review" },
          { value: "20", label: "Approved" },
          { value: "30", label: "In Progress" },
          { value: "40", label: "Completed" },
          { value: "50", label: "Delivered" },
          { value: "60", label: "On Hold" },
          { value: "70", label: "Cancelled" },
          { value: "80", label: "Archived" },
          { value: "90", label: "Pending Review" },
          { value: "100", label: "Final Review" },
          { value: "110", label: "Ready for Delivery" },
          { value: "120", label: "Under Construction" },
          { value: "130", label: "Design Phase" },
          { value: "140", label: "Planning Phase" },
          { value: "150", label: "Testing Phase" },
          { value: "160", label: "Quality Assurance" },
          { value: "170", label: "Client Review" },
          { value: "180", label: "Revision Required" },
          { value: "190", label: "Final Approval" },
        ],
        selectedValue: "20",
        onSelect: (value, label) => {
          console.log("Status selected:", value, label);
        },
      });

      if (result.value) {
        document.getElementById("status-result")!.textContent = `Selected: ${result.label}`;
      }
    });

    // Staff picker
    document.getElementById("staff-picker-btn")?.addEventListener("click", async () => {
      const result = await showSlotMachinePicker({
        id: "staff-picker",
        title: "Assign Staff Member",
        options: [
          { value: "1", label: "John Smith" },
          { value: "2", label: "Sarah Johnson" },
          { value: "3", label: "Mike Wilson" },
          { value: "4", label: "Emily Davis" },
          { value: "5", label: "David Brown" },
          { value: "6", label: "Lisa Anderson" },
          { value: "7", label: "Alex Rodriguez" },
          { value: "8", label: "Maria Garcia" },
          { value: "9", label: "James Wilson" },
          { value: "10", label: "Jennifer Lee" },
          { value: "11", label: "Robert Taylor" },
          { value: "12", label: "Amanda Clark" },
          { value: "13", label: "Christopher Lee" },
          { value: "14", label: "Michelle White" },
          { value: "15", label: "Daniel Martinez" },
          { value: "16", label: "Ashley Thompson" },
          { value: "17", label: "Kevin Anderson" },
          { value: "18", label: "Rachel Green" },
          { value: "19", label: "Michael Scott" },
          { value: "20", label: "Pam Beesly" },
          { value: "21", label: "Jim Halpert" },
          { value: "22", label: "Dwight Schrute" },
          { value: "23", label: "Angela Martin" },
          { value: "24", label: "Stanley Hudson" },
          { value: "25", label: "Phyllis Vance" },
        ],
        onSelect: (value, label) => {
          console.log("Staff selected:", value, label);
        },
      });

      if (result.value) {
        document.getElementById("staff-result")!.textContent = `Selected: ${result.label}`;
      }
    });

    // Priority picker
    document.getElementById("priority-picker-btn")?.addEventListener("click", async () => {
      const result = await showSlotMachinePicker({
        id: "priority-picker",
        title: "Set Priority Level",
        options: [
          { value: "low", label: "Low Priority" },
          { value: "medium", label: "Medium Priority" },
          { value: "high", label: "High Priority" },
          { value: "urgent", label: "Urgent" },
          { value: "critical", label: "Critical" },
          { value: "emergency", label: "Emergency" },
          { value: "routine", label: "Routine" },
          { value: "normal", label: "Normal" },
          { value: "important", label: "Important" },
          { value: "minor", label: "Minor" },
          { value: "major", label: "Major" },
          { value: "blocking", label: "Blocking" },
          { value: "non-blocking", label: "Non-Blocking" },
          { value: "deferred", label: "Deferred" },
          { value: "immediate", label: "Immediate" },
        ],
        onSelect: (value, label) => {
          console.log("Priority selected:", value, label);
        },
      });

      if (result.value) {
        document.getElementById("priority-result")!.textContent = `Selected: ${result.label}`;
      }
    });
  });
</script>
