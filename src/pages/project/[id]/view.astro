---
import { supabase } from "../../../lib/supabase";
import { checkAuth } from "../../../lib/auth";

const { id } = Astro.params;
const { searchParams } = Astro.url;
const token = searchParams.get("token");

// Check if this is a magic link access
const isMagicLink = token === "magic";

// Get user session
const { isAuth, user } = await checkAuth(Astro.cookies);

// If magic link, we'll handle auth differently
let projectData = null;
let error = null;

if (isMagicLink) {
  // For magic links, we'll show a simplified view
  // The actual auth will be handled by Supabase when they click the link
  projectData = {
    id: id,
    title: "Project View",
    message: "Click the magic link in your email to view this project.",
  };
} else if (isAuth && user && supabase) {
  // Normal authenticated access
  try {
    const { data, error: projectError } = await supabase
      .from("projects")
      .select("*")
      .eq("id", id)
      .single();

    if (projectError) throw projectError;
    projectData = data;
  } catch (err) {
    error = "Project not found or access denied";
  }
} else if (!supabase) {
  error = "Database not configured";
} else {
  error = "Authentication required";
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Project View - CAPCo Fire Protection</title>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900">
    <div class="min-h-screen flex items-center justify-center">
      <div
        class="max-w-md w-full bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6"
      >
        {
          error ? (
            <div class="text-center">
              <div class="text-red-500 text-6xl mb-4">
                <i class="bx bx-error-circle" />
              </div>
              <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                Access Denied
              </h1>
              <p class="text-gray-600 dark:text-gray-400 mb-6">{error}</p>
              <a
                href="/"
                class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
              >
                <i class="bx bx-home mr-2" />
                Go Home
              </a>
            </div>
          ) : isMagicLink ? (
            <div class="text-center">
              <div class="text-blue-500 text-6xl mb-4">
                <i class="bx bx-envelope" />
              </div>
              <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                Check Your Email
              </h1>
              <p class="text-gray-600 dark:text-gray-400 mb-6">
                We've sent you a magic link to view this project. Please check
                your email and click the link to continue.
              </p>
              <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
                <p class="text-sm text-blue-800 dark:text-blue-200">
                  <i class="bx bx-info-circle mr-1" />
                  The magic link will automatically log you in and redirect you
                  to this project.
                </p>
              </div>
            </div>
          ) : projectData ? (
            <div>
              <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
                {projectData.title || `Project ${projectData.id}`}
              </h1>
              <div class="space-y-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Address
                  </label>
                  <p class="text-gray-900 dark:text-white">
                    {projectData.address || "No address specified"}
                  </p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Square Footage
                  </label>
                  <p class="text-gray-900 dark:text-white">
                    {projectData.sq_ft
                      ? `${projectData.sq_ft} sq ft`
                      : "Not specified"}
                  </p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">
                    Construction Type
                  </label>
                  <p class="text-gray-900 dark:text-white">
                    {projectData.new_construction
                      ? "New Construction"
                      : "Renovation"}
                  </p>
                </div>
              </div>
              <div class="mt-6">
                <a
                  href="/"
                  class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  <i class="bx bx-arrow-left mr-2" />
                  Back to Projects
                </a>
              </div>
            </div>
          ) : null
        }
      </div>
    </div>
  </body>
</html>

