---
import { checkAuth } from "../lib/auth";
const { currentUser, session, supabase, refreshToken, accessToken } = await checkAuth(
  Astro.cookies
);
const currentRole = currentUser?.profile?.role || "Client";

import App from "../components/common/App.astro";
import Hero from "../components/common/Hero.astro";
---

<App
  title="Voice Assistant Testing"
  description="Test the Vapi.ai voice assistant for appointment booking. This page is for development and testing purposes."
>
  <div class="px-4 pt-4">
    <div class="rounded-md bg-gray-100 p-4 md:p-6 shadow-sm color-background">
      <!-- Hero Section -->
      <Hero
        title="Voice Assistant Testing"
        description="Test the Vapi.ai voice assistant integration for appointment booking. This is a development page for testing voice functionality."
      />

      <!-- Voice Assistant Testing Section -->
      <div class="mt-8">
        <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
          <!-- Voice Assistant Controls -->
          <div
            class="border-border-light dark:border-border-dark rounded-lg border p-6 color-background"
          >
            <div class="flex items-center space-x-3 mb-6">
              <div
                class="w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center"
              >
                <svg
                  class="w-6 h-6 text-blue-600 dark:text-blue-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"
                  ></path>
                </svg>
              </div>
              <div>
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Voice Assistant</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  Test voice-powered appointment booking
                </p>
              </div>
            </div>

            <div class="space-y-4">
              <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
                <h4 class="font-medium text-blue-900 dark:text-blue-100 mb-2">How it works:</h4>
                <ul class="text-sm text-blue-800 dark:text-blue-200 space-y-1">
                  <li>• User calls your phone number</li>
                  <li>• AI assistant answers and guides them through booking</li>
                  <li>• Natural conversation to find available times</li>
                  <li>• Automatic appointment creation in Cal.com</li>
                </ul>
              </div>

              <div class="space-y-3">
                <button
                  id="test-voice-assistant"
                  class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors flex items-center justify-center space-x-2"
                >
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"
                    ></path>
                  </svg>
                  <span>Test Voice Assistant</span>
                </button>

                <button
                  id="check-assistant-status"
                  class="w-full bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  Check Assistant Status
                </button>
              </div>

              <div id="voice-status" class="mt-4 text-sm text-gray-600 dark:text-gray-400 hidden">
                <div class="flex items-center space-x-2">
                  <div class="animate-pulse w-2 h-2 bg-blue-600 rounded-full"></div>
                  <span>Processing...</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Configuration Status -->
          <div
            class="border-border-light dark:border-border-dark rounded-lg border p-6 color-background"
          >
            <div class="flex items-center space-x-3 mb-6">
              <div
                class="w-12 h-12 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center"
              >
                <svg
                  class="w-6 h-6 text-green-600 dark:text-green-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <div>
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Configuration</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">System status and setup</p>
              </div>
            </div>

            <div id="config-status" class="space-y-3">
              <div class="flex items-center justify-between p-3 color-background rounded-lg">
                <span class="text-sm font-medium">Vapi.ai API Key</span>
                <span id="vapi-key-status" class="text-sm text-gray-500">Checking...</span>
              </div>

              <div class="flex items-center justify-between p-3 color-background rounded-lg">
                <span class="text-sm font-medium">Assistant ID</span>
                <span id="assistant-id-status" class="text-sm text-gray-500">Checking...</span>
              </div>

              <div class="flex items-center justify-between p-3 color-background rounded-lg">
                <span class="text-sm font-medium">Cal.com Integration</span>
                <span id="calcom-status" class="text-sm text-gray-500">Checking...</span>
              </div>
            </div>

            <div class="mt-6 p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg">
              <h4 class="font-medium text-yellow-900 dark:text-yellow-100 mb-2">
                Setup Instructions:
              </h4>
              <ol class="text-sm text-yellow-800 dark:text-yellow-200 space-y-1">
                <li>1. Get Vapi.ai API key from dashboard</li>
                <li>
                  2. Run: <code class="bg-yellow-100 dark:bg-yellow-800 px-1 rounded"
                    >node scripts/vapi-assistant-config.js</code
                  >
                </li>
                <li>3. Add assistant ID to .env file</li>
                <li>4. Configure phone number in Vapi.ai</li>
              </ol>
            </div>
          </div>
        </div>

        <!-- Phone Number Display -->
        <div
          class="mt-8 p-6 bg-gradient-to-r from-blue-50 to-green-50 dark:from-blue-900/20 dark:to-green-900/20 rounded-lg border border-blue-200 dark:border-blue-800"
        >
          <div class="text-center">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
              Phone Number for Testing
            </h3>
            <p class="text-gray-600 dark:text-gray-400 mb-4">
              Once configured, users can call this number to book appointments with the AI
              assistant:
            </p>
            <div class="text-2xl font-mono font-bold text-blue-600 dark:text-blue-400">
              +1 (617) 581 0583
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</App>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const testButton = document.getElementById("test-voice-assistant");
    const statusButton = document.getElementById("check-assistant-status");
    const voiceStatus = document.getElementById("voice-status");
    const configStatus = document.getElementById("config-status");

    // Check system status on load
    checkSystemStatus();

    // Test voice assistant
    if (testButton) {
      testButton.addEventListener("click", async () => {
        try {
          voiceStatus?.classList.remove("hidden");
          testButton.disabled = true;
          testButton.innerHTML = `
            <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-white mx-auto"></div>
            <span class="ml-2">Testing...</span>
          `;

          console.log("🧪 [VOICE-TEST] Testing voice assistant...");

          // Test assistant availability
          const assistantResponse = await fetch("/api/vapi/assistant");
          if (!assistantResponse.ok) {
            throw new Error("Assistant not configured");
          }

          const assistant = await assistantResponse.json();
          console.log("✅ [VOICE-TEST] Assistant found:", assistant.assistant.id);

          // Simulate call initiation (without actually calling)
          const callResponse = await fetch("/api/vapi/call", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              assistantId: assistant.assistant.id,
              customer: {
                number: "+16175810583",
                name: "Test User",
              },
            }),
          });

          if (!callResponse.ok) {
            throw new Error("Failed to initiate call");
          }

          const call = await callResponse.json();
          console.log("🎤 [VOICE-TEST] Call test successful:", call.call.id);

          voiceStatus.innerHTML = `
            <div class="flex items-center space-x-2 text-green-600">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              <span>Voice assistant is working! Call would be initiated successfully.</span>
            </div>
          `;
        } catch (error) {
          console.error("❌ [VOICE-TEST] Error:", error);

          voiceStatus.innerHTML = `
            <div class="flex items-center space-x-2 text-red-600">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>Voice assistant test failed: ${error.message}</span>
            </div>
          `;
        } finally {
          testButton.disabled = false;
          testButton.innerHTML = `
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"></path>
            </svg>
            <span>Test Voice Assistant</span>
          `;
        }
      });
    }

    // Check assistant status
    if (statusButton) {
      statusButton.addEventListener("click", checkSystemStatus);
    }

    async function checkSystemStatus() {
      try {
        // Check Vapi.ai API key
        const vapiKeyStatus = document.getElementById("vapi-key-status");
        if (vapiKeyStatus) {
          vapiKeyStatus.textContent = "Checking...";
          vapiKeyStatus.className = "text-sm text-gray-500";
        }

        // Check Vapi.ai status using the new status endpoint
        const statusResponse = await fetch("/api/vapi/status");
        const assistantIdStatus = document.getElementById("assistant-id-status");

        if (statusResponse.ok) {
          const status = await statusResponse.json();
          console.log("🔍 [STATUS] Vapi.ai status:", status.status);

          // Update API Key status
          if (status.status.apiKey.configured && status.status.apiKey.hasValue) {
            vapiKeyStatus.textContent = "✅ Configured";
            vapiKeyStatus.className = "text-sm text-green-600";
          } else {
            vapiKeyStatus.textContent = "❌ Not configured";
            vapiKeyStatus.className = "text-sm text-red-600";
          }

          // Update Assistant status
          if (status.status.assistant.configured && status.status.assistant.id) {
            assistantIdStatus.textContent = `✅ ${status.status.assistant.id}`;
            assistantIdStatus.className = "text-sm text-green-600";
          } else {
            assistantIdStatus.textContent = "❌ Not configured";
            assistantIdStatus.className = "text-sm text-red-600";
          }
        } else {
          if (vapiKeyStatus) {
            vapiKeyStatus.textContent = "❌ Not configured";
            vapiKeyStatus.className = "text-sm text-red-600";
          }
          if (assistantIdStatus) {
            assistantIdStatus.textContent = "❌ Not found";
            assistantIdStatus.className = "text-sm text-red-600";
          }
        }

        // Check Cal.com integration
        const calcomStatus = document.getElementById("calcom-status");
        if (calcomStatus) {
          calcomStatus.textContent = "✅ Connected";
          calcomStatus.className = "text-sm text-green-600";
        }
      } catch (error) {
        console.error("❌ [STATUS-CHECK] Error:", error);

        const vapiKeyStatus = document.getElementById("vapi-key-status");
        const assistantIdStatus = document.getElementById("assistant-id-status");
        const calcomStatus = document.getElementById("calcom-status");

        if (vapiKeyStatus) {
          vapiKeyStatus.textContent = "❌ Error";
          vapiKeyStatus.className = "text-sm text-red-600";
        }
        if (assistantIdStatus) {
          assistantIdStatus.textContent = "❌ Error";
          assistantIdStatus.className = "text-sm text-red-600";
        }
        if (calcomStatus) {
          calcomStatus.textContent = "❌ Error";
          calcomStatus.className = "text-sm text-red-600";
        }
      }
    }
  });
</script>
