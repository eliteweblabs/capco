---
import App from "../components/common/App.astro";
import SlotMachinePicker from "../components/common/SlotMachinePicker.astro";

// Example data
const statusOptions = [
  { value: "0", label: "New Project" },
  { value: "10", label: "In Review" },
  { value: "20", label: "Approved" },
  { value: "30", label: "In Progress" },
  { value: "40", label: "Completed" },
  { value: "50", label: "Delivered" },
  { value: "60", label: "On Hold" },
  { value: "70", label: "Cancelled" },
  { value: "80", label: "Archived" },
  { value: "90", label: "Pending Review" },
  { value: "100", label: "Final Review" },
  { value: "110", label: "Ready for Delivery" },
  { value: "120", label: "Under Construction" },
  { value: "130", label: "Design Phase" },
  { value: "140", label: "Planning Phase" },
  { value: "150", label: "Testing Phase" },
  { value: "160", label: "Quality Assurance" },
  { value: "170", label: "Client Review" },
  { value: "180", label: "Revision Required" },
  { value: "190", label: "Final Approval" },
];

const staffOptions = [
  { value: "1", label: "John Smith" },
  { value: "2", label: "Sarah Johnson" },
  { value: "3", label: "Mike Wilson" },
  { value: "4", label: "Emily Davis" },
  { value: "5", label: "David Brown" },
  { value: "6", label: "Lisa Anderson" },
  { value: "7", label: "Alex Rodriguez" },
  { value: "8", label: "Maria Garcia" },
  { value: "9", label: "James Wilson" },
  { value: "10", label: "Jennifer Lee" },
  { value: "11", label: "Robert Taylor" },
  { value: "12", label: "Amanda Clark" },
  { value: "13", label: "Christopher Lee" },
  { value: "14", label: "Michelle White" },
  { value: "15", label: "Daniel Martinez" },
  { value: "16", label: "Ashley Thompson" },
  { value: "17", label: "Kevin Anderson" },
  { value: "18", label: "Rachel Green" },
  { value: "19", label: "Michael Scott" },
  { value: "20", label: "Pam Beesly" },
  { value: "21", label: "Jim Halpert" },
  { value: "22", label: "Dwight Schrute" },
  { value: "23", label: "Angela Martin" },
  { value: "24", label: "Stanley Hudson" },
  { value: "25", label: "Phyllis Vance" },
];

const priorityOptions = [
  { value: "low", label: "Low Priority" },
  { value: "medium", label: "Medium Priority" },
  { value: "high", label: "High Priority" },
  { value: "urgent", label: "Urgent" },
  { value: "critical", label: "Critical" },
  { value: "emergency", label: "Emergency" },
  { value: "routine", label: "Routine" },
  { value: "normal", label: "Normal" },
  { value: "important", label: "Important" },
  { value: "minor", label: "Minor" },
  { value: "major", label: "Major" },
  { value: "blocking", label: "Blocking" },
  { value: "non-blocking", label: "Non-Blocking" },
  { value: "deferred", label: "Deferred" },
  { value: "immediate", label: "Immediate" },
];
---

<App
  title="Slot Machine Picker Component Demo"
  description="Demo of the reusable slot machine picker component"
>
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900 py-12">
    <div class="max-w-4xl mx-auto px-4">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
          Slot Machine Picker Component
        </h1>
        <p class="text-gray-600 dark:text-gray-400">
          Reusable component with different themes and configurations
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Status Picker - Blue Theme -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Project Status</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Blue theme with pre-selected value
          </p>
          <SlotMachinePicker
            id="status-picker"
            title="Select Project Status"
            options={statusOptions}
            selectedValue="20"
            theme="blue"
            placeholder="Choose status"
          />
          <div id="status-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            Selected: Approved
          </div>
        </div>

        <!-- Staff Picker - Green Theme -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Assign Staff</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Green theme with no pre-selection
          </p>
          <SlotMachinePicker
            id="staff-picker"
            title="Assign Staff Member"
            options={staffOptions}
            theme="green"
            placeholder="Select team member"
          />
          <div id="staff-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            No staff selected
          </div>
        </div>

        <!-- Priority Picker - Orange Theme -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Priority Level</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Orange theme with custom placeholder
          </p>
          <SlotMachinePicker
            id="priority-picker"
            title="Set Priority Level"
            options={priorityOptions}
            theme="orange"
            placeholder="Choose priority"
          />
          <div id="priority-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            No priority selected
          </div>
        </div>

        <!-- Category Picker - Purple Theme -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Project Category</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Purple theme with disabled state
          </p>
          <SlotMachinePicker
            id="category-picker"
            title="Select Project Category"
            options={[
              { value: "residential", label: "Residential" },
              { value: "commercial", label: "Commercial" },
              { value: "industrial", label: "Industrial" },
              { value: "institutional", label: "Institutional" },
              { value: "mixed-use", label: "Mixed Use" },
            ]}
            theme="purple"
            placeholder="Choose category"
            disabled={true}
          />
          <div id="category-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            Disabled picker
          </div>
        </div>

        <!-- Department Picker - Default Theme -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Department</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Default theme with many options
          </p>
          <SlotMachinePicker
            id="department-picker"
            title="Select Department"
            options={[
              { value: "engineering", label: "Engineering" },
              { value: "design", label: "Design" },
              { value: "marketing", label: "Marketing" },
              { value: "sales", label: "Sales" },
              { value: "support", label: "Support" },
              { value: "hr", label: "Human Resources" },
              { value: "finance", label: "Finance" },
              { value: "operations", label: "Operations" },
              { value: "legal", label: "Legal" },
              { value: "it", label: "Information Technology" },
            ]}
            theme="default"
            placeholder="Select department"
          />
          <div id="department-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            No department selected
          </div>
        </div>

        <!-- Location Picker - Custom Theme -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Location</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">
            Custom theme with pre-selected value
          </p>
          <SlotMachinePicker
            id="location-picker"
            title="Select Location"
            options={[
              { value: "boston", label: "Boston, MA" },
              { value: "new-york", label: "New York, NY" },
              { value: "chicago", label: "Chicago, IL" },
              { value: "los-angeles", label: "Los Angeles, CA" },
              { value: "houston", label: "Houston, TX" },
              { value: "phoenix", label: "Phoenix, AZ" },
              { value: "philadelphia", label: "Philadelphia, PA" },
              { value: "san-antonio", label: "San Antonio, TX" },
              { value: "san-diego", label: "San Diego, CA" },
              { value: "dallas", label: "Dallas, TX" },
            ]}
            selectedValue="boston"
            theme="blue"
            placeholder="Choose location"
          />
          <div id="location-result" class="mt-3 text-sm text-gray-600 dark:text-gray-400">
            Selected: Boston, MA
          </div>
        </div>
      </div>

      <!-- Usage Examples Section -->
      <div class="mt-12 bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Usage Examples</h2>
        <div class="space-y-4">
          <div>
            <h3 class="font-medium text-gray-900 dark:text-white mb-2">Basic Usage</h3>
            <pre
              class="bg-gray-100 dark:bg-gray-700 p-3 rounded text-sm overflow-x-auto"><code>&lt;SlotMachinePicker
  id="my-picker"
  title="Select Option"
  options={[
    { value: "1", label: "Option 1" },
    { value: "2", label: "Option 2" }
  ]}
  theme="blue"
  placeholder="Choose an option"
/&gt;</code></pre>
          </div>

          <div>
            <h3 class="font-medium text-gray-900 dark:text-white mb-2">With Pre-selected Value</h3>
            <pre
              class="bg-gray-100 dark:bg-gray-700 p-3 rounded text-sm overflow-x-auto"><code>&lt;SlotMachinePicker
  id="status-picker"
  title="Select Status"
  options={statusOptions}
  selectedValue="20"
  theme="green"
/&gt;</code></pre>
          </div>

          <div>
            <h3 class="font-medium text-gray-900 dark:text-white mb-2">Disabled State</h3>
            <pre
              class="bg-gray-100 dark:bg-gray-700 p-3 rounded text-sm overflow-x-auto"><code>&lt;SlotMachinePicker
  id="disabled-picker"
  title="Select Option"
  options={[
    { value: "1", label: "Option 1" },
    { value: "2", label: "Option 2" }
  ]}
  disabled={true}
  theme="purple"
/&gt;</code></pre>
          </div>
        </div>
      </div>

      <!-- Props Documentation -->
      <div class="mt-8 bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Component Props</h2>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-700">
              <tr>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Prop</th
                >
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Type</th
                >
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Required</th
                >
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  >Description</th
                >
              </tr>
            </thead>
            <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >id</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >string</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >Yes</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Unique identifier for the picker</td
                >
              </tr>
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >title</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >string</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >Yes</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Title displayed in the modal header</td
                >
              </tr>
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >options</td
                >

                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >Yes</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Array of options to display</td
                >
              </tr>
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >selectedValue</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >string</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >No</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Pre-selected option value</td
                >
              </tr>
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >theme</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >'default' | 'blue' | 'green' | 'orange' | 'purple'</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >No</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Color theme for the picker</td
                >
              </tr>
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >placeholder</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >string</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >No</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Placeholder text when no option is selected</td
                >
              </tr>
              <tr>
                <td
                  class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                  >disabled</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >boolean</td
                >
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300"
                  >No</td
                >
                <td class="px-6 py-4 text-sm text-gray-500 dark:text-gray-300"
                  >Whether the picker is disabled</td
                >
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</App>

<script>
  // Example of how to handle selection events
  document.addEventListener("DOMContentLoaded", function () {
    // Status picker callback
    (window as any).status_picker_onSelect = function (value: string, label: string) {
      const element = document.getElementById("status-result");
      if (element) element.textContent = `Selected: ${label}`;
      console.log("Status selected:", value, label);
    };

    // Staff picker callback
    (window as any).staff_picker_onSelect = function (value: string, label: string) {
      const element = document.getElementById("staff-result");
      if (element) element.textContent = `Selected: ${label}`;
      console.log("Staff selected:", value, label);
    };

    // Priority picker callback
    (window as any).priority_picker_onSelect = function (value: string, label: string) {
      const element = document.getElementById("priority-result");
      if (element) element.textContent = `Selected: ${label}`;
      console.log("Priority selected:", value, label);
    };

    // Department picker callback
    (window as any).department_picker_onSelect = function (value: string, label: string) {
      const element = document.getElementById("department-result");
      if (element) element.textContent = `Selected: ${label}`;
      console.log("Department selected:", value, label);
    };

    // Location picker callback
    (window as any).location_picker_onSelect = function (value: string, label: string) {
      const element = document.getElementById("location-result");
      if (element) element.textContent = `Selected: ${label}`;
      console.log("Location selected:", value, label);
    };
  });
</script>
